abstract Law = {

flags startcat = Line ;

cat A ;
cat A2 ;
cat AP ;
cat CN ;
cat Comp ;
cat Conj ;
cat ConjCN ;
cat ConjCop ;
cat ConjItem ;
cat ConjN2 ;
cat ConjNP ;
cat ConjPP ;
cat ConjPPart ;
cat ConjVP2 ;
cat Cop ;
cat Date ;
cat Item ;
cat Line ;
cat N2 ;
cat NP ;
cat Num ;
cat PP ;
cat PPart ;
cat QCN ;
cat RS ;
cat Ref ;
cat S ;
cat SeqPP ;
cat Time ;
cat Title ;
cat V ;
cat V2 ;
cat VP ;
cat VP2 ;

fun A_affected : A ;
fun A_notifiable : A ;
fun A_other : A ;
fun A_prescribed : A ;
fun A_technological : A ;
fun A_written : A ;

fun A2_affected_by :  A2 ;
fun A2_affecting :  A2 ;
fun A2_applicable_to :  A2 ;
fun A2_in_relation_to :  A2 ;
fun A2_mentioned_in :  A2 ;
fun A2_on_behalf_of_and_for_the_purposes_of :  A2 ;
fun A2_other_than : A2 ;
fun A2_processing :  A2 ;
fun A2_under :  A2 ;

fun AP_A2_NP : A2 -> NP -> AP ;

fun CN_A_CN : A -> CN -> CN ;
fun CN_CN__AP_ : CN -> AP -> CN ;
fun CN_CN_AP : CN -> AP -> CN ;
fun CN_CN_ConjPP : CN -> ConjPP -> CN ;
fun CN_CN_RS : CN -> RS -> CN ;
fun CN_Commission : CN ;
fun CN_ConjCN_relating_to_NP : ConjCN -> NP -> CN ;
fun CN_N2_of_NP : N2 -> NP -> CN ;
fun CN_action : CN ;
fun CN_assessment : CN ;
fun CN_assessment_of_whether_S : S -> CN ;
fun CN_class_of_personal_data : CN ;
fun CN_contract : CN ;
fun CN_data_breach : CN ;
fun CN_data_intermediary : CN ;
fun CN_device : CN ;
fun CN_duty : CN ;
fun CN_individual : CN ;
fun CN_individuals : CN ;
fun CN_information : CN ;
fun CN_law : CN ;
fun CN_law_enforcement_agency : CN ;
fun CN_measure : CN ;
fun CN_notification : CN ;
fun CN_number_of_CN : CN -> CN ;
fun CN_obligation : CN ;
fun CN_obligation_of_NP_to_VP : NP -> VP -> CN ;
fun CN_occurrence_of_NP : NP -> CN ;
fun CN_organisation : CN ;
fun CN_person : CN ;
fun CN_personal_data : CN ;
fun CN_professional_conduct : CN ;
fun CN_public_agency : CN ;
fun CN_purpose : CN ;
fun CN_requirement_to_VP : VP -> CN ;
fun CN_requirements : CN ;
fun CN_restriction_on_NP : NP -> CN ;
fun CN_rule_of_NP : NP -> CN ;
fun CN_secrecy : CN ;
fun CN_significant_harm_to_NP : NP -> CN ;
fun CN_storage_medium : CN ;

fun Comp_of_a_significant_scale : Comp ;

fun ConjCN_CN_Conj_CN : CN -> Conj -> CN -> ConjCN ;

fun ConjCop_Cop__Conj_Cop_ : Cop -> Conj -> Cop -> ConjCop ;

fun ConjItem_Item__ConjItem : Item -> ConjItem -> ConjItem ;
fun ConjItem_Item_Conj_Item : Item -> Conj -> Item -> ConjItem ;

fun ConjN2_N2__ConjN2 : N2 -> ConjN2 -> ConjN2 ;
fun ConjN2_N2_Conj_N2 : N2 -> Conj -> N2 -> ConjN2 ;

fun ConjNP_NP_Conj_NP : NP -> Conj -> NP -> ConjNP ;
fun ConjPP_PP_Conj_PP : PP -> Conj -> PP -> ConjPP ;
fun ConjPPart_PPart_Conj_PPart : PPart -> Conj -> PPart -> ConjPPart ;
fun ConjVP2_VP2__Conj_VP2_ : VP2 -> Conj -> VP2 -> ConjVP2 ;
fun Conj_and : Conj ;
fun Conj_or : Conj ;
fun Cop_is : Cop ;
fun Cop_is_likely_to_be : Cop ;
fun Date_1_February_2021 : Date ;
fun Item_1 : Item ;
fun Item_2 : Item ;
fun Item_3 : Item ;
fun Item_3b : Item ;
fun Item_4 : Item ;
fun Item_5 : Item ;
fun Item_6 : Item ;
fun Item_7 : Item ;
fun Item_8 : Item ;
fun Item_9 : Item ;
fun Item_a : Item ;
fun Item_b : Item ;
fun Line_Item_NP_ : Item -> NP -> Line ;
fun Line_Item_NP__Conj : Item -> NP -> Conj -> Line ;
fun Line_Item_S_ : Item -> S -> Line ;
fun Line_Item_S__Conj : Item -> S -> Conj -> Line ;
fun Line_Item_S_if_NP_ : Item -> S -> NP -> Line ;
fun Line_Item_Time__VP__Conj : Item -> Time -> VP -> Conj -> Line ;
fun Line_Item_VP_c : Item -> VP -> Line ;
fun Line_Item_VP_p : Item -> VP -> Line ;
fun Line_Item_VP__Conj : Item -> VP -> Conj -> Line ;
fun Line_Item_an_CN_is_not__PP__to_be_regarded_as_NP_of_ : Item -> CN -> PP -> NP -> Line ;
fun Line_Item_an_CN_must_not_VP_if_ : Item -> CN -> VP -> Line ;
fun Line_Item_any_CN_ : Item -> CN -> Line ;
fun Line_Item_any_CN__Conj : Item -> CN -> Conj -> Line ;
fun Line_Item_PP__a_CN_is_deemed_not_to_be_a_CN_ : Item -> PP -> CN -> CN -> Line ;
fun Line_Item_if_S__Conj : Item -> S -> Conj -> Line ;
fun Line_Item_if_S_Conj : Item -> S -> Conj -> Line ;
fun Line_Item_in_other_prescribed_circumstances_ : Item -> Line ;
fun Line_Item_other_prescribed_circumstances_ : Item -> Line ;
fun Line_Item_PP__where_S__S_ : Item -> PP -> S -> S -> Line ;
fun Line_Item_PP__Time__S_ : Item -> PP -> Time -> S -> Line ;
fun Line_Item_where_a_CN_VP_ : Item -> CN -> VP -> Line ;
fun Line_Item_PP__a_CN_is_deemed_to_VP_ : Item -> PP -> CN -> VP -> Line ;
fun Line_QCN__in_relation_to_NP__means_ : QCN -> NP -> Line ;
fun Line_QCN_means_any_CN_ : QCN -> CN -> Line ;
fun Line_Ref : Ref -> Line ;
fun Line_Ref__PP__unless_S_ : Ref -> PP -> S -> Line ;
fun Line_Ref__where_an_CN_ : Ref -> CN -> Line ;
fun Line_Ref___Item_a_CN_is_a_CN_if_NP_ : Ref -> Item -> CN -> CN -> NP -> Line ;
fun Line_Ref___Item_this_section_applies_to_a_CN_ : Ref -> Item -> CN -> Line ;
fun Line_Ref___Item_where_S__S_ : Ref -> Item -> S -> S -> Line ;
fun Line_S_ : S -> Line ;
fun Line_Title : Title -> Line ;
fun N2_access : N2 ;
fun N2_collection : N2 ;
fun N2_copying : N2 ;
fun N2_disclosure : N2 ;
fun N2_disposal : N2 ;
fun N2_modification : N2 ;
fun N2_use : N2 ;
fun NP_CN : CN -> NP ;
fun NP_NP__including_NP_ : NP -> NP -> NP ;
fun NP_NP__Conj_NP__PP : NP -> Conj -> NP -> PP -> NP ;
fun NP_a_CN : CN -> NP ;
fun NP_all_the_CN_RS : CN -> RS -> NP ;
fun NP_an_CN : CN -> NP ;
fun NP_another_CN : CN -> NP ;
fun NP_any_CN : CN -> NP ;
fun NP_any_ConjCN : ConjCN -> NP ;
fun NP_being_in_breach : NP ;
fun NP_each_CN : CN -> NP ;
fun NP_it : NP ;
fun NP_not_fewer_than_NP : NP -> NP ;
fun NP_notifying_ConjNP : ConjNP -> NP ;
fun NP_section_Item : Item -> NP ;
fun NP_section_Ref : Ref -> NP ;
fun NP_subsection_Item : Item -> NP ;
fun NP_subsection_Ref : Ref -> NP ;
fun NP_subsection_ConjItem : ConjItem -> NP ;
fun NP_subsections_ConjItem : ConjItem -> NP ;
fun NP_that_CN : CN -> NP ;
fun NP_the_CN : CN -> NP ;
fun NP_the_loss_of_any_ConjCN_RS : ConjCN -> RS -> NP ;
fun NP_the_unauthorised_ConjN2_of_NP : ConjN2 -> NP -> NP ;
fun NP_this_CN : CN -> NP ;
fun Num_3 : Num ;
fun PP_PP__but_in_any_case_PP : PP -> PP -> PP ;
fun PP_as_soon_as_is_practicable : PP ;
fun PP_as_to_ConjNP : ConjNP -> PP ;
fun PP_by_reason_only_of_NP : NP -> PP ;
fun PP_despite_NP : NP -> PP ;
fun PP_in_a_reasonable_and_expeditious_manner : PP ;
fun PP_in_accordance_with_NP : NP -> PP ;
fun PP_in_accordance_with_section_Ref : Ref -> PP ;
fun PP_in_any_manner_that_is_reasonable_in_the_circumstances : PP ;
fun PP_in_its_possession : PP ;
fun PP_in_relation_to_NP : NP -> PP ;
fun PP_in_this_Part : PP ;
fun PP_no_later_than_Num_calendar_days_after_the_day_S : Num -> S -> PP ;
fun PP_on_behalf_of_and_for_the_purposes_of_NP : NP -> PP ;
fun PP_on_the_written_application_of_NP : NP -> PP ;
fun PP_only_within_NP : NP -> PP ;
fun PP_prior_to_the_occurrence_of_NP : NP -> PP ;
fun PP_relating_to_NP : NP -> PP ;
fun PP_subject_to_NP : NP -> PP ;
fun PP_subject_to_any_conditions_that_the_Commission_thinks_fit : PP ;
fun PP_to_the_best_of_the_knowledge_and_belief_of_NP : NP -> PP ;
fun PP_at_the_time_NP_notifies_ConjNP : NP -> ConjNP -> PP ;
fun PP__as_the_case_may_be_ : PP ;
fun PP_under_its_control : PP ;
fun PP_upon_notification_by_NP : NP -> PP ;
fun PP_without_limiting_NP : NP -> PP ;
fun PP_without_undue_delay : PP ;
fun PPart_made_in_the_form : PPart ;
fun PPart_submitted_in_the_manner_required_by_the_Commission : PPart ;
fun QCN_affected_individual : QCN ;
fun QCN_data_breach : QCN ;
fun RS_on_which_S : S -> RS ;
fun RS_that_NP_VP : NP -> VP -> RS ;
fun RS_that_VP : VP -> RS ;
fun RS_to_whom_NP_VP : NP -> VP -> RS ;
fun RS_where_S : S -> RS ;
fun Ref_1a : Ref ;
fun Ref_1b : Ref ;
fun Ref_26A : Ref ;
fun Ref_26B : Ref ;
fun Ref_26B1a : Ref ;
fun Ref_26C : Ref ;
fun Ref_26D : Ref ;
fun Ref_26E : Ref ;
fun Ref_402020 : Ref ;
fun S_NP_VP : NP -> VP -> S ;
fun S_NP_is_in_relation_to_NP : NP -> NP -> S ;
fun S_NP_is_likely_to_occur : NP -> S ;
fun S_personal_data_is_stored_in_circumstances_RS : RS -> S ;
fun S_the_context_otherwise_requires : S ;
fun SeqPP_PP : PP -> SeqPP ;
fun SeqPP_PP_SeqPP : PP -> SeqPP -> SeqPP ;
fun Time_on_or_after_assessing_that_S : S -> Time ;
fun Time_on_or_after_notifying_the_Commission_under_subsection_Item : Item -> Time ;
fun Title_Duty_to_conduct_assessment_of_data_breach : Title ;
fun Title_Duty_to_notify_occurrence_of_notifiable_data_breach : Title ;
fun Title_Interpretation_of_this_Part : Title ;
fun Title_NOTIFICATION_OF_DATA_BREACHES : Title ;
fun Title_Notifiable_data_breaches : Title ;
fun Title_PART_6A : Title ;
fun Title_obligations_of_data_intermediary_of_public_agency : Title ;
fun V2_conduct : V2 ;
fun V2_contain : V2 ;
fun VP2_is_likely_to_result_in : VP2 ;
fun VP2_results_in : VP2 ;
fun VP_ConjCop_Comp : ConjCop -> Comp -> VP ;
fun VP_ConjVP2_NP : ConjVP2 -> NP -> VP ;
fun VP_V2__SeqPP__NP : V2 -> SeqPP -> NP -> VP ;
fun VP_VP__Conj_to_VP : VP -> Conj -> VP -> VP ;
fun VP_VP_PP : VP -> PP -> VP ;
fun VP_affects_NP : NP -> VP ;
fun VP_apply_concurrently_with_NP : NP -> VP ;
fun VP_assesses__PP__that_S : PP -> S -> VP ;
fun VP_be_ConjPPart : ConjPPart -> VP ;
fun VP_be_of_a_significant_scale : VP ;
fun VP_believe_that_S : S -> VP ;
fun VP_carry_out_NP : NP -> VP ;
fun VP_conduct_NP : NP -> VP ;
fun VP_does_not_apply_to_NP : NP -> VP ;
fun VP_had_implemented__PP__NP : PP -> NP -> VP ;
fun VP_has_occurred : VP ;
fun VP_has_reason_to_VP : VP -> VP ;
fun VP_is_a_CN : CN -> VP ;
fun VP_is_prescribed_for_NP : NP -> VP ;
fun VP_is_processing_PP : PP -> VP ;
fun VP_makes_NP : NP -> VP ;
fun VP_may__SeqPP__VP : SeqPP -> VP -> VP ;
fun VP_must__SeqPP__VP : SeqPP -> VP -> VP ;
fun VP_must_VP : VP -> VP ;
fun VP_must_also_VP : VP -> VP ;
fun VP_notify_NP : NP -> VP ;
fun VP_notify_NP_of_NP : NP -> NP -> VP ;
fun VP_occurs_on_or_after_Date : Date -> VP ;
fun VP_provide_NP : NP -> VP ;
fun VP_relates : VP ;
fun VP_relates_to_NP : NP -> VP ;
fun VP_renders_it_unlikely_that_S : S -> VP ;
fun VP_result_in_NP : NP -> VP ;
fun VP_so_V : V -> VP ;
fun VP_takes_NP__PP__RS : NP -> PP -> RS -> VP ;
fun VP_waive_NP : NP -> VP ;
fun VP_will_result_in_NP : NP -> VP ;
fun V_directs : V ;
fun V_instructs : V ;

}
