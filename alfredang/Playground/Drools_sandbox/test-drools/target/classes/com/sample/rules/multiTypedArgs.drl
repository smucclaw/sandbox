package com.sample.multiTypedArgs 

import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;

declare ESPred
	name: String @position(0)
	args: List @position(1)
	support: List @position(2)
end

declare ESRule
	name: String @position(0)
	bindings: ArrayList @position(1)
	priors: ArrayList @position(2)
end

rule "checking pred names"
	when 
		$j0: ESPred($n0 := name, name == "Test Pred 1")
		$j1: ESPred($n1 := name, name == "Test Pred 2")
	then
		// ArrayList<Object> ps = new ArrayList<>(new Object[]({$j0, $j1}));
		ArrayList<Object> ps = new ArrayList<>(Arrays.asList($j0, $j1));
		ArrayList<Object> bs = new ArrayList<>(Arrays.asList($n0, $n1));
		insert(new ESRule("Test Rule 1", bs, ps));
end

rule "checking pred args"
	when
		$j0: ESPred($n0 := name, $a0 := args, name == "Test Pred 1")
		contains($a0, "hello world")
	then
		System.out.println("Rule fires");
end


rule "fact1"
	when
	then
		ArrayList<Object> as = new ArrayList<>(Arrays.asList("hello world"));
		ArrayList<Object> sp = new ArrayList<>(Arrays.asList("fact1"));
		insert(new ESPred("Test Pred 1", as, sp));
		// insert(new ESPred("Test Pred 1", (List<Object>)Arrays.asList("hello world"), sp));
end

rule "fact2"
	when
	then
		ArrayList<Object> as = new ArrayList<>(Arrays.asList("goodbye sanity"));
		ArrayList<Object> sp = new ArrayList<>(Arrays.asList("fact2"));
		insert(new ESPred("Test Pred 2", as, sp));
end

function contains(ArrayList<Object> $a, Object $o)
	return $a.contains($o);

query "rule trace"
	$rule : ESRule()
end