// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function(modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x) {
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function(id, exports) {
    modules[id] = [
      function(require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function() {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function() {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"3DdAu":[function(require,module,exports) {
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "69f74e7f31319ffd";
module.bundle.HMR_BUNDLE_ID = "9f4afb0154a7e0e0";
"use strict";
function _createForOfIteratorHelper(o, allowArrayLike) {
    var it;
    if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function F1() {
            };
            return {
                s: F,
                n: function n() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function e(_e) {
                    throw _e;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function s() {
            it = o[Symbol.iterator]();
        },
        n: function n() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function e(_e2) {
            didErr = true;
            err = _e2;
        },
        f: function f() {
            try {
                if (!normalCompletion && it.return != null) it.return();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: mixed;
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData,
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function accept(fn) {
            this._acceptCallbacks.push(fn || function() {
            });
        },
        dispose: function dispose(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, acceptedAssets, assetsToAccept;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || location.port;
} // eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';
    var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe
    ws.onmessage = function(event) {
        checkedAssets = {
        };
        acceptedAssets = {
        };
        assetsToAccept = [];
        var data = JSON.parse(event.data);
        if (data.type === 'update') {
            // Remove error overlay if there is one
            removeErrorOverlay();
            var assets = data.assets.filter(function(asset) {
                return asset.envHash === HMR_ENV_HASH;
            }); // Handle HMR Update
            var handled = assets.every(function(asset) {
                return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                assets.forEach(function(asset) {
                    hmrApply(module.bundle.root, asset);
                });
                for(var i = 0; i < assetsToAccept.length; i++){
                    var id = assetsToAccept[i][1];
                    if (!acceptedAssets[id]) hmrAcceptRun(assetsToAccept[i][0], id);
                }
            } else window.location.reload();
        }
        if (data.type === 'error') {
            // Log parcel errors to console
            var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi), _step;
            try {
                for(_iterator.s(); !(_step = _iterator.n()).done;){
                    var ansiDiagnostic = _step.value;
                    var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                    console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
                } // Render the fancy html overlay
            } catch (err) {
                _iterator.e(err);
            } finally{
                _iterator.f();
            }
            removeErrorOverlay();
            var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe
            document.body.appendChild(overlay);
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn('[parcel] 🚨 Connection to the HMR server was lost');
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log('[parcel] ✨ Error resolved');
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    var errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    var _iterator2 = _createForOfIteratorHelper(diagnostics), _step2;
    try {
        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
            var diagnostic = _step2.value;
            var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
            errorHTML += "\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \uD83D\uDEA8 ".concat(diagnostic.message, "\n        </div>\n        <pre>\n          ").concat(stack, "\n        </pre>\n        <div>\n          ").concat(diagnostic.hints.map(function(hint) {
                return '<div>' + hint + '</div>';
            }).join(''), "\n        </div>\n      </div>\n    ");
        }
    } catch (err) {
        _iterator2.e(err);
    } finally{
        _iterator2.f();
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrApply(bundle, asset) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') {
        reloadCSS();
        return;
    }
    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
    if (deps) {
        var fn = new Function('require', 'module', 'exports', asset.output);
        modules[asset.id] = [
            fn,
            deps
        ];
    } else if (bundle.parent) hmrApply(bundle.parent, asset);
}
function hmrAcceptCheck(bundle, id, depsByBundle) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToAccept.push([
        bundle,
        id
    ]);
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) return true;
    return getParents(module.bundle.root, id).some(function(v) {
        return hmrAcceptCheck(v[0], v[1], null);
    });
}
function hmrAcceptRun(bundle, id) {
    var cached = bundle.cache[id];
    bundle.hotData = {
    };
    if (cached && cached.hot) cached.hot.data = bundle.hotData;
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData);
    });
    delete bundle.cache[id];
    bundle(id);
    cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) // $FlowFixMe[method-unbinding]
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
    });
    acceptedAssets[id] = true;
}

},{}],"lXfBE":[function(require,module,exports) {
require('../output/Main/index.js').main();

},{"../output/Main/index.js":"cawX4"}],"cawX4":[function(require,module,exports) {
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Halogen_Aff_Util = require("../Halogen.Aff.Util/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Events = require("../Halogen.HTML.Events/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Halogen_VDom_Driver = require("../Halogen.VDom.Driver/index.js");
var Increment = function() {
    function Increment1() {
    }
    Increment1.value = new Increment1();
    return Increment1;
}();
var Decrement = function() {
    function Decrement1() {
    }
    Decrement1.value = new Decrement1();
    return Decrement1;
}();
var render = function(dictShow) {
    return function(state) {
        return Halogen_HTML_Elements.div_([
            Halogen_HTML_Elements.button([
                Halogen_HTML_Events.onClick(function(v) {
                    return Decrement.value;
                })
            ])([
                Halogen_HTML_Core.text("-")
            ]),
            Halogen_HTML_Elements.div_([
                Halogen_HTML_Core.text(Data_Show.show(dictShow)(state))
            ]),
            Halogen_HTML_Elements.button([
                Halogen_HTML_Events.onClick(function(v) {
                    return Increment.value;
                })
            ])([
                Halogen_HTML_Core.text("+")
            ])
        ]);
    };
};
var handleAction = function(dictMonadState) {
    return function(v) {
        if (v instanceof Increment) return Control_Monad_State_Class.modify_(dictMonadState)(function(state) {
            return state + 1 | 0;
        });
        if (v instanceof Decrement) return Control_Monad_State_Class.modify_(dictMonadState)(function(state) {
            return state - 1 | 0;
        });
        throw new Error("Failed pattern match at Main (line 41, column 16 - line 43, column 45): " + [
            v.constructor.name
        ]);
    };
};
var component = function() {
    var initialState = function(v) {
        return 0;
    };
    return Halogen_Component.mkComponent({
        initialState: initialState,
        render: render(Data_Show.showInt),
        "eval": Halogen_Component.mkEval({
            handleAction: handleAction(Halogen_Query_HalogenM.monadStateHalogenM),
            handleQuery: Halogen_Component.defaultEval.handleQuery,
            receive: Halogen_Component.defaultEval.receive,
            initialize: Halogen_Component.defaultEval.initialize,
            finalize: Halogen_Component.defaultEval.finalize
        })
    });
}();
var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function(body) {
    return Halogen_VDom_Driver.runUI(component)(Data_Unit.unit)(body);
}));
module.exports = {
    main: main,
    Increment: Increment,
    Decrement: Decrement,
    component: component,
    render: render,
    handleAction: handleAction
};

},{"../Control.Bind/index.js":"7Sory","../Control.Monad.State.Class/index.js":"enW6F","../Data.Show/index.js":"b6tNW","../Data.Unit/index.js":"d7oKp","../Effect.Aff/index.js":"3YiSJ","../Halogen.Aff.Util/index.js":"csHnk","../Halogen.Component/index.js":"2KBrj","../Halogen.HTML.Core/index.js":"eONdi","../Halogen.HTML.Elements/index.js":"lpFvC","../Halogen.HTML.Events/index.js":"hq5Vq","../Halogen.Query.HalogenM/index.js":"7CNtl","../Halogen.VDom.Driver/index.js":"bmPQn"}],"7Sory":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var Bind = function(Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
};
var Discard = function(discard) {
    this.discard = discard;
};
var discard = function(dict) {
    return dict.discard;
};
var bindProxy = new Bind(function() {
    return Control_Apply.applyProxy;
}, function(v) {
    return function(v1) {
        return Type_Proxy["Proxy"].value;
    };
});
var bindFn = new Bind(function() {
    return Control_Apply.applyFn;
}, function(m) {
    return function(f) {
        return function(x) {
            return f(m(x))(x);
        };
    };
});
var bindArray = new Bind(function() {
    return Control_Apply.applyArray;
}, $foreign.arrayBind);
var bind = function(dict) {
    return dict.bind;
};
var bindFlipped = function(dictBind) {
    return Data_Function.flip(bind(dictBind));
};
var composeKleisliFlipped = function(dictBind) {
    return function(f) {
        return function(g) {
            return function(a) {
                return bindFlipped(dictBind)(f)(g(a));
            };
        };
    };
};
var composeKleisli = function(dictBind) {
    return function(f) {
        return function(g) {
            return function(a) {
                return bind(dictBind)(f(a))(g);
            };
        };
    };
};
var discardProxy = new Discard(function(dictBind) {
    return bind(dictBind);
});
var discardProxy2 = new Discard(function(dictBind) {
    return bind(dictBind);
});
var discardProxy3 = new Discard(function(dictBind) {
    return bind(dictBind);
});
var discardUnit = new Discard(function(dictBind) {
    return bind(dictBind);
});
var ifM = function(dictBind) {
    return function(cond) {
        return function(t) {
            return function(f) {
                return bind(dictBind)(cond)(function(cond$prime) {
                    if (cond$prime) return t;
                    return f;
                });
            };
        };
    };
};
var join = function(dictBind) {
    return function(m) {
        return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
    };
};
module.exports = {
    Bind: Bind,
    bind: bind,
    bindFlipped: bindFlipped,
    Discard: Discard,
    discard: discard,
    join: join,
    composeKleisli: composeKleisli,
    composeKleisliFlipped: composeKleisliFlipped,
    ifM: ifM,
    bindFn: bindFn,
    bindArray: bindArray,
    bindProxy: bindProxy,
    discardUnit: discardUnit,
    discardProxy: discardProxy,
    discardProxy2: discardProxy2,
    discardProxy3: discardProxy3,
    Applicative: Control_Applicative.Applicative,
    liftA1: Control_Applicative.liftA1,
    pure: Control_Applicative.pure,
    unless: Control_Applicative.unless,
    when: Control_Applicative.when,
    Apply: Control_Apply.Apply,
    apply: Control_Apply.apply,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"./foreign.js":"byQt7","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Category/index.js":"dfcPK","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Type.Proxy/index.js":"kqak1"}],"byQt7":[function(require,module,exports) {
"use strict";
exports.arrayBind = function(arr) {
    return function(f) {
        var result = [];
        for(var i = 0, l = arr.length; i < l; i++)Array.prototype.push.apply(result, f(arr[i]));
        return result;
    };
};

},{}],"dG9TO":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var Applicative = function(Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
};
var pure = function(dict) {
    return dict.pure;
};
var unless = function(dictApplicative) {
    return function(v) {
        return function(v1) {
            if (!v) return v1;
            if (v) return pure(dictApplicative)(Data_Unit.unit);
            throw new Error("Failed pattern match at Control.Applicative (line 66, column 1 - line 66, column 65): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
var when = function(dictApplicative) {
    return function(v) {
        return function(v1) {
            if (v) return v1;
            if (!v) return pure(dictApplicative)(Data_Unit.unit);
            throw new Error("Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
var liftA1 = function(dictApplicative) {
    return function(f) {
        return function(a) {
            return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeProxy = new Applicative(function() {
    return Control_Apply.applyProxy;
}, function(v) {
    return Type_Proxy["Proxy"].value;
});
var applicativeFn = new Applicative(function() {
    return Control_Apply.applyFn;
}, function(x) {
    return function(v) {
        return x;
    };
});
var applicativeArray = new Applicative(function() {
    return Control_Apply.applyArray;
}, function(x) {
    return [
        x
    ];
});
module.exports = {
    Applicative: Applicative,
    pure: pure,
    liftA1: liftA1,
    unless: unless,
    when: when,
    applicativeFn: applicativeFn,
    applicativeArray: applicativeArray,
    applicativeProxy: applicativeProxy,
    Apply: Control_Apply.Apply,
    apply: Control_Apply.apply,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"../Control.Apply/index.js":"cnlqg","../Data.Functor/index.js":"iy1jO","../Data.Unit/index.js":"d7oKp","../Type.Proxy/index.js":"kqak1"}],"cnlqg":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var Apply = function(Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
};
var applyProxy = new Apply(function() {
    return Data_Functor.functorProxy;
}, function(v) {
    return function(v1) {
        return Type_Proxy["Proxy"].value;
    };
});
var applyFn = new Apply(function() {
    return Data_Functor.functorFn;
}, function(f) {
    return function(g) {
        return function(x) {
            return f(x)(g(x));
        };
    };
});
var applyArray = new Apply(function() {
    return Data_Functor.functorArray;
}, $foreign.arrayApply);
var apply = function(dict) {
    return dict.apply;
};
var applyFirst = function(dictApply) {
    return function(a) {
        return function(b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
        };
    };
};
var applySecond = function(dictApply) {
    return function(a) {
        return function(b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
        };
    };
};
var lift2 = function(dictApply) {
    return function(f) {
        return function(a) {
            return function(b) {
                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
            };
        };
    };
};
var lift3 = function(dictApply) {
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift4 = function(dictApply) {
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift5 = function(dictApply) {
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    Apply: Apply,
    apply: apply,
    applyFirst: applyFirst,
    applySecond: applySecond,
    lift2: lift2,
    lift3: lift3,
    lift4: lift4,
    lift5: lift5,
    applyFn: applyFn,
    applyArray: applyArray,
    applyProxy: applyProxy,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"./foreign.js":"9MX2t","../Control.Category/index.js":"dfcPK","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Type.Proxy/index.js":"kqak1"}],"9MX2t":[function(require,module,exports) {
"use strict";
exports.arrayApply = function(fs) {
    return function(xs) {
        var l = fs.length;
        var k = xs.length;
        var result = new Array(l * k);
        var n = 0;
        for(var i = 0; i < l; i++){
            var f = fs[i];
            for(var j = 0; j < k; j++)result[n++] = f(xs[j]);
        }
        return result;
    };
};

},{}],"dfcPK":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Category = function(Semigroupoid0, identity) {
    this.Semigroupoid0 = Semigroupoid0;
    this.identity = identity;
};
var identity = function(dict) {
    return dict.identity;
};
var categoryFn = new Category(function() {
    return Control_Semigroupoid.semigroupoidFn;
}, function(x) {
    return x;
});
module.exports = {
    Category: Category,
    identity: identity,
    categoryFn: categoryFn,
    Semigroupoid: Control_Semigroupoid.Semigroupoid,
    compose: Control_Semigroupoid.compose
};

},{"../Control.Semigroupoid/index.js":"fSgEH"}],"fSgEH":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Semigroupoid = function(compose) {
    this.compose = compose;
};
var semigroupoidFn = new Semigroupoid(function(f) {
    return function(g) {
        return function(x) {
            return f(g(x));
        };
    };
});
var compose = function(dict) {
    return dict.compose;
};
var composeFlipped = function(dictSemigroupoid) {
    return function(f) {
        return function(g) {
            return compose(dictSemigroupoid)(g)(f);
        };
    };
};
module.exports = {
    compose: compose,
    Semigroupoid: Semigroupoid,
    composeFlipped: composeFlipped,
    semigroupoidFn: semigroupoidFn
};

},{}],"cuwEt":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var on = function(f) {
    return function(g) {
        return function(x) {
            return function(y) {
                return f(g(x))(g(y));
            };
        };
    };
};
var flip = function(f) {
    return function(b) {
        return function(a) {
            return f(a)(b);
        };
    };
};
var $$const = function(a) {
    return function(v) {
        return a;
    };
};
var applyN = function(f) {
    var go = function($copy_n) {
        return function($copy_acc) {
            var $tco_var_n = $copy_n;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(n, acc) {
                if (n <= 0) {
                    $tco_done = true;
                    return acc;
                }
                if (Data_Boolean.otherwise) {
                    $tco_var_n = n - 1 | 0;
                    $copy_acc = f(acc);
                    return;
                }
                throw new Error("Failed pattern match at Data.Function (line 100, column 3 - line 102, column 37): " + [
                    n.constructor.name,
                    acc.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_n, $copy_acc);
            return $tco_result;
        };
    };
    return go;
};
var applyFlipped = function(x) {
    return function(f) {
        return f(x);
    };
};
var apply = function(f) {
    return function(x) {
        return f(x);
    };
};
module.exports = {
    flip: flip,
    "const": $$const,
    apply: apply,
    applyFlipped: applyFlipped,
    applyN: applyN,
    on: on,
    compose: Control_Category.compose,
    identity: Control_Category.identity
};

},{"../Control.Category/index.js":"dfcPK","../Data.Boolean/index.js":"lv1qw"}],"lv1qw":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var otherwise = true;
module.exports = {
    otherwise: otherwise
};

},{}],"iy1jO":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var Functor = function(map) {
    this.map = map;
};
var map = function(dict) {
    return dict.map;
};
var mapFlipped = function(dictFunctor) {
    return function(fa) {
        return function(f) {
            return map(dictFunctor)(f)(fa);
        };
    };
};
var $$void = function(dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};
var voidLeft = function(dictFunctor) {
    return function(f) {
        return function(x) {
            return map(dictFunctor)(Data_Function["const"](x))(f);
        };
    };
};
var voidRight = function(dictFunctor) {
    return function(x) {
        return map(dictFunctor)(Data_Function["const"](x));
    };
};
var functorProxy = new Functor(function(v) {
    return function(v1) {
        return Type_Proxy["Proxy"].value;
    };
});
var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);
var flap = function(dictFunctor) {
    return function(ff) {
        return function(x) {
            return map(dictFunctor)(function(f) {
                return f(x);
            })(ff);
        };
    };
};
module.exports = {
    Functor: Functor,
    map: map,
    mapFlipped: mapFlipped,
    "void": $$void,
    voidRight: voidRight,
    voidLeft: voidLeft,
    flap: flap,
    functorFn: functorFn,
    functorArray: functorArray,
    functorProxy: functorProxy
};

},{"./foreign.js":"eeIQ2","../Control.Semigroupoid/index.js":"fSgEH","../Data.Function/index.js":"cuwEt","../Data.Unit/index.js":"d7oKp","../Type.Proxy/index.js":"kqak1"}],"eeIQ2":[function(require,module,exports) {
"use strict";
exports.arrayMap = function(f) {
    return function(arr) {
        var l = arr.length;
        var result = new Array(l);
        for(var i = 0; i < l; i++)result[i] = f(arr[i]);
        return result;
    };
};

},{}],"d7oKp":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Show = require("../Data.Show/index.js");
var showUnit = new Data_Show.Show(function(v) {
    return "unit";
});
module.exports = {
    showUnit: showUnit,
    unit: $foreign.unit
};

},{"./foreign.js":"lbMuk","../Data.Show/index.js":"b6tNW"}],"lbMuk":[function(require,module,exports) {
"use strict";
exports.unit = {
};

},{}],"b6tNW":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var ShowRecordFields = function(showRecordFields) {
    this.showRecordFields = showRecordFields;
};
var Show = function(show) {
    this.show = show;
};
var showString = new Show($foreign.showStringImpl);
var showRecordFieldsNil = new ShowRecordFields(function(v) {
    return function(v1) {
        return [];
    };
});
var showRecordFields = function(dict) {
    return dict.showRecordFields;
};
var showRecord = function(dictRowToList) {
    return function(dictShowRecordFields) {
        return new Show(function(record) {
            var v = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
            if (v.length === 0) return "{}";
            return $foreign.join(" ")([
                "{",
                $foreign.join(", ")(v),
                "}"
            ]);
        });
    };
};
var showProxy3 = new Show(function(v) {
    return "Proxy3";
});
var showProxy2 = new Show(function(v) {
    return "Proxy2";
});
var showProxy = new Show(function(v) {
    return "Proxy";
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function(v) {
    if (v) return "true";
    if (!v) return "false";
    throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 22, column 23): " + [
        v.constructor.name
    ]);
});
var show = function(dict) {
    return dict.show;
};
var showArray = function(dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
var showRecordFieldsCons = function(dictIsSymbol) {
    return function(dictShowRecordFields) {
        return function(dictShow) {
            return new ShowRecordFields(function(v) {
                return function(record) {
                    var tail = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                    var focus = Record_Unsafe.unsafeGet(key)(record);
                    return $foreign.cons($foreign.join(": ")([
                        key,
                        show(dictShow)(focus)
                    ]))(tail);
                };
            });
        };
    };
};
module.exports = {
    Show: Show,
    show: show,
    ShowRecordFields: ShowRecordFields,
    showRecordFields: showRecordFields,
    showBoolean: showBoolean,
    showInt: showInt,
    showNumber: showNumber,
    showChar: showChar,
    showString: showString,
    showArray: showArray,
    showProxy: showProxy,
    showProxy2: showProxy2,
    showProxy3: showProxy3,
    showRecord: showRecord,
    showRecordFieldsNil: showRecordFieldsNil,
    showRecordFieldsCons: showRecordFieldsCons
};

},{"./foreign.js":"jdqMb","../Data.Symbol/index.js":"6s2wm","../Record.Unsafe/index.js":"6NDQI","../Type.Proxy/index.js":"kqak1"}],"jdqMb":[function(require,module,exports) {
"use strict";
exports.showIntImpl = function(n) {
    return n.toString();
};
exports.showNumberImpl = function(n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
};
exports.showCharImpl = function(c) {
    var code = c.charCodeAt(0);
    if (code < 32 || code === 127) {
        switch(c){
            case "\x07":
                return "'\\a'";
            case "\b":
                return "'\\b'";
            case "\f":
                return "'\\f'";
            case "\n":
                return "'\\n'";
            case "\r":
                return "'\\r'";
            case "\t":
                return "'\\t'";
            case "\v":
                return "'\\v'";
        }
        return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};
exports.showStringImpl = function(s) {
    var l = s.length;
    return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, function(c, i) {
        switch(c){
            case "\"":
            case "\\":
                return "\\" + c;
            case "\x07":
                return "\\a";
            case "\b":
                return "\\b";
            case "\f":
                return "\\f";
            case "\n":
                return "\\n";
            case "\r":
                return "\\r";
            case "\t":
                return "\\t";
            case "\v":
                return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
    }) + "\"";
};
exports.showArrayImpl = function(f) {
    return function(xs) {
        var ss = [];
        for(var i = 0, l = xs.length; i < l; i++)ss[i] = f(xs[i]);
        return "[" + ss.join(",") + "]";
    };
};
exports.cons = function(head) {
    return function(tail) {
        return [
            head
        ].concat(tail);
    };
};
exports.join = function(separator) {
    return function(xs) {
        return xs.join(separator);
    };
};

},{}],"6s2wm":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var SProxy = function() {
    function SProxy1() {
    }
    SProxy1.value = new SProxy1();
    return SProxy1;
}();
var IsSymbol = function(reflectSymbol) {
    this.reflectSymbol = reflectSymbol;
};
var reifySymbol = function(s) {
    return function(f) {
        return $foreign.unsafeCoerce(function(dictIsSymbol) {
            return f(dictIsSymbol);
        })({
            reflectSymbol: function(v) {
                return s;
            }
        })(Type_Proxy["Proxy"].value);
    };
};
var reflectSymbol = function(dict) {
    return dict.reflectSymbol;
};
module.exports = {
    IsSymbol: IsSymbol,
    reflectSymbol: reflectSymbol,
    reifySymbol: reifySymbol,
    SProxy: SProxy
};

},{"./foreign.js":"cTDt1","../Type.Proxy/index.js":"kqak1"}],"cTDt1":[function(require,module,exports) {
"use strict";
// module Data.Symbol
exports.unsafeCoerce = function(arg) {
    return arg;
};

},{}],"kqak1":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Proxy3 = function() {
    function Proxy31() {
    }
    Proxy31.value = new Proxy31();
    return Proxy31;
}();
var Proxy2 = function() {
    function Proxy21() {
    }
    Proxy21.value = new Proxy21();
    return Proxy21;
}();
var $$Proxy = function() {
    function $$Proxy1() {
    }
    $$Proxy1.value = new $$Proxy1();
    return $$Proxy1;
}();
module.exports = {
    "Proxy": $$Proxy,
    Proxy2: Proxy2,
    Proxy3: Proxy3
};

},{}],"6NDQI":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    unsafeHas: $foreign.unsafeHas,
    unsafeGet: $foreign.unsafeGet,
    unsafeSet: $foreign.unsafeSet,
    unsafeDelete: $foreign.unsafeDelete
};

},{"./foreign.js":"htRCL"}],"htRCL":[function(require,module,exports) {
"use strict";
exports.unsafeHas = function(label) {
    return function(rec) {
        return ({
        }).hasOwnProperty.call(rec, label);
    };
};
exports.unsafeGet = function(label) {
    return function(rec) {
        return rec[label];
    };
};
exports.unsafeSet = function(label) {
    return function(value) {
        return function(rec) {
            var copy = {
            };
            for(var key in rec)if (({
            }).hasOwnProperty.call(rec, key)) copy[key] = rec[key];
            copy[label] = value;
            return copy;
        };
    };
};
exports.unsafeDelete = function(label) {
    return function(rec) {
        var copy = {
        };
        for(var key in rec)if (key !== label && ({
        }).hasOwnProperty.call(rec, key)) copy[key] = rec[key];
        return copy;
    };
};

},{}],"enW6F":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var MonadState = function(Monad0, state) {
    this.Monad0 = Monad0;
    this.state = state;
};
var state = function(dict) {
    return dict.state;
};
var put = function(dictMonadState) {
    return function(s) {
        return state(dictMonadState)(function(v) {
            return new Data_Tuple.Tuple(Data_Unit.unit, s);
        });
    };
};
var modify_ = function(dictMonadState) {
    return function(f) {
        return state(dictMonadState)(function(s) {
            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
        });
    };
};
var modify = function(dictMonadState) {
    return function(f) {
        return state(dictMonadState)(function(s) {
            var s$prime = f(s);
            return new Data_Tuple.Tuple(s$prime, s$prime);
        });
    };
};
var gets = function(dictMonadState) {
    return function(f) {
        return state(dictMonadState)(function(s) {
            return new Data_Tuple.Tuple(f(s), s);
        });
    };
};
var get = function(dictMonadState) {
    return state(dictMonadState)(function(s) {
        return new Data_Tuple.Tuple(s, s);
    });
};
module.exports = {
    state: state,
    MonadState: MonadState,
    get: get,
    gets: gets,
    put: put,
    modify: modify,
    modify_: modify_
};

},{"../Data.Tuple/index.js":"eOBbM","../Data.Unit/index.js":"d7oKp"}],"eOBbM":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Tuple = function() {
    function Tuple1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Tuple1.create = function(value0) {
        return function(value1) {
            return new Tuple1(value0, value1);
        };
    };
    return Tuple1;
}();
var uncurry = function(f) {
    return function(v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function(v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function(v) {
    return v.value1;
};
var showTuple = function(dictShow) {
    return function(dictShow1) {
        return new Data_Show.Show(function(v) {
            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var semiringTuple = function(dictSemiring) {
    return function(dictSemiring1) {
        return new Data_Semiring.Semiring(function(v) {
            return function(v1) {
                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
            };
        }, function(v) {
            return function(v1) {
                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
    };
};
var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function(v) {
    return function(v1) {
        return new Tuple(v1.value0, v.value1);
    };
});
var semigroupTuple = function(dictSemigroup) {
    return function(dictSemigroup1) {
        return new Data_Semigroup.Semigroup(function(v) {
            return function(v1) {
                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
            };
        });
    };
};
var ringTuple = function(dictRing) {
    return function(dictRing1) {
        return new Data_Ring.Ring(function() {
            return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
        }, function(v) {
            return function(v1) {
                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
            };
        });
    };
};
var monoidTuple = function(dictMonoid) {
    return function(dictMonoid1) {
        return new Data_Monoid.Monoid(function() {
            return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
    };
};
var heytingAlgebraTuple = function(dictHeytingAlgebra) {
    return function(dictHeytingAlgebra1) {
        return new Data_HeytingAlgebra.HeytingAlgebra(function(v) {
            return function(v1) {
                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function(v) {
            return function(v1) {
                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function(v) {
            return function(v1) {
                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function(v) {
            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
    };
};
var genericTuple = new Data_Generic_Rep.Generic(function(x) {
    return new Data_Generic_Rep.Product(x.value0, x.value1);
}, function(x) {
    return new Tuple(x.value0, x.value1);
});
var functorTuple = new Data_Functor.Functor(function(f) {
    return function(m) {
        return new Tuple(m.value0, f(m.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function(v) {
    return v.value0;
};
var lazyTuple = function(dictLazy) {
    return function(dictLazy1) {
        return new Control_Lazy.Lazy(function(f) {
            return new Tuple(Control_Lazy.defer(dictLazy)(function(v) {
                return fst(f(Data_Unit.unit));
            }), Control_Lazy.defer(dictLazy1)(function(v) {
                return snd(f(Data_Unit.unit));
            }));
        });
    };
};
var extendTuple = new Control_Extend.Extend(function() {
    return functorTuple;
}, function(f) {
    return function(v) {
        return new Tuple(v.value0, f(v));
    };
});
var eqTuple = function(dictEq) {
    return function(dictEq1) {
        return new Data_Eq.Eq(function(x) {
            return function(y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordTuple = function(dictOrd) {
    return function(dictOrd1) {
        return new Data_Ord.Ord(function() {
            return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function(x) {
            return function(y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) return Data_Ordering.LT.value;
                if (v instanceof Data_Ordering.GT) return Data_Ordering.GT.value;
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var eq1Tuple = function(dictEq) {
    return new Data_Eq.Eq1(function(dictEq1) {
        return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
    });
};
var ord1Tuple = function(dictOrd) {
    return new Data_Ord.Ord1(function() {
        return eq1Tuple(dictOrd.Eq0());
    }, function(dictOrd1) {
        return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
    });
};
var curry = function(f) {
    return function(a) {
        return function(b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function() {
    return extendTuple;
}, snd);
var commutativeRingTuple = function(dictCommutativeRing) {
    return function(dictCommutativeRing1) {
        return new Data_CommutativeRing.CommutativeRing(function() {
            return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
        });
    };
};
var boundedTuple = function(dictBounded) {
    return function(dictBounded1) {
        return new Data_Bounded.Bounded(function() {
            return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
    };
};
var booleanAlgebraTuple = function(dictBooleanAlgebra) {
    return function(dictBooleanAlgebra1) {
        return new Data_BooleanAlgebra.BooleanAlgebra(function() {
            return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
        });
    };
};
var applyTuple = function(dictSemigroup) {
    return new Control_Apply.Apply(function() {
        return functorTuple;
    }, function(v) {
        return function(v1) {
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
        };
    });
};
var bindTuple = function(dictSemigroup) {
    return new Control_Bind.Bind(function() {
        return applyTuple(dictSemigroup);
    }, function(v) {
        return function(f) {
            var v1 = f(v.value1);
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
        };
    });
};
var applicativeTuple = function(dictMonoid) {
    return new Control_Applicative.Applicative(function() {
        return applyTuple(dictMonoid.Semigroup0());
    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};
var monadTuple = function(dictMonoid) {
    return new Control_Monad.Monad(function() {
        return applicativeTuple(dictMonoid);
    }, function() {
        return bindTuple(dictMonoid.Semigroup0());
    });
};
module.exports = {
    Tuple: Tuple,
    fst: fst,
    snd: snd,
    curry: curry,
    uncurry: uncurry,
    swap: swap,
    showTuple: showTuple,
    eqTuple: eqTuple,
    eq1Tuple: eq1Tuple,
    ordTuple: ordTuple,
    ord1Tuple: ord1Tuple,
    boundedTuple: boundedTuple,
    semigroupoidTuple: semigroupoidTuple,
    semigroupTuple: semigroupTuple,
    monoidTuple: monoidTuple,
    semiringTuple: semiringTuple,
    ringTuple: ringTuple,
    commutativeRingTuple: commutativeRingTuple,
    heytingAlgebraTuple: heytingAlgebraTuple,
    booleanAlgebraTuple: booleanAlgebraTuple,
    functorTuple: functorTuple,
    genericTuple: genericTuple,
    invariantTuple: invariantTuple,
    applyTuple: applyTuple,
    applicativeTuple: applicativeTuple,
    bindTuple: bindTuple,
    monadTuple: monadTuple,
    extendTuple: extendTuple,
    comonadTuple: comonadTuple,
    lazyTuple: lazyTuple
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Comonad/index.js":"hfPua","../Control.Extend/index.js":"kAltv","../Control.Lazy/index.js":"chn7k","../Control.Monad/index.js":"alCn2","../Control.Semigroupoid/index.js":"fSgEH","../Data.BooleanAlgebra/index.js":"l0dkx","../Data.Bounded/index.js":"jzt4h","../Data.CommutativeRing/index.js":"2q7tT","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Functor.Invariant/index.js":"hYAzT","../Data.Generic.Rep/index.js":"2rL8E","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Ring/index.js":"2x2oG","../Data.Semigroup/index.js":"4sNah","../Data.Semiring/index.js":"39btI","../Data.Show/index.js":"b6tNW","../Data.Unit/index.js":"d7oKp"}],"hfPua":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Extend = require("../Control.Extend/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Comonad = function(Extend0, extract) {
    this.Extend0 = Extend0;
    this.extract = extract;
};
var extract = function(dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad,
    extract: extract,
    Extend: Control_Extend.Extend,
    duplicate: Control_Extend.duplicate,
    extend: Control_Extend.extend,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"../Control.Extend/index.js":"kAltv","../Data.Functor/index.js":"iy1jO"}],"kAltv":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Extend = function(Functor0, extend) {
    this.Functor0 = Functor0;
    this.extend = extend;
};
var extendFn = function(dictSemigroup) {
    return new Extend(function() {
        return Data_Functor.functorFn;
    }, function(f) {
        return function(g) {
            return function(w) {
                return f(function(w$prime) {
                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
                });
            };
        };
    });
};
var extendArray = new Extend(function() {
    return Data_Functor.functorArray;
}, $foreign.arrayExtend);
var extend = function(dict) {
    return dict.extend;
};
var extendFlipped = function(dictExtend) {
    return function(w) {
        return function(f) {
            return extend(dictExtend)(f)(w);
        };
    };
};
var duplicate = function(dictExtend) {
    return extend(dictExtend)(Control_Category.identity(Control_Category.categoryFn));
};
var composeCoKleisliFlipped = function(dictExtend) {
    return function(f) {
        return function(g) {
            return function(w) {
                return f(extend(dictExtend)(g)(w));
            };
        };
    };
};
var composeCoKleisli = function(dictExtend) {
    return function(f) {
        return function(g) {
            return function(w) {
                return g(extend(dictExtend)(f)(w));
            };
        };
    };
};
module.exports = {
    Extend: Extend,
    extend: extend,
    extendFlipped: extendFlipped,
    composeCoKleisli: composeCoKleisli,
    composeCoKleisliFlipped: composeCoKleisliFlipped,
    duplicate: duplicate,
    extendFn: extendFn,
    extendArray: extendArray,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"./foreign.js":"cqcmB","../Control.Category/index.js":"dfcPK","../Data.Functor/index.js":"iy1jO","../Data.Semigroup/index.js":"4sNah"}],"cqcmB":[function(require,module,exports) {
"use strict";
exports.arrayExtend = function(f) {
    return function(xs) {
        return xs.map(function(_, i, xs1) {
            return f(xs1.slice(i));
        });
    };
};

},{}],"4sNah":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var SemigroupRecord = function(appendRecord) {
    this.appendRecord = appendRecord;
};
var Semigroup = function(append) {
    this.append = append;
};
var semigroupVoid = new Semigroup(function(v) {
    return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function(v) {
    return function(v1) {
        return Data_Unit.unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupRecordNil = new SemigroupRecord(function(v) {
    return function(v1) {
        return function(v2) {
            return {
            };
        };
    };
});
var semigroupProxy3 = new Semigroup(function(v) {
    return function(v1) {
        return Type_Proxy.Proxy3.value;
    };
});
var semigroupProxy2 = new Semigroup(function(v) {
    return function(v1) {
        return Type_Proxy.Proxy2.value;
    };
});
var semigroupProxy = new Semigroup(function(v) {
    return function(v1) {
        return Type_Proxy["Proxy"].value;
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var appendRecord = function(dict) {
    return dict.appendRecord;
};
var semigroupRecord = function(dictRowToList) {
    return function(dictSemigroupRecord) {
        return new Semigroup(appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value));
    };
};
var append = function(dict) {
    return dict.append;
};
var semigroupFn = function(dictSemigroup) {
    return new Semigroup(function(f) {
        return function(g) {
            return function(x) {
                return append(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
var semigroupRecordCons = function(dictIsSymbol) {
    return function(dictCons) {
        return function(dictSemigroupRecord) {
            return function(dictSemigroup) {
                return new SemigroupRecord(function(v) {
                    return function(ra) {
                        return function(rb) {
                            var tail = appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
                        };
                    };
                });
            };
        };
    };
};
module.exports = {
    Semigroup: Semigroup,
    append: append,
    SemigroupRecord: SemigroupRecord,
    appendRecord: appendRecord,
    semigroupString: semigroupString,
    semigroupUnit: semigroupUnit,
    semigroupVoid: semigroupVoid,
    semigroupFn: semigroupFn,
    semigroupArray: semigroupArray,
    semigroupProxy: semigroupProxy,
    semigroupProxy2: semigroupProxy2,
    semigroupProxy3: semigroupProxy3,
    semigroupRecord: semigroupRecord,
    semigroupRecordNil: semigroupRecordNil,
    semigroupRecordCons: semigroupRecordCons
};

},{"./foreign.js":"crUyk","../Data.Symbol/index.js":"6s2wm","../Data.Unit/index.js":"d7oKp","../Data.Void/index.js":"jziT4","../Record.Unsafe/index.js":"6NDQI","../Type.Proxy/index.js":"kqak1"}],"crUyk":[function(require,module,exports) {
"use strict";
exports.concatString = function(s1) {
    return function(s2) {
        return s1 + s2;
    };
};
exports.concatArray = function(xs) {
    return function(ys) {
        if (xs.length === 0) return ys;
        if (ys.length === 0) return xs;
        return xs.concat(ys);
    };
};

},{}],"jziT4":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Show = require("../Data.Show/index.js");
var Void = function(x) {
    return x;
};
var absurd = function(a) {
    var spin = function($copy_v) {
        var $tco_result;
        function $tco_loop(v) {
            $copy_v = v;
            return;
        }
        while(true)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    return spin(a);
};
var showVoid = new Data_Show.Show(absurd);
module.exports = {
    absurd: absurd,
    showVoid: showVoid
};

},{"../Data.Show/index.js":"b6tNW"}],"chn7k":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Unit = require("../Data.Unit/index.js");
var Lazy = function(defer) {
    this.defer = defer;
};
var lazyUnit = new Lazy(function(v) {
    return Data_Unit.unit;
});
var lazyFn = new Lazy(function(f) {
    return function(x) {
        return f(Data_Unit.unit)(x);
    };
});
var defer = function(dict) {
    return dict.defer;
};
var fix = function(dictLazy) {
    return function(f) {
        var go = defer(dictLazy)(function(v) {
            return f(go);
        });
        return go;
    };
};
module.exports = {
    defer: defer,
    Lazy: Lazy,
    fix: fix,
    lazyFn: lazyFn,
    lazyUnit: lazyUnit
};

},{"../Data.Unit/index.js":"d7oKp"}],"alCn2":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Monad = function(Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
};
var whenM = function(dictMonad) {
    return function(mb) {
        return function(m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function(b) {
                return Control_Applicative.when(dictMonad.Applicative0())(b)(m);
            });
        };
    };
};
var unlessM = function(dictMonad) {
    return function(mb) {
        return function(m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function(b) {
                return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);
            });
        };
    };
};
var monadProxy = new Monad(function() {
    return Control_Applicative.applicativeProxy;
}, function() {
    return Control_Bind.bindProxy;
});
var monadFn = new Monad(function() {
    return Control_Applicative.applicativeFn;
}, function() {
    return Control_Bind.bindFn;
});
var monadArray = new Monad(function() {
    return Control_Applicative.applicativeArray;
}, function() {
    return Control_Bind.bindArray;
});
var liftM1 = function(dictMonad) {
    return function(f) {
        return function(a) {
            return Control_Bind.bind(dictMonad.Bind1())(a)(function(a$prime) {
                return Control_Applicative.pure(dictMonad.Applicative0())(f(a$prime));
            });
        };
    };
};
var ap = function(dictMonad) {
    return function(f) {
        return function(a) {
            return Control_Bind.bind(dictMonad.Bind1())(f)(function(f$prime) {
                return Control_Bind.bind(dictMonad.Bind1())(a)(function(a$prime) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                });
            });
        };
    };
};
module.exports = {
    Monad: Monad,
    liftM1: liftM1,
    whenM: whenM,
    unlessM: unlessM,
    ap: ap,
    monadFn: monadFn,
    monadArray: monadArray,
    monadProxy: monadProxy,
    Applicative: Control_Applicative.Applicative,
    liftA1: Control_Applicative.liftA1,
    pure: Control_Applicative.pure,
    unless: Control_Applicative.unless,
    when: Control_Applicative.when,
    Apply: Control_Apply.Apply,
    apply: Control_Apply.apply,
    Bind: Control_Bind.Bind,
    bind: Control_Bind.bind,
    ifM: Control_Bind.ifM,
    join: Control_Bind.join,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Data.Functor/index.js":"iy1jO"}],"l0dkx":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var BooleanAlgebraRecord = function(HeytingAlgebraRecord0) {
    this.HeytingAlgebraRecord0 = HeytingAlgebraRecord0;
};
var BooleanAlgebra = function(HeytingAlgebra0) {
    this.HeytingAlgebra0 = HeytingAlgebra0;
};
var booleanAlgebraUnit = new BooleanAlgebra(function() {
    return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraRecordNil = new BooleanAlgebraRecord(function() {
    return Data_HeytingAlgebra.heytingAlgebraRecordNil;
});
var booleanAlgebraRecordCons = function(dictIsSymbol) {
    return function(dictCons) {
        return function(dictBooleanAlgebraRecord) {
            return function(dictBooleanAlgebra) {
                return new BooleanAlgebraRecord(function() {
                    return Data_HeytingAlgebra.heytingAlgebraRecordCons(dictIsSymbol)()(dictBooleanAlgebraRecord.HeytingAlgebraRecord0())(dictBooleanAlgebra.HeytingAlgebra0());
                });
            };
        };
    };
};
var booleanAlgebraRecord = function(dictRowToList) {
    return function(dictBooleanAlgebraRecord) {
        return new BooleanAlgebra(function() {
            return Data_HeytingAlgebra.heytingAlgebraRecord()(dictBooleanAlgebraRecord.HeytingAlgebraRecord0());
        });
    };
};
var booleanAlgebraProxy3 = new BooleanAlgebra(function() {
    return Data_HeytingAlgebra.heytingAlgebraProxy3;
});
var booleanAlgebraProxy2 = new BooleanAlgebra(function() {
    return Data_HeytingAlgebra.heytingAlgebraProxy2;
});
var booleanAlgebraProxy = new BooleanAlgebra(function() {
    return Data_HeytingAlgebra.heytingAlgebraProxy;
});
var booleanAlgebraFn = function(dictBooleanAlgebra) {
    return new BooleanAlgebra(function() {
        return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function() {
    return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
    BooleanAlgebra: BooleanAlgebra,
    BooleanAlgebraRecord: BooleanAlgebraRecord,
    booleanAlgebraBoolean: booleanAlgebraBoolean,
    booleanAlgebraUnit: booleanAlgebraUnit,
    booleanAlgebraFn: booleanAlgebraFn,
    booleanAlgebraRecord: booleanAlgebraRecord,
    booleanAlgebraProxy: booleanAlgebraProxy,
    booleanAlgebraProxy2: booleanAlgebraProxy2,
    booleanAlgebraProxy3: booleanAlgebraProxy3,
    booleanAlgebraRecordNil: booleanAlgebraRecordNil,
    booleanAlgebraRecordCons: booleanAlgebraRecordCons,
    HeytingAlgebra: Data_HeytingAlgebra.HeytingAlgebra,
    HeytingAlgebraRecord: Data_HeytingAlgebra.HeytingAlgebraRecord,
    conj: Data_HeytingAlgebra.conj,
    disj: Data_HeytingAlgebra.disj,
    ff: Data_HeytingAlgebra.ff,
    implies: Data_HeytingAlgebra.implies,
    not: Data_HeytingAlgebra.not,
    tt: Data_HeytingAlgebra.tt
};

},{"../Data.HeytingAlgebra/index.js":"8Mx0E"}],"8Mx0E":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var HeytingAlgebraRecord = function(conjRecord, disjRecord, ffRecord, impliesRecord, notRecord, ttRecord) {
    this.conjRecord = conjRecord;
    this.disjRecord = disjRecord;
    this.ffRecord = ffRecord;
    this.impliesRecord = impliesRecord;
    this.notRecord = notRecord;
    this.ttRecord = ttRecord;
};
var HeytingAlgebra = function(conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
};
var ttRecord = function(dict) {
    return dict.ttRecord;
};
var tt = function(dict) {
    return dict.tt;
};
var notRecord = function(dict) {
    return dict.notRecord;
};
var not = function(dict) {
    return dict.not;
};
var impliesRecord = function(dict) {
    return dict.impliesRecord;
};
var implies = function(dict) {
    return dict.implies;
};
var heytingAlgebraUnit = new HeytingAlgebra(function(v) {
    return function(v1) {
        return Data_Unit.unit;
    };
}, function(v) {
    return function(v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, function(v) {
    return function(v1) {
        return Data_Unit.unit;
    };
}, function(v) {
    return Data_Unit.unit;
}, Data_Unit.unit);
var heytingAlgebraRecordNil = new HeytingAlgebraRecord(function(v) {
    return function(v1) {
        return function(v2) {
            return {
            };
        };
    };
}, function(v) {
    return function(v1) {
        return function(v2) {
            return {
            };
        };
    };
}, function(v) {
    return function(v1) {
        return {
        };
    };
}, function(v) {
    return function(v1) {
        return function(v2) {
            return {
            };
        };
    };
}, function(v) {
    return function(v1) {
        return {
        };
    };
}, function(v) {
    return function(v1) {
        return {
        };
    };
});
var heytingAlgebraProxy3 = new HeytingAlgebra(function(v) {
    return function(v1) {
        return Type_Proxy.Proxy3.value;
    };
}, function(v) {
    return function(v1) {
        return Type_Proxy.Proxy3.value;
    };
}, Type_Proxy.Proxy3.value, function(v) {
    return function(v1) {
        return Type_Proxy.Proxy3.value;
    };
}, function(v) {
    return Type_Proxy.Proxy3.value;
}, Type_Proxy.Proxy3.value);
var heytingAlgebraProxy2 = new HeytingAlgebra(function(v) {
    return function(v1) {
        return Type_Proxy.Proxy2.value;
    };
}, function(v) {
    return function(v1) {
        return Type_Proxy.Proxy2.value;
    };
}, Type_Proxy.Proxy2.value, function(v) {
    return function(v1) {
        return Type_Proxy.Proxy2.value;
    };
}, function(v) {
    return Type_Proxy.Proxy2.value;
}, Type_Proxy.Proxy2.value);
var heytingAlgebraProxy = new HeytingAlgebra(function(v) {
    return function(v1) {
        return Type_Proxy["Proxy"].value;
    };
}, function(v) {
    return function(v1) {
        return Type_Proxy["Proxy"].value;
    };
}, Type_Proxy["Proxy"].value, function(v) {
    return function(v1) {
        return Type_Proxy["Proxy"].value;
    };
}, function(v) {
    return Type_Proxy["Proxy"].value;
}, Type_Proxy["Proxy"].value);
var ffRecord = function(dict) {
    return dict.ffRecord;
};
var ff = function(dict) {
    return dict.ff;
};
var disjRecord = function(dict) {
    return dict.disjRecord;
};
var disj = function(dict) {
    return dict.disj;
};
var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function(a) {
    return function(b) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
}, $foreign.boolNot, true);
var conjRecord = function(dict) {
    return dict.conjRecord;
};
var heytingAlgebraRecord = function(dictRowToList) {
    return function(dictHeytingAlgebraRecord) {
        return new HeytingAlgebra(conjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value), disjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value), ffRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value), impliesRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value), notRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value), ttRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value));
    };
};
var conj = function(dict) {
    return dict.conj;
};
var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    return new HeytingAlgebra(function(f) {
        return function(g) {
            return function(a) {
                return conj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function(f) {
        return function(g) {
            return function(a) {
                return disj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function(v) {
        return ff(dictHeytingAlgebra);
    }, function(f) {
        return function(g) {
            return function(a) {
                return implies(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function(f) {
        return function(a) {
            return not(dictHeytingAlgebra)(f(a));
        };
    }, function(v) {
        return tt(dictHeytingAlgebra);
    });
};
var heytingAlgebraRecordCons = function(dictIsSymbol) {
    return function(dictCons) {
        return function(dictHeytingAlgebraRecord) {
            return function(dictHeytingAlgebra) {
                return new HeytingAlgebraRecord(function(v) {
                    return function(ra) {
                        return function(rb) {
                            var tail = conjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(conj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function(v) {
                    return function(ra) {
                        return function(rb) {
                            var tail = disjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(disj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function(v) {
                    return function(row) {
                        var tail = ffRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(row);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(ff(dictHeytingAlgebra))(tail);
                    };
                }, function(v) {
                    return function(ra) {
                        return function(rb) {
                            var tail = impliesRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(implies(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function(v) {
                    return function(row) {
                        var tail = notRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(row);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        var get = Record_Unsafe.unsafeGet(key);
                        return insert(not(dictHeytingAlgebra)(get(row)))(tail);
                    };
                }, function(v) {
                    return function(row) {
                        var tail = ttRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(row);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(tt(dictHeytingAlgebra))(tail);
                    };
                });
            };
        };
    };
};
module.exports = {
    HeytingAlgebra: HeytingAlgebra,
    tt: tt,
    ff: ff,
    implies: implies,
    conj: conj,
    disj: disj,
    not: not,
    HeytingAlgebraRecord: HeytingAlgebraRecord,
    ffRecord: ffRecord,
    ttRecord: ttRecord,
    impliesRecord: impliesRecord,
    conjRecord: conjRecord,
    disjRecord: disjRecord,
    notRecord: notRecord,
    heytingAlgebraBoolean: heytingAlgebraBoolean,
    heytingAlgebraUnit: heytingAlgebraUnit,
    heytingAlgebraFunction: heytingAlgebraFunction,
    heytingAlgebraProxy: heytingAlgebraProxy,
    heytingAlgebraProxy2: heytingAlgebraProxy2,
    heytingAlgebraProxy3: heytingAlgebraProxy3,
    heytingAlgebraRecord: heytingAlgebraRecord,
    heytingAlgebraRecordNil: heytingAlgebraRecordNil,
    heytingAlgebraRecordCons: heytingAlgebraRecordCons
};

},{"./foreign.js":"3vAGv","../Data.Symbol/index.js":"6s2wm","../Data.Unit/index.js":"d7oKp","../Record.Unsafe/index.js":"6NDQI","../Type.Proxy/index.js":"kqak1"}],"3vAGv":[function(require,module,exports) {
"use strict";
exports.boolConj = function(b1) {
    return function(b2) {
        return b1 && b2;
    };
};
exports.boolDisj = function(b1) {
    return function(b2) {
        return b1 || b2;
    };
};
exports.boolNot = function(b) {
    return !b;
};

},{}],"jzt4h":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var BoundedRecord = function(OrdRecord0, bottomRecord, topRecord) {
    this.OrdRecord0 = OrdRecord0;
    this.bottomRecord = bottomRecord;
    this.topRecord = topRecord;
};
var Bounded = function(Ord0, bottom, top) {
    this.Ord0 = Ord0;
    this.bottom = bottom;
    this.top = top;
};
var topRecord = function(dict) {
    return dict.topRecord;
};
var top = function(dict) {
    return dict.top;
};
var boundedUnit = new Bounded(function() {
    return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedRecordNil = new BoundedRecord(function() {
    return Data_Ord.ordRecordNil;
}, function(v) {
    return function(v1) {
        return {
        };
    };
}, function(v) {
    return function(v1) {
        return {
        };
    };
});
var boundedProxy3 = new Bounded(function() {
    return Data_Ord.ordProxy3;
}, Type_Proxy.Proxy3.value, Type_Proxy.Proxy3.value);
var boundedProxy2 = new Bounded(function() {
    return Data_Ord.ordProxy2;
}, Type_Proxy.Proxy2.value, Type_Proxy.Proxy2.value);
var boundedProxy = new Bounded(function() {
    return Data_Ord.ordProxy;
}, Type_Proxy["Proxy"].value, Type_Proxy["Proxy"].value);
var boundedOrdering = new Bounded(function() {
    return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedNumber = new Bounded(function() {
    return Data_Ord.ordNumber;
}, $foreign.bottomNumber, $foreign.topNumber);
var boundedInt = new Bounded(function() {
    return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function() {
    return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function() {
    return Data_Ord.ordBoolean;
}, false, true);
var bottomRecord = function(dict) {
    return dict.bottomRecord;
};
var boundedRecord = function(dictRowToList) {
    return function(dictBoundedRecord) {
        return new Bounded(function() {
            return Data_Ord.ordRecord()(dictBoundedRecord.OrdRecord0());
        }, bottomRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value), topRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value));
    };
};
var bottom = function(dict) {
    return dict.bottom;
};
var boundedRecordCons = function(dictIsSymbol) {
    return function(dictBounded) {
        return function(dictCons) {
            return function(dictCons1) {
                return function(dictBoundedRecord) {
                    return new BoundedRecord(function() {
                        return Data_Ord.ordRecordCons(dictBoundedRecord.OrdRecord0())()(dictIsSymbol)(dictBounded.Ord0());
                    }, function(v) {
                        return function(rowProxy) {
                            var tail = bottomRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(rowProxy);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            return insert(bottom(dictBounded))(tail);
                        };
                    }, function(v) {
                        return function(rowProxy) {
                            var tail = topRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(rowProxy);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            return insert(top(dictBounded))(tail);
                        };
                    });
                };
            };
        };
    };
};
module.exports = {
    Bounded: Bounded,
    bottom: bottom,
    top: top,
    BoundedRecord: BoundedRecord,
    bottomRecord: bottomRecord,
    topRecord: topRecord,
    boundedBoolean: boundedBoolean,
    boundedInt: boundedInt,
    boundedChar: boundedChar,
    boundedOrdering: boundedOrdering,
    boundedUnit: boundedUnit,
    boundedNumber: boundedNumber,
    boundedProxy: boundedProxy,
    boundedProxy2: boundedProxy2,
    boundedProxy3: boundedProxy3,
    boundedRecordNil: boundedRecordNil,
    boundedRecordCons: boundedRecordCons,
    boundedRecord: boundedRecord,
    EQ: Data_Ord.EQ,
    GT: Data_Ord.GT,
    LT: Data_Ord.LT,
    Ord: Data_Ord.Ord,
    OrdRecord: Data_Ord.OrdRecord,
    compare: Data_Ord.compare
};

},{"./foreign.js":"j3V7l","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Symbol/index.js":"6s2wm","../Data.Unit/index.js":"d7oKp","../Record.Unsafe/index.js":"6NDQI","../Type.Proxy/index.js":"kqak1"}],"j3V7l":[function(require,module,exports) {
"use strict";
exports.topInt = 2147483647;
exports.bottomInt = -2147483648;
exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);
exports.topNumber = Number.POSITIVE_INFINITY;
exports.bottomNumber = Number.NEGATIVE_INFINITY;

},{}],"f14nh":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var OrdRecord = function(EqRecord0, compareRecord) {
    this.EqRecord0 = EqRecord0;
    this.compareRecord = compareRecord;
};
var Ord = function(Eq0, compare) {
    this.Eq0 = Eq0;
    this.compare = compare;
};
var Ord1 = function(Eq10, compare1) {
    this.Eq10 = Eq10;
    this.compare1 = compare1;
};
var ordVoid = new Ord(function() {
    return Data_Eq.eqVoid;
}, function(v) {
    return function(v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordUnit = new Ord(function() {
    return Data_Eq.eqUnit;
}, function(v) {
    return function(v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordString = new Ord(function() {
    return Data_Eq.eqString;
}, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordRecordNil = new OrdRecord(function() {
    return Data_Eq.eqRowNil;
}, function(v) {
    return function(v1) {
        return function(v2) {
            return Data_Ordering.EQ.value;
        };
    };
});
var ordProxy3 = new Ord(function() {
    return Data_Eq.eqProxy3;
}, function(v) {
    return function(v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordProxy2 = new Ord(function() {
    return Data_Eq.eqProxy2;
}, function(v) {
    return function(v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordProxy = new Ord(function() {
    return Data_Eq.eqProxy;
}, function(v) {
    return function(v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordOrdering = new Ord(function() {
    return Data_Ordering.eqOrdering;
}, function(v) {
    return function(v1) {
        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) return Data_Ordering.EQ.value;
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) return Data_Ordering.EQ.value;
        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) return Data_Ordering.EQ.value;
        if (v instanceof Data_Ordering.LT) return Data_Ordering.LT.value;
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) return Data_Ordering.GT.value;
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) return Data_Ordering.LT.value;
        if (v instanceof Data_Ordering.GT) return Data_Ordering.GT.value;
        throw new Error("Failed pattern match at Data.Ord (line 121, column 1 - line 128, column 21): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var ordNumber = new Ord(function() {
    return Data_Eq.eqNumber;
}, $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordInt = new Ord(function() {
    return Data_Eq.eqInt;
}, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordChar = new Ord(function() {
    return Data_Eq.eqChar;
}, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordBoolean = new Ord(function() {
    return Data_Eq.eqBoolean;
}, $foreign.ordBooleanImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var compareRecord = function(dict) {
    return dict.compareRecord;
};
var ordRecord = function(dictRowToList) {
    return function(dictOrdRecord) {
        return new Ord(function() {
            return Data_Eq.eqRec()(dictOrdRecord.EqRecord0());
        }, compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value));
    };
};
var compare1 = function(dict) {
    return dict.compare1;
};
var compare = function(dict) {
    return dict.compare;
};
var comparing = function(dictOrd) {
    return function(f) {
        return function(x) {
            return function(y) {
                return compare(dictOrd)(f(x))(f(y));
            };
        };
    };
};
var greaterThan = function(dictOrd) {
    return function(a1) {
        return function(a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) return true;
            return false;
        };
    };
};
var greaterThanOrEq = function(dictOrd) {
    return function(a1) {
        return function(a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) return false;
            return true;
        };
    };
};
var signum = function(dictOrd) {
    return function(dictRing) {
        return function(x) {
            var $49 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($49) return Data_Semiring.one(dictRing.Semiring0());
            return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
        };
    };
};
var lessThan = function(dictOrd) {
    return function(a1) {
        return function(a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) return true;
            return false;
        };
    };
};
var lessThanOrEq = function(dictOrd) {
    return function(a1) {
        return function(a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) return false;
            return true;
        };
    };
};
var max = function(dictOrd) {
    return function(x) {
        return function(y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) return y;
            if (v instanceof Data_Ordering.EQ) return x;
            if (v instanceof Data_Ordering.GT) return x;
            throw new Error("Failed pattern match at Data.Ord (line 176, column 3 - line 179, column 12): " + [
                v.constructor.name
            ]);
        };
    };
};
var min = function(dictOrd) {
    return function(x) {
        return function(y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) return x;
            if (v instanceof Data_Ordering.EQ) return x;
            if (v instanceof Data_Ordering.GT) return y;
            throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [
                v.constructor.name
            ]);
        };
    };
};
var ordArray = function(dictOrd) {
    return new Ord(function() {
        return Data_Eq.eqArray(dictOrd.Eq0());
    }, function() {
        var toDelta = function(x) {
            return function(y) {
                var v = compare(dictOrd)(x)(y);
                if (v instanceof Data_Ordering.EQ) return 0;
                if (v instanceof Data_Ordering.LT) return 1;
                if (v instanceof Data_Ordering.GT) return -1;
                throw new Error("Failed pattern match at Data.Ord (line 74, column 7 - line 77, column 17): " + [
                    v.constructor.name
                ]);
            };
        };
        return function(xs) {
            return function(ys) {
                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
            };
        };
    }());
};
var ord1Array = new Ord1(function() {
    return Data_Eq.eq1Array;
}, function(dictOrd) {
    return compare(ordArray(dictOrd));
});
var ordRecordCons = function(dictOrdRecord) {
    return function(dictCons) {
        return function(dictIsSymbol) {
            return function(dictOrd) {
                return new OrdRecord(function() {
                    return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())()(dictIsSymbol)(dictOrd.Eq0());
                }, function(v) {
                    return function(ra) {
                        return function(rb) {
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));
                            var $55 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(Data_Ordering.EQ.value);
                            if ($55) return left;
                            return compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                        };
                    };
                });
            };
        };
    };
};
var clamp = function(dictOrd) {
    return function(low) {
        return function(hi) {
            return function(x) {
                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
            };
        };
    };
};
var between = function(dictOrd) {
    return function(low) {
        return function(hi) {
            return function(x) {
                if (lessThan(dictOrd)(x)(low)) return false;
                if (greaterThan(dictOrd)(x)(hi)) return false;
                return true;
            };
        };
    };
};
var abs = function(dictOrd) {
    return function(dictRing) {
        return function(x) {
            var $59 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($59) return x;
            return Data_Ring.negate(dictRing)(x);
        };
    };
};
module.exports = {
    Ord: Ord,
    compare: compare,
    Ord1: Ord1,
    compare1: compare1,
    lessThan: lessThan,
    lessThanOrEq: lessThanOrEq,
    greaterThan: greaterThan,
    greaterThanOrEq: greaterThanOrEq,
    comparing: comparing,
    min: min,
    max: max,
    clamp: clamp,
    between: between,
    abs: abs,
    signum: signum,
    OrdRecord: OrdRecord,
    compareRecord: compareRecord,
    ordBoolean: ordBoolean,
    ordInt: ordInt,
    ordNumber: ordNumber,
    ordString: ordString,
    ordChar: ordChar,
    ordUnit: ordUnit,
    ordVoid: ordVoid,
    ordProxy: ordProxy,
    ordProxy2: ordProxy2,
    ordProxy3: ordProxy3,
    ordArray: ordArray,
    ordOrdering: ordOrdering,
    ord1Array: ord1Array,
    ordRecordNil: ordRecordNil,
    ordRecordCons: ordRecordCons,
    ordRecord: ordRecord,
    EQ: Data_Ordering.EQ,
    GT: Data_Ordering.GT,
    LT: Data_Ordering.LT
};

},{"./foreign.js":"5ekfy","../Data.Eq/index.js":"c3b8F","../Data.Ordering/index.js":"lEtyd","../Data.Ring/index.js":"2x2oG","../Data.Semiring/index.js":"39btI","../Data.Symbol/index.js":"6s2wm","../Record.Unsafe/index.js":"6NDQI","../Type.Proxy/index.js":"kqak1"}],"5ekfy":[function(require,module,exports) {
"use strict";
var unsafeCompareImpl = function(lt) {
    return function(eq) {
        return function(gt) {
            return function(x) {
                return function(y) {
                    return x < y ? lt : x === y ? eq : gt;
                };
            };
        };
    };
};
exports.ordBooleanImpl = unsafeCompareImpl;
exports.ordIntImpl = unsafeCompareImpl;
exports.ordNumberImpl = unsafeCompareImpl;
exports.ordStringImpl = unsafeCompareImpl;
exports.ordCharImpl = unsafeCompareImpl;
exports.ordArrayImpl = function(f) {
    return function(xs) {
        return function(ys) {
            var i = 0;
            var xlen = xs.length;
            var ylen = ys.length;
            while(i < xlen && i < ylen){
                var x = xs[i];
                var y = ys[i];
                var o = f(x)(y);
                if (o !== 0) return o;
                i++;
            }
            if (xlen === ylen) return 0;
            else if (xlen > ylen) return -1;
            else return 1;
        };
    };
};

},{}],"c3b8F":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var EqRecord = function(eqRecord) {
    this.eqRecord = eqRecord;
};
var Eq = function(eq) {
    this.eq = eq;
};
var Eq1 = function(eq1) {
    this.eq1 = eq1;
};
var eqVoid = new Eq(function(v) {
    return function(v1) {
        return true;
    };
});
var eqUnit = new Eq(function(v) {
    return function(v1) {
        return true;
    };
});
var eqString = new Eq($foreign.eqStringImpl);
var eqRowNil = new EqRecord(function(v) {
    return function(v1) {
        return function(v2) {
            return true;
        };
    };
});
var eqRecord = function(dict) {
    return dict.eqRecord;
};
var eqRec = function(dictRowToList) {
    return function(dictEqRecord) {
        return new Eq(eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value));
    };
};
var eqProxy3 = new Eq(function(v) {
    return function(v1) {
        return true;
    };
});
var eqProxy2 = new Eq(function(v) {
    return function(v1) {
        return true;
    };
});
var eqProxy = new Eq(function(v) {
    return function(v1) {
        return true;
    };
});
var eqNumber = new Eq($foreign.eqNumberImpl);
var eqInt = new Eq($foreign.eqIntImpl);
var eqChar = new Eq($foreign.eqCharImpl);
var eqBoolean = new Eq($foreign.eqBooleanImpl);
var eq1 = function(dict) {
    return dict.eq1;
};
var eq = function(dict) {
    return dict.eq;
};
var eqArray = function(dictEq) {
    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};
var eq1Array = new Eq1(function(dictEq) {
    return eq(eqArray(dictEq));
});
var eqRowCons = function(dictEqRecord) {
    return function(dictCons) {
        return function(dictIsSymbol) {
            return function(dictEq) {
                return new EqRecord(function(v) {
                    return function(ra) {
                        return function(rb) {
                            var tail = eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var get = Record_Unsafe.unsafeGet(key);
                            return eq(dictEq)(get(ra))(get(rb)) && tail;
                        };
                    };
                });
            };
        };
    };
};
var notEq = function(dictEq) {
    return function(x) {
        return function(y) {
            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
        };
    };
};
var notEq1 = function(dictEq1) {
    return function(dictEq) {
        return function(x) {
            return function(y) {
                return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
            };
        };
    };
};
module.exports = {
    Eq: Eq,
    eq: eq,
    notEq: notEq,
    Eq1: Eq1,
    eq1: eq1,
    notEq1: notEq1,
    EqRecord: EqRecord,
    eqRecord: eqRecord,
    eqBoolean: eqBoolean,
    eqInt: eqInt,
    eqNumber: eqNumber,
    eqChar: eqChar,
    eqString: eqString,
    eqUnit: eqUnit,
    eqVoid: eqVoid,
    eqArray: eqArray,
    eqRec: eqRec,
    eqProxy: eqProxy,
    eqProxy2: eqProxy2,
    eqProxy3: eqProxy3,
    eq1Array: eq1Array,
    eqRowNil: eqRowNil,
    eqRowCons: eqRowCons
};

},{"./foreign.js":"hB6CF","../Data.Symbol/index.js":"6s2wm","../Record.Unsafe/index.js":"6NDQI","../Type.Proxy/index.js":"kqak1"}],"hB6CF":[function(require,module,exports) {
"use strict";
var refEq = function(r1) {
    return function(r2) {
        return r1 === r2;
    };
};
exports.eqBooleanImpl = refEq;
exports.eqIntImpl = refEq;
exports.eqNumberImpl = refEq;
exports.eqCharImpl = refEq;
exports.eqStringImpl = refEq;
exports.eqArrayImpl = function(f) {
    return function(xs) {
        return function(ys) {
            if (xs.length !== ys.length) return false;
            for(var i = 0; i < xs.length; i++){
                if (!f(xs[i])(ys[i])) return false;
            }
            return true;
        };
    };
};

},{}],"lEtyd":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var LT = function() {
    function LT1() {
    }
    LT1.value = new LT1();
    return LT1;
}();
var GT = function() {
    function GT1() {
    }
    GT1.value = new GT1();
    return GT1;
}();
var EQ = function() {
    function EQ1() {
    }
    EQ1.value = new EQ1();
    return EQ1;
}();
var showOrdering = new Data_Show.Show(function(v) {
    if (v instanceof LT) return "LT";
    if (v instanceof GT) return "GT";
    if (v instanceof EQ) return "EQ";
    throw new Error("Failed pattern match at Data.Ordering (line 26, column 1 - line 29, column 17): " + [
        v.constructor.name
    ]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        if (v instanceof LT) return LT.value;
        if (v instanceof GT) return GT.value;
        if (v instanceof EQ) return v1;
        throw new Error("Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var invert = function(v) {
    if (v instanceof GT) return LT.value;
    if (v instanceof EQ) return EQ.value;
    if (v instanceof LT) return GT.value;
    throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [
        v.constructor.name
    ]);
};
var eqOrdering = new Data_Eq.Eq(function(v) {
    return function(v1) {
        if (v instanceof LT && v1 instanceof LT) return true;
        if (v instanceof GT && v1 instanceof GT) return true;
        if (v instanceof EQ && v1 instanceof EQ) return true;
        return false;
    };
});
module.exports = {
    LT: LT,
    GT: GT,
    EQ: EQ,
    invert: invert,
    eqOrdering: eqOrdering,
    semigroupOrdering: semigroupOrdering,
    showOrdering: showOrdering
};

},{"../Data.Eq/index.js":"c3b8F","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW"}],"2x2oG":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var RingRecord = function(SemiringRecord0, subRecord) {
    this.SemiringRecord0 = SemiringRecord0;
    this.subRecord = subRecord;
};
var Ring = function(Semiring0, sub) {
    this.Semiring0 = Semiring0;
    this.sub = sub;
};
var subRecord = function(dict) {
    return dict.subRecord;
};
var sub = function(dict) {
    return dict.sub;
};
var ringUnit = new Ring(function() {
    return Data_Semiring.semiringUnit;
}, function(v) {
    return function(v1) {
        return Data_Unit.unit;
    };
});
var ringRecordNil = new RingRecord(function() {
    return Data_Semiring.semiringRecordNil;
}, function(v) {
    return function(v1) {
        return function(v2) {
            return {
            };
        };
    };
});
var ringRecordCons = function(dictIsSymbol) {
    return function(dictCons) {
        return function(dictRingRecord) {
            return function(dictRing) {
                return new RingRecord(function() {
                    return Data_Semiring.semiringRecordCons(dictIsSymbol)()(dictRingRecord.SemiringRecord0())(dictRing.Semiring0());
                }, function(v) {
                    return function(ra) {
                        return function(rb) {
                            var tail = subRecord(dictRingRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(sub(dictRing)(get(ra))(get(rb)))(tail);
                        };
                    };
                });
            };
        };
    };
};
var ringRecord = function(dictRowToList) {
    return function(dictRingRecord) {
        return new Ring(function() {
            return Data_Semiring.semiringRecord()(dictRingRecord.SemiringRecord0());
        }, subRecord(dictRingRecord)(Type_Proxy["Proxy"].value));
    };
};
var ringProxy3 = new Ring(function() {
    return Data_Semiring.semiringProxy3;
}, function(v) {
    return function(v1) {
        return Type_Proxy.Proxy3.value;
    };
});
var ringProxy2 = new Ring(function() {
    return Data_Semiring.semiringProxy2;
}, function(v) {
    return function(v1) {
        return Type_Proxy.Proxy2.value;
    };
});
var ringProxy = new Ring(function() {
    return Data_Semiring.semiringProxy;
}, function(v) {
    return function(v1) {
        return Type_Proxy["Proxy"].value;
    };
});
var ringNumber = new Ring(function() {
    return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function() {
    return Data_Semiring.semiringInt;
}, $foreign.intSub);
var ringFn = function(dictRing) {
    return new Ring(function() {
        return Data_Semiring.semiringFn(dictRing.Semiring0());
    }, function(f) {
        return function(g) {
            return function(x) {
                return sub(dictRing)(f(x))(g(x));
            };
        };
    });
};
var negate = function(dictRing) {
    return function(a) {
        return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
    };
};
module.exports = {
    Ring: Ring,
    sub: sub,
    negate: negate,
    RingRecord: RingRecord,
    subRecord: subRecord,
    ringInt: ringInt,
    ringNumber: ringNumber,
    ringUnit: ringUnit,
    ringFn: ringFn,
    ringProxy: ringProxy,
    ringProxy2: ringProxy2,
    ringProxy3: ringProxy3,
    ringRecord: ringRecord,
    ringRecordNil: ringRecordNil,
    ringRecordCons: ringRecordCons,
    Semiring: Data_Semiring.Semiring,
    SemiringRecord: Data_Semiring.SemiringRecord,
    add: Data_Semiring.add,
    mul: Data_Semiring.mul,
    one: Data_Semiring.one,
    zero: Data_Semiring.zero
};

},{"./foreign.js":"8rTyr","../Data.Semiring/index.js":"39btI","../Data.Symbol/index.js":"6s2wm","../Data.Unit/index.js":"d7oKp","../Record.Unsafe/index.js":"6NDQI","../Type.Proxy/index.js":"kqak1"}],"8rTyr":[function(require,module,exports) {
"use strict";
exports.intSub = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x - y | 0;
    };
};
exports.numSub = function(n1) {
    return function(n2) {
        return n1 - n2;
    };
};

},{}],"39btI":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var SemiringRecord = function(addRecord, mulRecord, oneRecord, zeroRecord) {
    this.addRecord = addRecord;
    this.mulRecord = mulRecord;
    this.oneRecord = oneRecord;
    this.zeroRecord = zeroRecord;
};
var Semiring = function(add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var zeroRecord = function(dict) {
    return dict.zeroRecord;
};
var zero = function(dict) {
    return dict.zero;
};
var semiringUnit = new Semiring(function(v) {
    return function(v1) {
        return Data_Unit.unit;
    };
}, function(v) {
    return function(v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, Data_Unit.unit);
var semiringRecordNil = new SemiringRecord(function(v) {
    return function(v1) {
        return function(v2) {
            return {
            };
        };
    };
}, function(v) {
    return function(v1) {
        return function(v2) {
            return {
            };
        };
    };
}, function(v) {
    return function(v1) {
        return {
        };
    };
}, function(v) {
    return function(v1) {
        return {
        };
    };
});
var semiringProxy3 = new Semiring(function(v) {
    return function(v1) {
        return Type_Proxy.Proxy3.value;
    };
}, function(v) {
    return function(v1) {
        return Type_Proxy.Proxy3.value;
    };
}, Type_Proxy.Proxy3.value, Type_Proxy.Proxy3.value);
var semiringProxy2 = new Semiring(function(v) {
    return function(v1) {
        return Type_Proxy.Proxy2.value;
    };
}, function(v) {
    return function(v1) {
        return Type_Proxy.Proxy2.value;
    };
}, Type_Proxy.Proxy2.value, Type_Proxy.Proxy2.value);
var semiringProxy = new Semiring(function(v) {
    return function(v1) {
        return Type_Proxy["Proxy"].value;
    };
}, function(v) {
    return function(v1) {
        return Type_Proxy["Proxy"].value;
    };
}, Type_Proxy["Proxy"].value, Type_Proxy["Proxy"].value);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1, 0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var oneRecord = function(dict) {
    return dict.oneRecord;
};
var one = function(dict) {
    return dict.one;
};
var mulRecord = function(dict) {
    return dict.mulRecord;
};
var mul = function(dict) {
    return dict.mul;
};
var addRecord = function(dict) {
    return dict.addRecord;
};
var semiringRecord = function(dictRowToList) {
    return function(dictSemiringRecord) {
        return new Semiring(addRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value), mulRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value), oneRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value), zeroRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value));
    };
};
var add = function(dict) {
    return dict.add;
};
var semiringFn = function(dictSemiring) {
    return new Semiring(function(f) {
        return function(g) {
            return function(x) {
                return add(dictSemiring)(f(x))(g(x));
            };
        };
    }, function(f) {
        return function(g) {
            return function(x) {
                return mul(dictSemiring)(f(x))(g(x));
            };
        };
    }, function(v) {
        return one(dictSemiring);
    }, function(v) {
        return zero(dictSemiring);
    });
};
var semiringRecordCons = function(dictIsSymbol) {
    return function(dictCons) {
        return function(dictSemiringRecord) {
            return function(dictSemiring) {
                return new SemiringRecord(function(v) {
                    return function(ra) {
                        return function(rb) {
                            var tail = addRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(add(dictSemiring)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function(v) {
                    return function(ra) {
                        return function(rb) {
                            var tail = mulRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(mul(dictSemiring)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function(v) {
                    return function(v1) {
                        var tail = oneRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(one(dictSemiring))(tail);
                    };
                }, function(v) {
                    return function(v1) {
                        var tail = zeroRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(zero(dictSemiring))(tail);
                    };
                });
            };
        };
    };
};
module.exports = {
    Semiring: Semiring,
    add: add,
    zero: zero,
    mul: mul,
    one: one,
    SemiringRecord: SemiringRecord,
    addRecord: addRecord,
    mulRecord: mulRecord,
    oneRecord: oneRecord,
    zeroRecord: zeroRecord,
    semiringInt: semiringInt,
    semiringNumber: semiringNumber,
    semiringFn: semiringFn,
    semiringUnit: semiringUnit,
    semiringProxy: semiringProxy,
    semiringProxy2: semiringProxy2,
    semiringProxy3: semiringProxy3,
    semiringRecord: semiringRecord,
    semiringRecordNil: semiringRecordNil,
    semiringRecordCons: semiringRecordCons
};

},{"./foreign.js":"j2CWM","../Data.Symbol/index.js":"6s2wm","../Data.Unit/index.js":"d7oKp","../Record.Unsafe/index.js":"6NDQI","../Type.Proxy/index.js":"kqak1"}],"j2CWM":[function(require,module,exports) {
"use strict";
exports.intAdd = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x + y | 0;
    };
};
exports.intMul = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x * y | 0;
    };
};
exports.numAdd = function(n1) {
    return function(n2) {
        return n1 + n2;
    };
};
exports.numMul = function(n1) {
    return function(n2) {
        return n1 * n2;
    };
};

},{}],"2q7tT":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var CommutativeRingRecord = function(RingRecord0) {
    this.RingRecord0 = RingRecord0;
};
var CommutativeRing = function(Ring0) {
    this.Ring0 = Ring0;
};
var commutativeRingUnit = new CommutativeRing(function() {
    return Data_Ring.ringUnit;
});
var commutativeRingRecordNil = new CommutativeRingRecord(function() {
    return Data_Ring.ringRecordNil;
});
var commutativeRingRecordCons = function(dictIsSymbol) {
    return function(dictCons) {
        return function(dictCommutativeRingRecord) {
            return function(dictCommutativeRing) {
                return new CommutativeRingRecord(function() {
                    return Data_Ring.ringRecordCons(dictIsSymbol)()(dictCommutativeRingRecord.RingRecord0())(dictCommutativeRing.Ring0());
                });
            };
        };
    };
};
var commutativeRingRecord = function(dictRowToList) {
    return function(dictCommutativeRingRecord) {
        return new CommutativeRing(function() {
            return Data_Ring.ringRecord()(dictCommutativeRingRecord.RingRecord0());
        });
    };
};
var commutativeRingProxy3 = new CommutativeRing(function() {
    return Data_Ring.ringProxy3;
});
var commutativeRingProxy2 = new CommutativeRing(function() {
    return Data_Ring.ringProxy2;
});
var commutativeRingProxy = new CommutativeRing(function() {
    return Data_Ring.ringProxy;
});
var commutativeRingNumber = new CommutativeRing(function() {
    return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function() {
    return Data_Ring.ringInt;
});
var commutativeRingFn = function(dictCommutativeRing) {
    return new CommutativeRing(function() {
        return Data_Ring.ringFn(dictCommutativeRing.Ring0());
    });
};
module.exports = {
    CommutativeRing: CommutativeRing,
    CommutativeRingRecord: CommutativeRingRecord,
    commutativeRingInt: commutativeRingInt,
    commutativeRingNumber: commutativeRingNumber,
    commutativeRingUnit: commutativeRingUnit,
    commutativeRingFn: commutativeRingFn,
    commutativeRingRecord: commutativeRingRecord,
    commutativeRingProxy: commutativeRingProxy,
    commutativeRingProxy2: commutativeRingProxy2,
    commutativeRingProxy3: commutativeRingProxy3,
    commutativeRingRecordNil: commutativeRingRecordNil,
    commutativeRingRecordCons: commutativeRingRecordCons,
    Ring: Data_Ring.Ring,
    RingRecord: Data_Ring.RingRecord,
    Semiring: Data_Semiring.Semiring,
    add: Data_Semiring.add,
    mul: Data_Semiring.mul,
    one: Data_Semiring.one,
    zero: Data_Semiring.zero
};

},{"../Data.Ring/index.js":"2x2oG","../Data.Semiring/index.js":"39btI"}],"hYAzT":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Functor = require("../Data.Functor/index.js");
var Invariant = function(imap) {
    this.imap = imap;
};
var invariantMultiplicative = new Invariant(function(f) {
    return function(v) {
        return function(v1) {
            return f(v1);
        };
    };
});
var invariantEndo = new Invariant(function(ab) {
    return function(ba) {
        return function(v) {
            return function($36) {
                return ab(v(ba($36)));
            };
        };
    };
});
var invariantDual = new Invariant(function(f) {
    return function(v) {
        return function(v1) {
            return f(v1);
        };
    };
});
var invariantDisj = new Invariant(function(f) {
    return function(v) {
        return function(v1) {
            return f(v1);
        };
    };
});
var invariantConj = new Invariant(function(f) {
    return function(v) {
        return function(v1) {
            return f(v1);
        };
    };
});
var invariantAdditive = new Invariant(function(f) {
    return function(v) {
        return function(v1) {
            return f(v1);
        };
    };
});
var imapF = function(dictFunctor) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictFunctor)(f);
        };
    };
};
var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
var imap = function(dict) {
    return dict.imap;
};
var invariantAlternate = function(dictInvariant) {
    return new Invariant(function(f) {
        return function(g) {
            return function(v) {
                return imap(dictInvariant)(f)(g)(v);
            };
        };
    });
};
module.exports = {
    imap: imap,
    Invariant: Invariant,
    imapF: imapF,
    invariantFn: invariantFn,
    invariantArray: invariantArray,
    invariantAdditive: invariantAdditive,
    invariantConj: invariantConj,
    invariantDisj: invariantDisj,
    invariantDual: invariantDual,
    invariantEndo: invariantEndo,
    invariantMultiplicative: invariantMultiplicative,
    invariantAlternate: invariantAlternate
};

},{"../Data.Functor/index.js":"iy1jO"}],"2rL8E":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var Inl = function() {
    function Inl1(value0) {
        this.value0 = value0;
    }
    Inl1.create = function(value0) {
        return new Inl1(value0);
    };
    return Inl1;
}();
var Inr = function() {
    function Inr1(value0) {
        this.value0 = value0;
    }
    Inr1.create = function(value0) {
        return new Inr1(value0);
    };
    return Inr1;
}();
var Product = function() {
    function Product1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Product1.create = function(value0) {
        return function(value1) {
            return new Product1(value0, value1);
        };
    };
    return Product1;
}();
var NoArguments = function() {
    function NoArguments1() {
    }
    NoArguments1.value = new NoArguments1();
    return NoArguments1;
}();
var Generic = function(from, to) {
    this.from = from;
    this.to = to;
};
var Constructor = function(x) {
    return x;
};
var Argument = function(x) {
    return x;
};
var to = function(dict) {
    return dict.to;
};
var showSum = function(dictShow) {
    return function(dictShow1) {
        return new Data_Show.Show(function(v) {
            if (v instanceof Inl) return "(Inl " + (Data_Show.show(dictShow)(v.value0) + ")");
            if (v instanceof Inr) return "(Inr " + (Data_Show.show(dictShow1)(v.value0) + ")");
            throw new Error("Failed pattern match at Data.Generic.Rep (line 31, column 1 - line 33, column 42): " + [
                v.constructor.name
            ]);
        });
    };
};
var showProduct = function(dictShow) {
    return function(dictShow1) {
        return new Data_Show.Show(function(v) {
            return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var showNoArguments = new Data_Show.Show(function(v) {
    return "NoArguments";
});
var showConstructor = function(dictIsSymbol) {
    return function(dictShow) {
        return new Data_Show.Show(function(v) {
            return "(Constructor @" + (Data_Show.show(Data_Show.showString)(Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value)) + (" " + (Data_Show.show(dictShow)(v) + ")")));
        });
    };
};
var showArgument = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Argument " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var repOf = function(dictGeneric) {
    return function(v) {
        return Type_Proxy["Proxy"].value;
    };
};
var from = function(dict) {
    return dict.from;
};
module.exports = {
    Generic: Generic,
    to: to,
    from: from,
    repOf: repOf,
    NoArguments: NoArguments,
    Inl: Inl,
    Inr: Inr,
    Product: Product,
    Constructor: Constructor,
    Argument: Argument,
    showNoArguments: showNoArguments,
    showSum: showSum,
    showProduct: showProduct,
    showConstructor: showConstructor,
    showArgument: showArgument
};

},{"../Data.Show/index.js":"b6tNW","../Data.Symbol/index.js":"6s2wm","../Type.Proxy/index.js":"kqak1"}],"94fxC":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var MonoidRecord = function(SemigroupRecord0, memptyRecord) {
    this.SemigroupRecord0 = SemigroupRecord0;
    this.memptyRecord = memptyRecord;
};
var Monoid = function(Semigroup0, mempty) {
    this.Semigroup0 = Semigroup0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function() {
    return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function() {
    return Data_Semigroup.semigroupString;
}, "");
var monoidRecordNil = new MonoidRecord(function() {
    return Data_Semigroup.semigroupRecordNil;
}, function(v) {
    return {
    };
});
var monoidOrdering = new Monoid(function() {
    return Data_Ordering.semigroupOrdering;
}, Data_Ordering.EQ.value);
var monoidArray = new Monoid(function() {
    return Data_Semigroup.semigroupArray;
}, []);
var memptyRecord = function(dict) {
    return dict.memptyRecord;
};
var monoidRecord = function(dictRowToList) {
    return function(dictMonoidRecord) {
        return new Monoid(function() {
            return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
        }, memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value));
    };
};
var mempty = function(dict) {
    return dict.mempty;
};
var monoidFn = function(dictMonoid) {
    return new Monoid(function() {
        return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
    }, function(v) {
        return mempty(dictMonoid);
    });
};
var monoidRecordCons = function(dictIsSymbol) {
    return function(dictMonoid) {
        return function(dictCons) {
            return function(dictMonoidRecord) {
                return new MonoidRecord(function() {
                    return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
                }, function(v) {
                    var tail = memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value);
                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                    var insert = Record_Unsafe.unsafeSet(key);
                    return insert(mempty(dictMonoid))(tail);
                });
            };
        };
    };
};
var power = function(dictMonoid) {
    return function(x) {
        var go = function(p) {
            if (p <= 0) return mempty(dictMonoid);
            if (p === 1) return x;
            if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {
                var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
            }
            if (Data_Boolean.otherwise) {
                var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
            }
            throw new Error("Failed pattern match at Data.Monoid (line 86, column 3 - line 86, column 17): " + [
                p.constructor.name
            ]);
        };
        return go;
    };
};
var guard = function(dictMonoid) {
    return function(v) {
        return function(v1) {
            if (v) return v1;
            if (!v) return mempty(dictMonoid);
            throw new Error("Failed pattern match at Data.Monoid (line 94, column 1 - line 94, column 49): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
module.exports = {
    Monoid: Monoid,
    mempty: mempty,
    power: power,
    guard: guard,
    MonoidRecord: MonoidRecord,
    memptyRecord: memptyRecord,
    monoidUnit: monoidUnit,
    monoidOrdering: monoidOrdering,
    monoidFn: monoidFn,
    monoidString: monoidString,
    monoidArray: monoidArray,
    monoidRecord: monoidRecord,
    monoidRecordNil: monoidRecordNil,
    monoidRecordCons: monoidRecordCons,
    Semigroup: Data_Semigroup.Semigroup,
    SemigroupRecord: Data_Semigroup.SemigroupRecord
};

},{"../Data.Boolean/index.js":"lv1qw","../Data.EuclideanRing/index.js":"fTU7A","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Symbol/index.js":"6s2wm","../Data.Unit/index.js":"d7oKp","../Record.Unsafe/index.js":"6NDQI","../Type.Proxy/index.js":"kqak1"}],"fTU7A":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var EuclideanRing = function(CommutativeRing0, degree, div, mod) {
    this.CommutativeRing0 = CommutativeRing0;
    this.degree = degree;
    this.div = div;
    this.mod = mod;
};
var mod = function(dict) {
    return dict.mod;
};
var gcd = function($copy_dictEq) {
    return function($copy_dictEuclideanRing) {
        return function($copy_a) {
            return function($copy_b) {
                var $tco_var_dictEq = $copy_dictEq;
                var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                var $tco_var_a = $copy_a;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                    var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));
                    if ($7) {
                        $tco_done = true;
                        return a;
                    }
                    $tco_var_dictEq = dictEq;
                    $tco_var_dictEuclideanRing = dictEuclideanRing;
                    $tco_var_a = b;
                    $copy_b = mod(dictEuclideanRing)(a)(b);
                    return;
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                return $tco_result;
            };
        };
    };
};
var euclideanRingNumber = new EuclideanRing(function() {
    return Data_CommutativeRing.commutativeRingNumber;
}, function(v) {
    return 1;
}, $foreign.numDiv, function(v) {
    return function(v1) {
        return 0;
    };
});
var euclideanRingInt = new EuclideanRing(function() {
    return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
var div = function(dict) {
    return dict.div;
};
var lcm = function(dictEq) {
    return function(dictEuclideanRing) {
        return function(a) {
            return function(b) {
                var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));
                if ($8) return Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0());
                return div(dictEuclideanRing)(Data_Semiring.mul(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
            };
        };
    };
};
var degree = function(dict) {
    return dict.degree;
};
module.exports = {
    EuclideanRing: EuclideanRing,
    degree: degree,
    div: div,
    mod: mod,
    gcd: gcd,
    lcm: lcm,
    euclideanRingInt: euclideanRingInt,
    euclideanRingNumber: euclideanRingNumber,
    CommutativeRing: Data_CommutativeRing.CommutativeRing,
    Ring: Data_Ring.Ring,
    sub: Data_Ring.sub,
    Semiring: Data_Semiring.Semiring,
    add: Data_Semiring.add,
    mul: Data_Semiring.mul,
    one: Data_Semiring.one,
    zero: Data_Semiring.zero
};

},{"./foreign.js":"7AE5H","../Data.CommutativeRing/index.js":"2q7tT","../Data.Eq/index.js":"c3b8F","../Data.Ring/index.js":"2x2oG","../Data.Semiring/index.js":"39btI"}],"7AE5H":[function(require,module,exports) {
"use strict";
exports.intDegree = function(x) {
    return Math.min(Math.abs(x), 2147483647);
};
// See the Euclidean definition in
// https://en.m.wikipedia.org/wiki/Modulo_operation.
exports.intDiv = function(x) {
    return function(y) {
        if (y === 0) return 0;
        return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
};
exports.intMod = function(x) {
    return function(y) {
        if (y === 0) return 0;
        var yy = Math.abs(y);
        return (x % yy + yy) % yy;
    };
};
exports.numDiv = function(n1) {
    return function(n2) {
        return n1 / n2;
    };
};

},{}],"3YiSJ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Unsafe = require("../Effect.Unsafe/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Fiber = function(x) {
    return x;
};
var FFIUtil = function(x) {
    return x;
};
var Canceler = function(x) {
    return x;
};
var suspendAff = $foreign["_fork"](false);
var newtypeCanceler = new Data_Newtype.Newtype(function() {
    return undefined;
});
var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
var functorAff = new Data_Functor.Functor($foreign["_map"]);
var forkAff = $foreign["_fork"](true);
var ffiUtil = function() {
    var unsafeFromRight = function(v) {
        if (v instanceof Data_Either.Right) return v.value0;
        if (v instanceof Data_Either.Left) return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
        throw new Error("Failed pattern match at Effect.Aff (line 404, column 21 - line 406, column 54): " + [
            v.constructor.name
        ]);
    };
    var unsafeFromLeft = function(v) {
        if (v instanceof Data_Either.Left) return v.value0;
        if (v instanceof Data_Either.Right) return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
        throw new Error("Failed pattern match at Effect.Aff (line 399, column 20 - line 401, column 54): " + [
            v.constructor.name
        ]);
    };
    var isLeft = function(v) {
        if (v instanceof Data_Either.Left) return true;
        if (v instanceof Data_Either.Right) return false;
        throw new Error("Failed pattern match at Effect.Aff (line 394, column 12 - line 396, column 20): " + [
            v.constructor.name
        ]);
    };
    return {
        isLeft: isLeft,
        fromLeft: unsafeFromLeft,
        fromRight: unsafeFromRight,
        left: Data_Either.Left.create,
        right: Data_Either.Right.create
    };
}();
var makeFiber = function(aff) {
    return $foreign["_makeFiber"](ffiUtil, aff);
};
var launchAff = function(aff) {
    return function __do() {
        var fiber = makeFiber(aff)();
        fiber.run();
        return fiber;
    };
};
var launchAff_ = function() {
    var $40 = Data_Functor["void"](Effect.functorEffect);
    return function($41) {
        return $40(launchAff($41));
    };
}();
var launchSuspendedAff = makeFiber;
var delay = function(v) {
    return $foreign["_delay"](Data_Either.Right.create, v);
};
var bracket = function(acquire) {
    return function(completed) {
        return $foreign.generalBracket(acquire)({
            killed: Data_Function["const"](completed),
            failed: Data_Function["const"](completed),
            completed: Data_Function["const"](completed)
        });
    };
};
var applyParAff = new Control_Apply.Apply(function() {
    return functorParAff;
}, $foreign["_parAffApply"]);
var semigroupParAff = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParAff)(Data_Semigroup.append(dictSemigroup)));
};
var monadAff = new Control_Monad.Monad(function() {
    return applicativeAff;
}, function() {
    return bindAff;
});
var bindAff = new Control_Bind.Bind(function() {
    return applyAff;
}, $foreign["_bind"]);
var applyAff = new Control_Apply.Apply(function() {
    return functorAff;
}, Control_Monad.ap(monadAff));
var applicativeAff = new Control_Applicative.Applicative(function() {
    return applyAff;
}, $foreign["_pure"]);
var cancelWith = function(aff) {
    return function(v) {
        return $foreign.generalBracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))({
            killed: function(e) {
                return function(v1) {
                    return v(e);
                };
            },
            failed: Data_Function["const"](Control_Applicative.pure(applicativeAff)),
            completed: Data_Function["const"](Control_Applicative.pure(applicativeAff))
        })(Data_Function["const"](aff));
    };
};
var $$finally = function(fin) {
    return function(a) {
        return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
    };
};
var invincible = function(a) {
    return bracket(a)(Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit)))(Control_Applicative.pure(applicativeAff));
};
var lazyAff = new Control_Lazy.Lazy(function(f) {
    return Control_Bind.bind(bindAff)(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(f);
});
var semigroupAff = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyAff)(Data_Semigroup.append(dictSemigroup)));
};
var monadEffectAff = new Effect_Class.MonadEffect(function() {
    return monadAff;
}, $foreign["_liftEffect"]);
var effectCanceler = function() {
    var $42 = Effect_Class.liftEffect(monadEffectAff);
    return function($43) {
        return Canceler(Data_Function["const"]($42($43)));
    };
}();
var joinFiber = function(v) {
    return $foreign.makeAff(function(k) {
        return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
    });
};
var functorFiber = new Data_Functor.Functor(function(f) {
    return function(t) {
        return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
    };
});
var applyFiber = new Control_Apply.Apply(function() {
    return functorFiber;
}, function(t1) {
    return function(t2) {
        return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Apply.apply(applyAff)(joinFiber(t1))(joinFiber(t2))));
    };
});
var applicativeFiber = new Control_Applicative.Applicative(function() {
    return applyFiber;
}, function(a) {
    return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Applicative.pure(applicativeAff)(a)));
});
var killFiber = function(e) {
    return function(v) {
        return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function(v1) {
            if (v1) return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
            return $foreign.makeAff(function(k) {
                return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
            });
        });
    };
};
var fiberCanceler = function() {
    var $44 = Data_Function.flip(killFiber);
    return function($45) {
        return Canceler($44($45));
    };
}();
var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function() {
    return monadAff;
}, $foreign["_throwError"]);
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function() {
    return monadThrowAff;
}, $foreign["_catchError"]);
var attempt = Control_Monad_Error_Class["try"](monadErrorAff);
var runAff = function(k) {
    return function(aff) {
        return launchAff(Control_Bind.bindFlipped(bindAff)(function() {
            var $46 = Effect_Class.liftEffect(monadEffectAff);
            return function($47) {
                return $46(k($47));
            };
        }())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
    };
};
var runAff_ = function(k) {
    return function(aff) {
        return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
    };
};
var runSuspendedAff = function(k) {
    return function(aff) {
        return launchSuspendedAff(Control_Bind.bindFlipped(bindAff)(function() {
            var $48 = Effect_Class.liftEffect(monadEffectAff);
            return function($49) {
                return $48(k($49));
            };
        }())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
    };
};
var parallelAff = new Control_Parallel_Class.Parallel(function() {
    return applicativeParAff;
}, function() {
    return monadAff;
}, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
var applicativeParAff = new Control_Applicative.Applicative(function() {
    return applyParAff;
}, function() {
    var $50 = Control_Parallel_Class.parallel(parallelAff);
    var $51 = Control_Applicative.pure(applicativeAff);
    return function($52) {
        return $50($51($52));
    };
}());
var monoidParAff = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupParAff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)));
};
var semigroupCanceler = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        return function(err) {
            return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([
                v(err),
                v1(err)
            ]);
        };
    };
});
var supervise = function(aff) {
    var killError = Effect_Exception.error("[Aff] Child fiber outlived parent");
    var killAll = function(err) {
        return function(sup) {
            return $foreign.makeAff(function(k) {
                return $foreign["_killAll"](err, sup.supervisor, k(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit)));
            });
        };
    };
    var acquire = function __do() {
        var sup = $foreign["_makeSupervisedFiber"](ffiUtil, aff)();
        sup.fiber.run();
        return sup;
    };
    return $foreign.generalBracket(Effect_Class.liftEffect(monadEffectAff)(acquire))({
        killed: function(err) {
            return function(sup) {
                return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([
                    killFiber(err)(sup.fiber),
                    killAll(err)(sup)
                ]);
            };
        },
        failed: Data_Function["const"](killAll(killError)),
        completed: Data_Function["const"](killAll(killError))
    })(function($53) {
        return joinFiber(function(v) {
            return v.fiber;
        }($53));
    });
};
var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function() {
    return monadAff;
}, function(k) {
    var go = function(a) {
        return Control_Bind.bind(bindAff)(k(a))(function(res) {
            if (res instanceof Control_Monad_Rec_Class.Done) return Control_Applicative.pure(applicativeAff)(res.value0);
            if (res instanceof Control_Monad_Rec_Class.Loop) return go(res.value0);
            throw new Error("Failed pattern match at Effect.Aff (line 102, column 7 - line 104, column 22): " + [
                res.constructor.name
            ]);
        });
    };
    return go;
});
var monoidAff = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupAff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
};
var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
var monoidCanceler = new Data_Monoid.Monoid(function() {
    return semigroupCanceler;
}, nonCanceler);
var never = $foreign.makeAff(function(v) {
    return Control_Applicative.pure(Effect.applicativeEffect)(Data_Monoid.mempty(monoidCanceler));
});
var apathize = function() {
    var $54 = Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit));
    return function($55) {
        return $54(attempt($55));
    };
}();
var altParAff = new Control_Alt.Alt(function() {
    return functorParAff;
}, $foreign["_parAffAlt"]);
var altAff = new Control_Alt.Alt(function() {
    return functorAff;
}, function(a1) {
    return function(a2) {
        return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function["const"](a2));
    };
});
var plusAff = new Control_Plus.Plus(function() {
    return altAff;
}, Control_Monad_Error_Class.throwError(monadThrowAff)(Effect_Exception.error("Always fails")));
var plusParAff = new Control_Plus.Plus(function() {
    return altParAff;
}, Control_Parallel_Class.parallel(parallelAff)(Control_Plus.empty(plusAff)));
var alternativeParAff = new Control_Alternative.Alternative(function() {
    return applicativeParAff;
}, function() {
    return plusParAff;
});
module.exports = {
    Canceler: Canceler,
    launchAff: launchAff,
    launchAff_: launchAff_,
    launchSuspendedAff: launchSuspendedAff,
    runAff: runAff,
    runAff_: runAff_,
    runSuspendedAff: runSuspendedAff,
    forkAff: forkAff,
    suspendAff: suspendAff,
    supervise: supervise,
    attempt: attempt,
    apathize: apathize,
    delay: delay,
    never: never,
    "finally": $$finally,
    invincible: invincible,
    killFiber: killFiber,
    joinFiber: joinFiber,
    cancelWith: cancelWith,
    bracket: bracket,
    nonCanceler: nonCanceler,
    effectCanceler: effectCanceler,
    fiberCanceler: fiberCanceler,
    functorAff: functorAff,
    applyAff: applyAff,
    applicativeAff: applicativeAff,
    bindAff: bindAff,
    monadAff: monadAff,
    semigroupAff: semigroupAff,
    monoidAff: monoidAff,
    altAff: altAff,
    plusAff: plusAff,
    monadRecAff: monadRecAff,
    monadThrowAff: monadThrowAff,
    monadErrorAff: monadErrorAff,
    monadEffectAff: monadEffectAff,
    lazyAff: lazyAff,
    functorParAff: functorParAff,
    applyParAff: applyParAff,
    applicativeParAff: applicativeParAff,
    semigroupParAff: semigroupParAff,
    monoidParAff: monoidParAff,
    altParAff: altParAff,
    plusParAff: plusParAff,
    alternativeParAff: alternativeParAff,
    parallelAff: parallelAff,
    functorFiber: functorFiber,
    applyFiber: applyFiber,
    applicativeFiber: applicativeFiber,
    newtypeCanceler: newtypeCanceler,
    semigroupCanceler: semigroupCanceler,
    monoidCanceler: monoidCanceler,
    makeAff: $foreign.makeAff,
    generalBracket: $foreign.generalBracket,
    catchError: Control_Monad_Error_Class.catchError,
    throwError: Control_Monad_Error_Class.throwError,
    "try": Control_Monad_Error_Class["try"],
    parallel: Control_Parallel_Class.parallel,
    sequential: Control_Parallel_Class.sequential,
    Milliseconds: Data_Time_Duration.Milliseconds,
    error: Effect_Exception.error,
    message: Effect_Exception.message
};

},{"./foreign.js":"gnIca","../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Lazy/index.js":"chn7k","../Control.Monad/index.js":"alCn2","../Control.Monad.Error.Class/index.js":"acXO9","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Parallel/index.js":"651yb","../Control.Parallel.Class/index.js":"3BOQZ","../Control.Plus/index.js":"5lCU5","../Data.Either/index.js":"3WZha","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Time.Duration/index.js":"4CSfE","../Data.Unit/index.js":"d7oKp","../Effect/index.js":"bKbtZ","../Effect.Class/index.js":"53rRA","../Effect.Exception/index.js":"3J2RH","../Effect.Unsafe/index.js":"7GTyi","../Partial.Unsafe/index.js":"fE2bk","../Unsafe.Coerce/index.js":"6gO81"}],"gnIca":[function(require,module,exports) {
/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */ /* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */ "use strict";
var Aff = function() {
    // A unique value for empty.
    var EMPTY = {
    };
    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */ var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */ var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt";
    // Various constructors used in interpretation
    var CONS = "Cons"; // Cons-list, for stacks
    var RESUME = "Resume"; // Continue indiscriminately
    var RELEASE = "Release"; // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED = "Forked"; // Reference to a forked fiber, with resumption stack
    var FIBER = "Fiber"; // Actual fiber reference
    var THUNK = "Thunk"; // Primed effect, ready to invoke
    function Aff1(tag, _1, _2, _3) {
        this.tag = tag;
        this._1 = _1;
        this._2 = _2;
        this._3 = _3;
    }
    function AffCtr(tag) {
        var fn = function(_1, _2, _3) {
            return new Aff1(tag, _1, _2, _3);
        };
        fn.tag = tag;
        return fn;
    }
    function nonCanceler(error) {
        return new Aff1(PURE, void 0);
    }
    function runEff(eff) {
        try {
            eff();
        } catch (error) {
            setTimeout(function() {
                throw error;
            }, 0);
        }
    }
    function runSync(left, right, eff) {
        try {
            return right(eff());
        } catch (error) {
            return left(error);
        }
    }
    function runAsync(left, eff, k) {
        try {
            return eff(k)();
        } catch (error) {
            k(left(error))();
            return nonCanceler;
        }
    }
    var Scheduler = function() {
        var limit = 1024;
        var size = 0;
        var ix = 0;
        var queue = new Array(limit);
        var draining = false;
        function drain() {
            var thunk;
            draining = true;
            while(size !== 0){
                size--;
                thunk = queue[ix];
                queue[ix] = void 0;
                ix = (ix + 1) % limit;
                thunk();
            }
            draining = false;
        }
        return {
            isDraining: function() {
                return draining;
            },
            enqueue: function(cb) {
                var i, tmp;
                if (size === limit) {
                    tmp = draining;
                    drain();
                    draining = tmp;
                }
                queue[(ix + size) % limit] = cb;
                size++;
                if (!draining) drain();
            }
        };
    }();
    function Supervisor(util) {
        var fibers = {
        };
        var fiberId = 0;
        var count = 0;
        return {
            register: function(fiber) {
                var fid = fiberId++;
                fiber.onComplete({
                    rethrow: true,
                    handler: function(result) {
                        return function() {
                            count--;
                            delete fibers[fid];
                        };
                    }
                })();
                fibers[fid] = fiber;
                count++;
            },
            isEmpty: function() {
                return count === 0;
            },
            killAll: function(killError, cb) {
                return function() {
                    if (count === 0) return cb();
                    var killCount = 0;
                    var kills = {
                    };
                    function kill(fid) {
                        kills[fid] = fibers[fid].kill(killError, function(result) {
                            return function() {
                                delete kills[fid];
                                killCount--;
                                if (util.isLeft(result) && util.fromLeft(result)) setTimeout(function() {
                                    throw util.fromLeft(result);
                                }, 0);
                                if (killCount === 0) cb();
                            };
                        })();
                    }
                    for(var k in fibers)if (fibers.hasOwnProperty(k)) {
                        killCount++;
                        kill(k);
                    }
                    fibers = {
                    };
                    fiberId = 0;
                    count = 0;
                    return function(error) {
                        return new Aff1(SYNC, function() {
                            for(var k1 in kills)if (kills.hasOwnProperty(k1)) kills[k1]();
                        });
                    };
                };
            }
        };
    }
    // Fiber state machine
    var SUSPENDED = 0; // Suspended, pending a join.
    var CONTINUE = 1; // Interpret the next instruction.
    var STEP_BIND = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING = 4; // An async effect is running.
    var RETURN = 5; // The current stack has returned.
    var COMPLETED = 6; // The entire fiber has completed.
    function Fiber(util, supervisor, aff) {
        // Monotonically increasing tick, increased on each asynchronous turn.
        var runTick = 0;
        // The current branch of the state machine.
        var status = SUSPENDED;
        // The current point of interest for the state machine branch.
        var step = aff; // Successful step
        var fail = null; // Failure step
        var interrupt = null; // Asynchronous interrupt
        // Stack of continuations for the current fiber.
        var bhead = null;
        var btail = null;
        // Stack of attempts and finalizers for error recovery. Every `Cons` is also
        // tagged with current `interrupt` state. We use this to track which items
        // should be ignored or evaluated as a result of a kill.
        var attempts = null;
        // A special state is needed for Bracket, because it cannot be killed. When
        // we enter a bracket acquisition or finalizer, we increment the counter,
        // and then decrement once complete.
        var bracketCount = 0;
        // Each join gets a new id so they can be revoked.
        var joinId = 0;
        var joins = null;
        var rethrow = true;
        // Each invocation of `run` requires a tick. When an asynchronous effect is
        // resolved, we must check that the local tick coincides with the fiber
        // tick before resuming. This prevents multiple async continuations from
        // accidentally resuming the same fiber. A common example may be invoking
        // the provided callback in `makeAff` more than once, but it may also be an
        // async effect resuming after the fiber was already cancelled.
        function run(localRunTick) {
            var tmp, result, attempt;
            while(true){
                tmp = null;
                result = null;
                attempt = null;
                switch(status){
                    case STEP_BIND:
                        status = CONTINUE;
                        try {
                            step = bhead(step);
                            if (btail === null) bhead = null;
                            else {
                                bhead = btail._1;
                                btail = btail._2;
                            }
                        } catch (e) {
                            status = RETURN;
                            fail = util.left(e);
                            step = null;
                        }
                        break;
                    case STEP_RESULT:
                        if (util.isLeft(step)) {
                            status = RETURN;
                            fail = step;
                            step = null;
                        } else if (bhead === null) status = RETURN;
                        else {
                            status = STEP_BIND;
                            step = util.fromRight(step);
                        }
                        break;
                    case CONTINUE:
                        switch(step.tag){
                            case BIND:
                                if (bhead) btail = new Aff1(CONS, bhead, btail);
                                bhead = step._2;
                                status = CONTINUE;
                                step = step._1;
                                break;
                            case PURE:
                                if (bhead === null) {
                                    status = RETURN;
                                    step = util.right(step._1);
                                } else {
                                    status = STEP_BIND;
                                    step = step._1;
                                }
                                break;
                            case SYNC:
                                status = STEP_RESULT;
                                step = runSync(util.left, util.right, step._1);
                                break;
                            case ASYNC:
                                status = PENDING;
                                step = runAsync(util.left, step._1, function(result1) {
                                    return function() {
                                        if (runTick !== localRunTick) return;
                                        runTick++;
                                        Scheduler.enqueue(function() {
                                            // It's possible to interrupt the fiber between enqueuing and
                                            // resuming, so we need to check that the runTick is still
                                            // valid.
                                            if (runTick !== localRunTick + 1) return;
                                            status = STEP_RESULT;
                                            step = result1;
                                            run(runTick);
                                        });
                                    };
                                });
                                return;
                            case THROW:
                                status = RETURN;
                                fail = util.left(step._1);
                                step = null;
                                break;
                            // Enqueue the Catch so that we can call the error handler later on
                            // in case of an exception.
                            case CATCH:
                                if (bhead === null) attempts = new Aff1(CONS, step, attempts, interrupt);
                                else attempts = new Aff1(CONS, step, new Aff1(CONS, new Aff1(RESUME, bhead, btail), attempts, interrupt), interrupt);
                                bhead = null;
                                btail = null;
                                status = CONTINUE;
                                step = step._1;
                                break;
                            // Enqueue the Bracket so that we can call the appropriate handlers
                            // after resource acquisition.
                            case BRACKET:
                                bracketCount++;
                                if (bhead === null) attempts = new Aff1(CONS, step, attempts, interrupt);
                                else attempts = new Aff1(CONS, step, new Aff1(CONS, new Aff1(RESUME, bhead, btail), attempts, interrupt), interrupt);
                                bhead = null;
                                btail = null;
                                status = CONTINUE;
                                step = step._1;
                                break;
                            case FORK:
                                status = STEP_RESULT;
                                tmp = Fiber(util, supervisor, step._2);
                                if (supervisor) supervisor.register(tmp);
                                if (step._1) tmp.run();
                                step = util.right(tmp);
                                break;
                            case SEQ:
                                status = CONTINUE;
                                step = sequential(util, supervisor, step._1);
                                break;
                        }
                        break;
                    case RETURN:
                        bhead = null;
                        btail = null;
                        // If the current stack has returned, and we have no other stacks to
                        // resume or finalizers to run, the fiber has halted and we can
                        // invoke all join callbacks. Otherwise we need to resume.
                        if (attempts === null) {
                            status = COMPLETED;
                            step = interrupt || fail || step;
                        } else {
                            // The interrupt status for the enqueued item.
                            tmp = attempts._3;
                            attempt = attempts._1;
                            attempts = attempts._2;
                            switch(attempt.tag){
                                // We cannot recover from an unmasked interrupt. Otherwise we should
                                // continue stepping, or run the exception handler if an exception
                                // was raised.
                                case CATCH:
                                    // We should compare the interrupt status as well because we
                                    // only want it to apply if there has been an interrupt since
                                    // enqueuing the catch.
                                    if (interrupt && interrupt !== tmp && bracketCount === 0) status = RETURN;
                                    else if (fail) {
                                        status = CONTINUE;
                                        step = attempt._2(util.fromLeft(fail));
                                        fail = null;
                                    }
                                    break;
                                // We cannot resume from an unmasked interrupt or exception.
                                case RESUME:
                                    // As with Catch, we only want to ignore in the case of an
                                    // interrupt since enqueing the item.
                                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) status = RETURN;
                                    else {
                                        bhead = attempt._1;
                                        btail = attempt._2;
                                        status = STEP_BIND;
                                        step = util.fromRight(step);
                                    }
                                    break;
                                // If we have a bracket, we should enqueue the handlers,
                                // and continue with the success branch only if the fiber has
                                // not been interrupted. If the bracket acquisition failed, we
                                // should not run either.
                                case BRACKET:
                                    bracketCount--;
                                    if (fail === null) {
                                        result = util.fromRight(step);
                                        // We need to enqueue the Release with the same interrupt
                                        // status as the Bracket that is initiating it.
                                        attempts = new Aff1(CONS, new Aff1(RELEASE, attempt._2, result), attempts, tmp);
                                        // We should only coninue as long as the interrupt status has not changed or
                                        // we are currently within a non-interruptable finalizer.
                                        if (interrupt === tmp || bracketCount > 0) {
                                            status = CONTINUE;
                                            step = attempt._3(result);
                                        }
                                    }
                                    break;
                                // Enqueue the appropriate handler. We increase the bracket count
                                // because it should not be cancelled.
                                case RELEASE:
                                    attempts = new Aff1(CONS, new Aff1(FINALIZED, step, fail), attempts, interrupt);
                                    status = CONTINUE;
                                    // It has only been killed if the interrupt status has changed
                                    // since we enqueued the item, and the bracket count is 0. If the
                                    // bracket count is non-zero then we are in a masked state so it's
                                    // impossible to be killed.
                                    if (interrupt && interrupt !== tmp && bracketCount === 0) step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                                    else if (fail) step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                                    else step = attempt._1.completed(util.fromRight(step))(attempt._2);
                                    fail = null;
                                    bracketCount++;
                                    break;
                                case FINALIZER:
                                    bracketCount++;
                                    attempts = new Aff1(CONS, new Aff1(FINALIZED, step, fail), attempts, interrupt);
                                    status = CONTINUE;
                                    step = attempt._1;
                                    break;
                                case FINALIZED:
                                    bracketCount--;
                                    status = RETURN;
                                    step = attempt._1;
                                    fail = attempt._2;
                                    break;
                            }
                        }
                        break;
                    case COMPLETED:
                        for(var k in joins)if (joins.hasOwnProperty(k)) {
                            rethrow = rethrow && joins[k].rethrow;
                            runEff(joins[k].handler(step));
                        }
                        joins = null;
                        // If we have an interrupt and a fail, then the thread threw while
                        // running finalizers. This should always rethrow in a fresh stack.
                        if (interrupt && fail) setTimeout(function() {
                            throw util.fromLeft(fail);
                        }, 0);
                        else if (util.isLeft(step) && rethrow) setTimeout(function() {
                            // Guard on reathrow because a completely synchronous fiber can
                            // still have an observer which was added after-the-fact.
                            if (rethrow) throw util.fromLeft(step);
                        }, 0);
                        return;
                    case SUSPENDED:
                        status = CONTINUE;
                        break;
                    case PENDING:
                        return;
                }
            }
        }
        function onComplete(join) {
            return function() {
                if (status === COMPLETED) {
                    rethrow = rethrow && join.rethrow;
                    join.handler(step)();
                    return function() {
                    };
                }
                var jid = joinId++;
                joins = joins || {
                };
                joins[jid] = join;
                return function() {
                    if (joins !== null) delete joins[jid];
                };
            };
        }
        function kill(error, cb) {
            return function() {
                if (status === COMPLETED) {
                    cb(util.right(void 0))();
                    return function() {
                    };
                }
                var canceler = onComplete({
                    rethrow: false,
                    handler: function() {
                        return cb(util.right(void 0));
                    }
                })();
                switch(status){
                    case SUSPENDED:
                        interrupt = util.left(error);
                        status = COMPLETED;
                        step = interrupt;
                        run(runTick);
                        break;
                    case PENDING:
                        if (interrupt === null) interrupt = util.left(error);
                        if (bracketCount === 0) {
                            if (status === PENDING) attempts = new Aff1(CONS, new Aff1(FINALIZER, step(error)), attempts, interrupt);
                            status = RETURN;
                            step = null;
                            fail = null;
                            run(++runTick);
                        }
                        break;
                    default:
                        if (interrupt === null) interrupt = util.left(error);
                        if (bracketCount === 0) {
                            status = RETURN;
                            step = null;
                            fail = null;
                        }
                }
                return canceler;
            };
        }
        function join(cb) {
            return function() {
                var canceler = onComplete({
                    rethrow: false,
                    handler: cb
                })();
                if (status === SUSPENDED) run(runTick);
                return canceler;
            };
        }
        return {
            kill: kill,
            join: join,
            onComplete: onComplete,
            isSuspended: function() {
                return status === SUSPENDED;
            },
            run: function() {
                if (status === SUSPENDED) {
                    if (!Scheduler.isDraining()) Scheduler.enqueue(function() {
                        run(runTick);
                    });
                    else run(runTick);
                }
            }
        };
    }
    function runPar(util, supervisor, par, cb) {
        // Table of all forked fibers.
        var fiberId = 0;
        var fibers = {
        };
        // Table of currently running cancelers, as a product of `Alt` behavior.
        var killId = 0;
        var kills = {
        };
        // Error used for early cancelation on Alt branches.
        var early = new Error("[ParAff] Early exit");
        // Error used to kill the entire tree.
        var interrupt = null;
        // The root pointer of the tree.
        var root = EMPTY;
        // Walks a tree, invoking all the cancelers. Returns the table of pending
        // cancellation fibers.
        function kill(error, par1, cb1) {
            var step = par1;
            var head = null;
            var tail = null;
            var count = 0;
            var kills1 = {
            };
            var tmp, kid;
            loop: while(true){
                tmp = null;
                switch(step.tag){
                    case FORKED:
                        if (step._3 === EMPTY) {
                            tmp = fibers[step._1];
                            kills1[count++] = tmp.kill(error, function(result) {
                                return function() {
                                    count--;
                                    if (count === 0) cb1(result)();
                                };
                            });
                        }
                        // Terminal case.
                        if (head === null) break loop;
                        // Go down the right side of the tree.
                        step = head._2;
                        if (tail === null) head = null;
                        else {
                            head = tail._1;
                            tail = tail._2;
                        }
                        break;
                    case MAP:
                        step = step._2;
                        break;
                    case APPLY:
                    case ALT:
                        if (head) tail = new Aff1(CONS, head, tail);
                        head = step;
                        step = step._1;
                        break;
                }
            }
            if (count === 0) cb1(util.right(void 0))();
            else {
                // Run the cancelation effects. We alias `count` because it's mutable.
                kid = 0;
                tmp = count;
                for(; kid < tmp; kid++)kills1[kid] = kills1[kid]();
            }
            return kills1;
        }
        // When a fiber resolves, we need to bubble back up the tree with the
        // result, computing the applicative nodes.
        function join(result, head, tail) {
            var fail, step, lhs, rhs, tmp, kid;
            if (util.isLeft(result)) {
                fail = result;
                step = null;
            } else {
                step = result;
                fail = null;
            }
            loop: while(true){
                lhs = null;
                rhs = null;
                tmp = null;
                kid = null;
                // We should never continue if the entire tree has been interrupted.
                if (interrupt !== null) return;
                // We've made it all the way to the root of the tree, which means
                // the tree has fully evaluated.
                if (head === null) {
                    cb(fail || step)();
                    return;
                }
                // The tree has already been computed, so we shouldn't try to do it
                // again. This should never happen.
                // TODO: Remove this?
                if (head._3 !== EMPTY) return;
                switch(head.tag){
                    case MAP:
                        if (fail === null) {
                            head._3 = util.right(head._1(util.fromRight(step)));
                            step = head._3;
                        } else head._3 = fail;
                        break;
                    case APPLY:
                        lhs = head._1._3;
                        rhs = head._2._3;
                        // If we have a failure we should kill the other side because we
                        // can't possible yield a result anymore.
                        if (fail) {
                            head._3 = fail;
                            tmp = true;
                            kid = killId++;
                            kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function() {
                                return function() {
                                    delete kills[kid];
                                    if (tmp) tmp = false;
                                    else if (tail === null) join(fail, null, null);
                                    else join(fail, tail._1, tail._2);
                                };
                            });
                            if (tmp) {
                                tmp = false;
                                return;
                            }
                        } else if (lhs === EMPTY || rhs === EMPTY) // We can only proceed if both sides have resolved.
                        return;
                        else {
                            step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                            head._3 = step;
                        }
                        break;
                    case ALT:
                        lhs = head._1._3;
                        rhs = head._2._3;
                        // We can only proceed if both have resolved or we have a success
                        if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) return;
                        // If both sides resolve with an error, we should continue with the
                        // first error
                        if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                            fail = step === lhs ? rhs : lhs;
                            step = null;
                            head._3 = fail;
                        } else {
                            head._3 = step;
                            tmp = true;
                            kid = killId++;
                            // Once a side has resolved, we need to cancel the side that is still
                            // pending before we can continue.
                            kills[kid] = kill(early, step === lhs ? head._2 : head._1, function() {
                                return function() {
                                    delete kills[kid];
                                    if (tmp) tmp = false;
                                    else if (tail === null) join(step, null, null);
                                    else join(step, tail._1, tail._2);
                                };
                            });
                            if (tmp) {
                                tmp = false;
                                return;
                            }
                        }
                        break;
                }
                if (tail === null) head = null;
                else {
                    head = tail._1;
                    tail = tail._2;
                }
            }
        }
        function resolve(fiber) {
            return function(result) {
                return function() {
                    delete fibers[fiber._1];
                    fiber._3 = result;
                    join(result, fiber._2._1, fiber._2._2);
                };
            };
        }
        // Walks the applicative tree, substituting non-applicative nodes with
        // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
        // as a mutable slot for memoization. In an unresolved state, the `_3`
        // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
        // the left side first, because both operations are left-associative. As
        // we `RETURN` from those branches, we then walk the right side.
        function run() {
            var status = CONTINUE;
            var step = par;
            var head = null;
            var tail = null;
            var tmp, fid;
            loop: while(true){
                tmp = null;
                fid = null;
                switch(status){
                    case CONTINUE:
                        switch(step.tag){
                            case MAP:
                                if (head) tail = new Aff1(CONS, head, tail);
                                head = new Aff1(MAP, step._1, EMPTY, EMPTY);
                                step = step._2;
                                break;
                            case APPLY:
                                if (head) tail = new Aff1(CONS, head, tail);
                                head = new Aff1(APPLY, EMPTY, step._2, EMPTY);
                                step = step._1;
                                break;
                            case ALT:
                                if (head) tail = new Aff1(CONS, head, tail);
                                head = new Aff1(ALT, EMPTY, step._2, EMPTY);
                                step = step._1;
                                break;
                            default:
                                // When we hit a leaf value, we suspend the stack in the `FORKED`.
                                // When the fiber resolves, it can bubble back up the tree.
                                fid = fiberId++;
                                status = RETURN;
                                tmp = step;
                                step = new Aff1(FORKED, fid, new Aff1(CONS, head, tail), EMPTY);
                                tmp = Fiber(util, supervisor, tmp);
                                tmp.onComplete({
                                    rethrow: false,
                                    handler: resolve(step)
                                })();
                                fibers[fid] = tmp;
                                if (supervisor) supervisor.register(tmp);
                        }
                        break;
                    case RETURN:
                        // Terminal case, we are back at the root.
                        if (head === null) break loop;
                        // If we are done with the right side, we need to continue down the
                        // left. Otherwise we should continue up the stack.
                        if (head._1 === EMPTY) {
                            head._1 = step;
                            status = CONTINUE;
                            step = head._2;
                            head._2 = EMPTY;
                        } else {
                            head._2 = step;
                            step = head;
                            if (tail === null) head = null;
                            else {
                                head = tail._1;
                                tail = tail._2;
                            }
                        }
                }
            }
            // Keep a reference to the tree root so it can be cancelled.
            root = step;
            for(fid = 0; fid < fiberId; fid++)fibers[fid].run();
        }
        // Cancels the entire tree. If there are already subtrees being canceled,
        // we need to first cancel those joins. We will then add fresh joins for
        // all pending branches including those that were in the process of being
        // canceled.
        function cancel(error, cb1) {
            interrupt = util.left(error);
            var innerKills;
            for(var kid in kills)if (kills.hasOwnProperty(kid)) {
                innerKills = kills[kid];
                for(kid in innerKills)if (innerKills.hasOwnProperty(kid)) innerKills[kid]();
            }
            kills = null;
            var newKills = kill(error, root, cb1);
            return function(killError) {
                return new Aff1(ASYNC, function(killCb) {
                    return function() {
                        for(var kid1 in newKills)if (newKills.hasOwnProperty(kid1)) newKills[kid1]();
                        return nonCanceler;
                    };
                });
            };
        }
        run();
        return function(killError) {
            return new Aff1(ASYNC, function(killCb) {
                return function() {
                    return cancel(killError, killCb);
                };
            });
        };
    }
    function sequential(util, supervisor, par) {
        return new Aff1(ASYNC, function(cb) {
            return function() {
                return runPar(util, supervisor, par, cb);
            };
        });
    }
    Aff1.EMPTY = EMPTY;
    Aff1.Pure = AffCtr(PURE);
    Aff1.Throw = AffCtr(THROW);
    Aff1.Catch = AffCtr(CATCH);
    Aff1.Sync = AffCtr(SYNC);
    Aff1.Async = AffCtr(ASYNC);
    Aff1.Bind = AffCtr(BIND);
    Aff1.Bracket = AffCtr(BRACKET);
    Aff1.Fork = AffCtr(FORK);
    Aff1.Seq = AffCtr(SEQ);
    Aff1.ParMap = AffCtr(MAP);
    Aff1.ParApply = AffCtr(APPLY);
    Aff1.ParAlt = AffCtr(ALT);
    Aff1.Fiber = Fiber;
    Aff1.Supervisor = Supervisor;
    Aff1.Scheduler = Scheduler;
    Aff1.nonCanceler = nonCanceler;
    return Aff1;
}();
exports._pure = Aff.Pure;
exports._throwError = Aff.Throw;
exports._catchError = function(aff) {
    return function(k) {
        return Aff.Catch(aff, k);
    };
};
exports._map = function(f) {
    return function(aff) {
        if (aff.tag === Aff.Pure.tag) return Aff.Pure(f(aff._1));
        else return Aff.Bind(aff, function(value) {
            return Aff.Pure(f(value));
        });
    };
};
exports._bind = function(aff) {
    return function(k) {
        return Aff.Bind(aff, k);
    };
};
exports._fork = function(immediate) {
    return function(aff) {
        return Aff.Fork(immediate, aff);
    };
};
exports._liftEffect = Aff.Sync;
exports._parAffMap = function(f) {
    return function(aff) {
        return Aff.ParMap(f, aff);
    };
};
exports._parAffApply = function(aff1) {
    return function(aff2) {
        return Aff.ParApply(aff1, aff2);
    };
};
exports._parAffAlt = function(aff1) {
    return function(aff2) {
        return Aff.ParAlt(aff1, aff2);
    };
};
exports.makeAff = Aff.Async;
exports.generalBracket = function(acquire) {
    return function(options) {
        return function(k) {
            return Aff.Bracket(acquire, options, k);
        };
    };
};
exports._makeFiber = function(util, aff) {
    return function() {
        return Aff.Fiber(util, null, aff);
    };
};
exports._makeSupervisedFiber = function(util, aff) {
    return function() {
        var supervisor = Aff.Supervisor(util);
        return {
            fiber: Aff.Fiber(util, supervisor, aff),
            supervisor: supervisor
        };
    };
};
exports._killAll = function(error, supervisor, cb) {
    return supervisor.killAll(error, cb);
};
exports._delay = (function() {
    function setDelay(n, k) {
        if (n === 0 && typeof setImmediate !== "undefined") return setImmediate(k);
        else return setTimeout(k, n);
    }
    function clearDelay(n, t) {
        if (n === 0 && typeof clearImmediate !== "undefined") return clearImmediate(t);
        else return clearTimeout(t);
    }
    return function(right, ms) {
        return Aff.Async(function(cb) {
            return function() {
                var timer = setDelay(ms, cb(right()));
                return function() {
                    return Aff.Sync(function() {
                        return right(clearDelay(ms, timer));
                    });
                };
            };
        });
    };
})();
exports._sequential = Aff.Seq;

},{}],"82RIG":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Functor = require("../Data.Functor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Alt = function(Functor0, alt) {
    this.Functor0 = Functor0;
    this.alt = alt;
};
var altArray = new Alt(function() {
    return Data_Functor.functorArray;
}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
var alt = function(dict) {
    return dict.alt;
};
module.exports = {
    Alt: Alt,
    alt: alt,
    altArray: altArray,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"../Data.Functor/index.js":"iy1jO","../Data.Semigroup/index.js":"4sNah"}],"bgcOZ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Alternative = function(Applicative0, Plus1) {
    this.Applicative0 = Applicative0;
    this.Plus1 = Plus1;
};
var guard = function(dictAlternative) {
    return function(v) {
        if (v) return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Unit.unit);
        if (!v) return Control_Plus.empty(dictAlternative.Plus1());
        throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [
            v.constructor.name
        ]);
    };
};
var alternativeArray = new Alternative(function() {
    return Control_Applicative.applicativeArray;
}, function() {
    return Control_Plus.plusArray;
});
module.exports = {
    Alternative: Alternative,
    guard: guard,
    alternativeArray: alternativeArray,
    Alt: Control_Alt.Alt,
    alt: Control_Alt.alt,
    Applicative: Control_Applicative.Applicative,
    liftA1: Control_Applicative.liftA1,
    pure: Control_Applicative.pure,
    unless: Control_Applicative.unless,
    when: Control_Applicative.when,
    Apply: Control_Apply.Apply,
    apply: Control_Apply.apply,
    Plus: Control_Plus.Plus,
    empty: Control_Plus.empty,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"../Control.Alt/index.js":"82RIG","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Plus/index.js":"5lCU5","../Data.Functor/index.js":"iy1jO","../Data.Unit/index.js":"d7oKp"}],"5lCU5":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Plus = function(Alt0, empty) {
    this.Alt0 = Alt0;
    this.empty = empty;
};
var plusArray = new Plus(function() {
    return Control_Alt.altArray;
}, []);
var empty = function(dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus,
    empty: empty,
    plusArray: plusArray,
    Alt: Control_Alt.Alt,
    alt: Control_Alt.alt,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"../Control.Alt/index.js":"82RIG","../Data.Functor/index.js":"iy1jO"}],"acXO9":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var MonadThrow = function(Monad0, throwError) {
    this.Monad0 = Monad0;
    this.throwError = throwError;
};
var MonadError = function(MonadThrow0, catchError) {
    this.MonadThrow0 = MonadThrow0;
    this.catchError = catchError;
};
var throwError = function(dict) {
    return dict.throwError;
};
var monadThrowMaybe = new MonadThrow(function() {
    return Data_Maybe.monadMaybe;
}, Data_Function["const"](Data_Maybe.Nothing.value));
var monadThrowEither = new MonadThrow(function() {
    return Data_Either.monadEither;
}, Data_Either.Left.create);
var monadThrowEffect = new MonadThrow(function() {
    return Effect.monadEffect;
}, Effect_Exception.throwException);
var monadErrorMaybe = new MonadError(function() {
    return monadThrowMaybe;
}, function(v) {
    return function(v1) {
        if (v instanceof Data_Maybe.Nothing) return v1(Data_Unit.unit);
        if (v instanceof Data_Maybe.Just) return new Data_Maybe.Just(v.value0);
        throw new Error("Failed pattern match at Control.Monad.Error.Class (line 79, column 1 - line 81, column 33): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var monadErrorEither = new MonadError(function() {
    return monadThrowEither;
}, function(v) {
    return function(v1) {
        if (v instanceof Data_Either.Left) return v1(v.value0);
        if (v instanceof Data_Either.Right) return new Data_Either.Right(v.value0);
        throw new Error("Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 74, column 35): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var monadErrorEffect = new MonadError(function() {
    return monadThrowEffect;
}, Data_Function.flip(Effect_Exception.catchException));
var catchError = function(dict) {
    return dict.catchError;
};
var catchJust = function(dictMonadError) {
    return function(p) {
        return function(act) {
            return function(handler) {
                var handle = function(e) {
                    var v = p(e);
                    if (v instanceof Data_Maybe.Nothing) return throwError(dictMonadError.MonadThrow0())(e);
                    if (v instanceof Data_Maybe.Just) return handler(v.value0);
                    throw new Error("Failed pattern match at Control.Monad.Error.Class (line 57, column 5 - line 59, column 26): " + [
                        v.constructor.name
                    ]);
                };
                return catchError(dictMonadError)(act)(handle);
            };
        };
    };
};
var $$try = function(dictMonadError) {
    return function(a) {
        return catchError(dictMonadError)(Data_Functor.map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(a))(function() {
            var $17 = Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0());
            return function($18) {
                return $17(Data_Either.Left.create($18));
            };
        }());
    };
};
var withResource = function(dictMonadError) {
    return function(acquire) {
        return function(release) {
            return function(kleisli) {
                return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())(acquire)(function(resource) {
                    return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())($$try(dictMonadError)(kleisli(resource)))(function(result) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadError.MonadThrow0().Monad0().Bind1())(release(resource))(function() {
                            return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0()))(result);
                        });
                    });
                });
            };
        };
    };
};
module.exports = {
    catchError: catchError,
    throwError: throwError,
    MonadThrow: MonadThrow,
    MonadError: MonadError,
    catchJust: catchJust,
    "try": $$try,
    withResource: withResource,
    monadThrowEither: monadThrowEither,
    monadErrorEither: monadErrorEither,
    monadThrowMaybe: monadThrowMaybe,
    monadErrorMaybe: monadErrorMaybe,
    monadThrowEffect: monadThrowEffect,
    monadErrorEffect: monadErrorEffect
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Bind/index.js":"7Sory","../Data.Either/index.js":"3WZha","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Unit/index.js":"d7oKp","../Effect/index.js":"bKbtZ","../Effect.Exception/index.js":"3J2RH"}],"3WZha":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Left = function() {
    function Left1(value0) {
        this.value0 = value0;
    }
    Left1.create = function(value0) {
        return new Left1(value0);
    };
    return Left1;
}();
var Right = function() {
    function Right1(value0) {
        this.value0 = value0;
    }
    Right1.create = function(value0) {
        return new Right1(value0);
    };
    return Right1;
}();
var showEither = function(dictShow) {
    return function(dictShow1) {
        return new Data_Show.Show(function(v) {
            if (v instanceof Left) return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
            if (v instanceof Right) return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            throw new Error("Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): " + [
                v.constructor.name
            ]);
        });
    };
};
var note$prime = function(f) {
    return Data_Maybe["maybe'"](function($105) {
        return Left.create(f($105));
    })(Right.create);
};
var note = function(a) {
    return Data_Maybe.maybe(new Left(a))(Right.create);
};
var genericEither = new Data_Generic_Rep.Generic(function(x) {
    if (x instanceof Left) return new Data_Generic_Rep.Inl(x.value0);
    if (x instanceof Right) return new Data_Generic_Rep.Inr(x.value0);
    throw new Error("Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): " + [
        x.constructor.name
    ]);
}, function(x) {
    if (x instanceof Data_Generic_Rep.Inl) return new Left(x.value0);
    if (x instanceof Data_Generic_Rep.Inr) return new Right(x.value0);
    throw new Error("Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): " + [
        x.constructor.name
    ]);
});
var functorEither = new Data_Functor.Functor(function(f) {
    return function(m) {
        if (m instanceof Left) return new Left(m.value0);
        if (m instanceof Right) return new Right(f(m.value0));
        throw new Error("Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): " + [
            m.constructor.name
        ]);
    };
});
var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
var fromRight$prime = function(v) {
    return function(v1) {
        if (v1 instanceof Right) return v1.value0;
        return v(Data_Unit.unit);
    };
};
var fromRight = function(v) {
    return function(v1) {
        if (v1 instanceof Right) return v1.value0;
        return v;
    };
};
var fromLeft$prime = function(v) {
    return function(v1) {
        if (v1 instanceof Left) return v1.value0;
        return v(Data_Unit.unit);
    };
};
var fromLeft = function(v) {
    return function(v1) {
        if (v1 instanceof Left) return v1.value0;
        return v;
    };
};
var extendEither = new Control_Extend.Extend(function() {
    return functorEither;
}, function(v) {
    return function(v1) {
        if (v1 instanceof Left) return new Left(v1.value0);
        return new Right(v(v1));
    };
});
var eqEither = function(dictEq) {
    return function(dictEq1) {
        return new Data_Eq.Eq(function(x) {
            return function(y) {
                if (x instanceof Left && y instanceof Left) return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                if (x instanceof Right && y instanceof Right) return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                return false;
            };
        });
    };
};
var ordEither = function(dictOrd) {
    return function(dictOrd1) {
        return new Data_Ord.Ord(function() {
            return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function(x) {
            return function(y) {
                if (x instanceof Left && y instanceof Left) return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (x instanceof Left) return Data_Ordering.LT.value;
                if (y instanceof Left) return Data_Ordering.GT.value;
                if (x instanceof Right && y instanceof Right) return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
                throw new Error("Failed pattern match at Data.Either (line 189, column 1 - line 189, column 64): " + [
                    x.constructor.name,
                    y.constructor.name
                ]);
            };
        });
    };
};
var eq1Either = function(dictEq) {
    return new Data_Eq.Eq1(function(dictEq1) {
        return Data_Eq.eq(eqEither(dictEq)(dictEq1));
    });
};
var ord1Either = function(dictOrd) {
    return new Data_Ord.Ord1(function() {
        return eq1Either(dictOrd.Eq0());
    }, function(dictOrd1) {
        return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
    });
};
var either = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Left) return v(v2.value0);
            if (v2 instanceof Right) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
var choose = function(dictAlt) {
    return function(a) {
        return function(b) {
            return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
        };
    };
};
var boundedEither = function(dictBounded) {
    return function(dictBounded1) {
        return new Data_Bounded.Bounded(function() {
            return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
    };
};
var applyEither = new Control_Apply.Apply(function() {
    return functorEither;
}, function(v) {
    return function(v1) {
        if (v instanceof Left) return new Left(v.value0);
        if (v instanceof Right) return Data_Functor.map(functorEither)(v.value0)(v1);
        throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var bindEither = new Control_Bind.Bind(function() {
    return applyEither;
}, either(function(e) {
    return function(v) {
        return new Left(e);
    };
})(function(a) {
    return function(f) {
        return f(a);
    };
}));
var semigroupEither = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(x) {
        return function(y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
        };
    });
};
var applicativeEither = new Control_Applicative.Applicative(function() {
    return applyEither;
}, Right.create);
var monadEither = new Control_Monad.Monad(function() {
    return applicativeEither;
}, function() {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function() {
    return functorEither;
}, function(v) {
    return function(v1) {
        if (v instanceof Left) return v1;
        return v;
    };
});
module.exports = {
    Left: Left,
    Right: Right,
    either: either,
    choose: choose,
    isLeft: isLeft,
    isRight: isRight,
    fromLeft: fromLeft,
    "fromLeft'": fromLeft$prime,
    fromRight: fromRight,
    "fromRight'": fromRight$prime,
    note: note,
    "note'": note$prime,
    hush: hush,
    functorEither: functorEither,
    genericEither: genericEither,
    invariantEither: invariantEither,
    applyEither: applyEither,
    applicativeEither: applicativeEither,
    altEither: altEither,
    bindEither: bindEither,
    monadEither: monadEither,
    extendEither: extendEither,
    showEither: showEither,
    eqEither: eqEither,
    eq1Either: eq1Either,
    ordEither: ordEither,
    ord1Either: ord1Either,
    boundedEither: boundedEither,
    semigroupEither: semigroupEither
};

},{"../Control.Alt/index.js":"82RIG","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Extend/index.js":"kAltv","../Control.Monad/index.js":"alCn2","../Data.Bounded/index.js":"jzt4h","../Data.Eq/index.js":"c3b8F","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Functor.Invariant/index.js":"hYAzT","../Data.Generic.Rep/index.js":"2rL8E","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW","../Data.Unit/index.js":"d7oKp"}],"ePH81":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Nothing = function() {
    function Nothing1() {
    }
    Nothing1.value = new Nothing1();
    return Nothing1;
}();
var Just = function() {
    function Just1(value0) {
        this.value0 = value0;
    }
    Just1.create = function(value0) {
        return new Just1(value0);
    };
    return Just1;
}();
var showMaybe = function(dictShow) {
    return new Data_Show.Show(function(v) {
        if (v instanceof Just) return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
        if (v instanceof Nothing) return "Nothing";
        throw new Error("Failed pattern match at Data.Maybe (line 216, column 1 - line 218, column 28): " + [
            v.constructor.name
        ]);
    });
};
var semigroupMaybe = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            if (v instanceof Nothing) return v1;
            if (v1 instanceof Nothing) return v;
            if (v instanceof Just && v1 instanceof Just) return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
            throw new Error("Failed pattern match at Data.Maybe (line 185, column 1 - line 188, column 43): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    });
};
var optional = function(dictAlt) {
    return function(dictApplicative) {
        return function(a) {
            return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Just.create)(a))(Control_Applicative.pure(dictApplicative)(Nothing.value));
        };
    };
};
var monoidMaybe = function(dictSemigroup) {
    return new Data_Monoid.Monoid(function() {
        return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
};
var maybe$prime = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Nothing) return v(Data_Unit.unit);
            if (v2 instanceof Just) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Maybe (line 243, column 1 - line 243, column 62): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var maybe = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Nothing) return v;
            if (v2 instanceof Just) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var genericMaybe = new Data_Generic_Rep.Generic(function(x) {
    if (x instanceof Nothing) return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    if (x instanceof Just) return new Data_Generic_Rep.Inr(x.value0);
    throw new Error("Failed pattern match at Data.Maybe (line 220, column 1 - line 220, column 52): " + [
        x.constructor.name
    ]);
}, function(x) {
    if (x instanceof Data_Generic_Rep.Inl) return Nothing.value;
    if (x instanceof Data_Generic_Rep.Inr) return new Just(x.value0);
    throw new Error("Failed pattern match at Data.Maybe (line 220, column 1 - line 220, column 52): " + [
        x.constructor.name
    ]);
});
var functorMaybe = new Data_Functor.Functor(function(v) {
    return function(v1) {
        if (v1 instanceof Just) return new Just(v(v1.value0));
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function(a) {
    return maybe$prime(a)(Control_Category.identity(Control_Category.categoryFn));
};
var fromMaybe = function(a) {
    return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
};
var fromJust = function(dictPartial) {
    return function(v) {
        if (v instanceof Just) return v.value0;
        throw new Error("Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): " + [
            v.constructor.name
        ]);
    };
};
var extendMaybe = new Control_Extend.Extend(function() {
    return functorMaybe;
}, function(v) {
    return function(v1) {
        if (v1 instanceof Nothing) return Nothing.value;
        return new Just(v(v1));
    };
});
var eqMaybe = function(dictEq) {
    return new Data_Eq.Eq(function(x) {
        return function(y) {
            if (x instanceof Nothing && y instanceof Nothing) return true;
            if (x instanceof Just && y instanceof Just) return Data_Eq.eq(dictEq)(x.value0)(y.value0);
            return false;
        };
    });
};
var ordMaybe = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqMaybe(dictOrd.Eq0());
    }, function(x) {
        return function(y) {
            if (x instanceof Nothing && y instanceof Nothing) return Data_Ordering.EQ.value;
            if (x instanceof Nothing) return Data_Ordering.LT.value;
            if (y instanceof Nothing) return Data_Ordering.GT.value;
            if (x instanceof Just && y instanceof Just) return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
            throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 205, column 51): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    });
};
var eq1Maybe = new Data_Eq.Eq1(function(dictEq) {
    return Data_Eq.eq(eqMaybe(dictEq));
});
var ord1Maybe = new Data_Ord.Ord1(function() {
    return eq1Maybe;
}, function(dictOrd) {
    return Data_Ord.compare(ordMaybe(dictOrd));
});
var boundedMaybe = function(dictBounded) {
    return new Data_Bounded.Bounded(function() {
        return ordMaybe(dictBounded.Ord0());
    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
};
var applyMaybe = new Control_Apply.Apply(function() {
    return functorMaybe;
}, function(v) {
    return function(v1) {
        if (v instanceof Just) return Data_Functor.map(functorMaybe)(v.value0)(v1);
        if (v instanceof Nothing) return Nothing.value;
        throw new Error("Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var bindMaybe = new Control_Bind.Bind(function() {
    return applyMaybe;
}, function(v) {
    return function(v1) {
        if (v instanceof Just) return v1(v.value0);
        if (v instanceof Nothing) return Nothing.value;
        throw new Error("Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var applicativeMaybe = new Control_Applicative.Applicative(function() {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Control_Monad.Monad(function() {
    return applicativeMaybe;
}, function() {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function() {
    return functorMaybe;
}, function(v) {
    return function(v1) {
        if (v instanceof Nothing) return v1;
        return v;
    };
});
var plusMaybe = new Control_Plus.Plus(function() {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function() {
    return applicativeMaybe;
}, function() {
    return plusMaybe;
});
var monadZeroMaybe = new Control_MonadZero.MonadZero(function() {
    return alternativeMaybe;
}, function() {
    return monadMaybe;
}, function() {
    return undefined;
});
module.exports = {
    Nothing: Nothing,
    Just: Just,
    maybe: maybe,
    "maybe'": maybe$prime,
    fromMaybe: fromMaybe,
    "fromMaybe'": fromMaybe$prime,
    isJust: isJust,
    isNothing: isNothing,
    fromJust: fromJust,
    optional: optional,
    functorMaybe: functorMaybe,
    applyMaybe: applyMaybe,
    applicativeMaybe: applicativeMaybe,
    altMaybe: altMaybe,
    plusMaybe: plusMaybe,
    alternativeMaybe: alternativeMaybe,
    bindMaybe: bindMaybe,
    monadMaybe: monadMaybe,
    monadZeroMaybe: monadZeroMaybe,
    extendMaybe: extendMaybe,
    invariantMaybe: invariantMaybe,
    semigroupMaybe: semigroupMaybe,
    monoidMaybe: monoidMaybe,
    eqMaybe: eqMaybe,
    eq1Maybe: eq1Maybe,
    ordMaybe: ordMaybe,
    ord1Maybe: ord1Maybe,
    boundedMaybe: boundedMaybe,
    showMaybe: showMaybe,
    genericMaybe: genericMaybe
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Extend/index.js":"kAltv","../Control.Monad/index.js":"alCn2","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Bounded/index.js":"jzt4h","../Data.Eq/index.js":"c3b8F","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Functor.Invariant/index.js":"hYAzT","../Data.Generic.Rep/index.js":"2rL8E","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW","../Data.Unit/index.js":"d7oKp"}],"aqmZo":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var MonadZeroIsDeprecated = {
};
var MonadZero = function(Alternative1, Monad0, MonadZeroIsDeprecated2) {
    this.Alternative1 = Alternative1;
    this.Monad0 = Monad0;
    this.MonadZeroIsDeprecated2 = MonadZeroIsDeprecated2;
};
var monadZeroIsDeprecated = function(dictWarn) {
    return MonadZeroIsDeprecated;
};
var monadZeroArray = new MonadZero(function() {
    return Control_Alternative.alternativeArray;
}, function() {
    return Control_Monad.monadArray;
}, function() {
    return undefined;
});
module.exports = {
    MonadZeroIsDeprecated: MonadZeroIsDeprecated,
    MonadZero: MonadZero,
    monadZeroIsDeprecated: monadZeroIsDeprecated,
    monadZeroArray: monadZeroArray,
    Alt: Control_Alt.Alt,
    alt: Control_Alt.alt,
    Alternative: Control_Alternative.Alternative,
    guard: Control_Alternative.guard,
    Applicative: Control_Applicative.Applicative,
    liftA1: Control_Applicative.liftA1,
    pure: Control_Applicative.pure,
    unless: Control_Applicative.unless,
    when: Control_Applicative.when,
    Apply: Control_Apply.Apply,
    apply: Control_Apply.apply,
    Bind: Control_Bind.Bind,
    bind: Control_Bind.bind,
    ifM: Control_Bind.ifM,
    join: Control_Bind.join,
    Monad: Control_Monad.Monad,
    ap: Control_Monad.ap,
    liftM1: Control_Monad.liftM1,
    Plus: Control_Plus.Plus,
    empty: Control_Plus.empty,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Control.Plus/index.js":"5lCU5","../Data.Functor/index.js":"iy1jO"}],"bKbtZ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var monadEffect = new Control_Monad.Monad(function() {
    return applicativeEffect;
}, function() {
    return bindEffect;
});
var bindEffect = new Control_Bind.Bind(function() {
    return applyEffect;
}, $foreign.bindE);
var applyEffect = new Control_Apply.Apply(function() {
    return functorEffect;
}, Control_Monad.ap(monadEffect));
var applicativeEffect = new Control_Applicative.Applicative(function() {
    return applyEffect;
}, $foreign.pureE);
var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
var semigroupEffect = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
};
var monoidEffect = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffect(dictMonoid.Semigroup0());
    }, $foreign.pureE(Data_Monoid.mempty(dictMonoid)));
};
module.exports = {
    functorEffect: functorEffect,
    applyEffect: applyEffect,
    applicativeEffect: applicativeEffect,
    bindEffect: bindEffect,
    monadEffect: monadEffect,
    semigroupEffect: semigroupEffect,
    monoidEffect: monoidEffect,
    untilE: $foreign.untilE,
    whileE: $foreign.whileE,
    forE: $foreign.forE,
    foreachE: $foreign.foreachE
};

},{"./foreign.js":"ivEtP","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Semigroup/index.js":"4sNah"}],"ivEtP":[function(require,module,exports) {
"use strict";
exports.pureE = function(a) {
    return function() {
        return a;
    };
};
exports.bindE = function(a) {
    return function(f) {
        return function() {
            return f(a())();
        };
    };
};
exports.untilE = function(f) {
    return function() {
        while(!f());
    };
};
exports.whileE = function(f) {
    return function(a) {
        return function() {
            while(f())a();
        };
    };
};
exports.forE = function(lo) {
    return function(hi) {
        return function(f) {
            return function() {
                for(var i = lo; i < hi; i++)f(i)();
            };
        };
    };
};
exports.foreachE = function(as) {
    return function(f) {
        return function() {
            for(var i = 0, l = as.length; i < l; i++)f(as[i])();
        };
    };
};

},{}],"3J2RH":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Show = require("../Data.Show/index.js");
var Effect = require("../Effect/index.js");
var $$try = function(action) {
    return $foreign.catchException(function() {
        var $0 = Control_Applicative.pure(Effect.applicativeEffect);
        return function($1) {
            return $0(Data_Either.Left.create($1));
        };
    }())(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
};
var $$throw = function($2) {
    return $foreign.throwException($foreign.error($2));
};
var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Data_Show.Show($foreign.showErrorImpl);
module.exports = {
    stack: stack,
    "throw": $$throw,
    "try": $$try,
    showError: showError,
    error: $foreign.error,
    message: $foreign.message,
    name: $foreign.name,
    throwException: $foreign.throwException,
    catchException: $foreign.catchException
};

},{"./foreign.js":"dOJNe","../Control.Applicative/index.js":"dG9TO","../Data.Either/index.js":"3WZha","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Show/index.js":"b6tNW","../Effect/index.js":"bKbtZ"}],"dOJNe":[function(require,module,exports) {
"use strict";
exports.showErrorImpl = function(err) {
    return err.stack || err.toString();
};
exports.error = function(msg) {
    return new Error(msg);
};
exports.message = function(e) {
    return e.message;
};
exports.name = function(e) {
    return e.name || "Error";
};
exports.stackImpl = function(just) {
    return function(nothing) {
        return function(e) {
            return e.stack ? just(e.stack) : nothing;
        };
    };
};
exports.throwException = function(e) {
    return function() {
        throw e;
    };
};
exports.catchException = function(c) {
    return function(t) {
        return function() {
            try {
                return t();
            } catch (e) {
                if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") return c(e)();
                else return c(new Error(e.toString()))();
            }
        };
    };
};

},{}],"dMFG0":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Loop = function() {
    function Loop1(value0) {
        this.value0 = value0;
    }
    Loop1.create = function(value0) {
        return new Loop1(value0);
    };
    return Loop1;
}();
var Done = function() {
    function Done1(value0) {
        this.value0 = value0;
    }
    Done1.create = function(value0) {
        return new Done1(value0);
    };
    return Done1;
}();
var MonadRec = function(Monad0, tailRecM) {
    this.Monad0 = Monad0;
    this.tailRecM = tailRecM;
};
var tailRecM = function(dict) {
    return dict.tailRecM;
};
var tailRecM2 = function(dictMonadRec) {
    return function(f) {
        return function(a) {
            return function(b) {
                return tailRecM(dictMonadRec)(function(o) {
                    return f(o.a)(o.b);
                })({
                    a: a,
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function(dictMonadRec) {
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return tailRecM(dictMonadRec)(function(o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a,
                        b: b,
                        c: c
                    });
                };
            };
        };
    };
};
var untilJust = function(dictMonadRec) {
    return function(m) {
        return tailRecM(dictMonadRec)(function(v) {
            return Data_Functor.mapFlipped(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(m)(function(v1) {
                if (v1 instanceof Data_Maybe.Nothing) return new Loop(Data_Unit.unit);
                if (v1 instanceof Data_Maybe.Just) return new Done(v1.value0);
                throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 155, column 43 - line 157, column 19): " + [
                    v1.constructor.name
                ]);
            });
        })(Data_Unit.unit);
    };
};
var whileJust = function(dictMonoid) {
    return function(dictMonadRec) {
        return function(m) {
            return tailRecM(dictMonadRec)(function(v) {
                return Data_Functor.mapFlipped(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(m)(function(v1) {
                    if (v1 instanceof Data_Maybe.Nothing) return new Done(v);
                    if (v1 instanceof Data_Maybe.Just) return Loop.create(Data_Semigroup.append(dictMonoid.Semigroup0())(v)(v1.value0));
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 148, column 45 - line 150, column 26): " + [
                        v1.constructor.name
                    ]);
                });
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var tailRec = function(f) {
    var go = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Loop) {
                $copy_v = f(v.value0);
                return;
            }
            if (v instanceof Done) {
                $tco_done = true;
                return v.value0;
            }
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): " + [
                v.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    return function($58) {
        return go(f($58));
    };
};
var monadRecMaybe = new MonadRec(function() {
    return Data_Maybe.monadMaybe;
}, function(f) {
    return function(a0) {
        var g = function(v) {
            if (v instanceof Data_Maybe.Nothing) return new Done(Data_Maybe.Nothing.value);
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) return new Loop(f(v.value0.value0));
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) return new Done(new Data_Maybe.Just(v.value0.value0));
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 129, column 7 - line 129, column 31): " + [
                v.constructor.name
            ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecIdentity = new MonadRec(function() {
    return Data_Identity.monadIdentity;
}, function(f) {
    var runIdentity = function(v) {
        return v;
    };
    var $59 = tailRec(function($61) {
        return runIdentity(f($61));
    });
    return function($60) {
        return Data_Identity.Identity($59($60));
    };
});
var monadRecFunction = new MonadRec(function() {
    return Control_Monad.monadFn;
}, function(f) {
    return function(a0) {
        return function(e) {
            return tailRec(function(a) {
                return f(a)(e);
            })(a0);
        };
    };
});
var monadRecEither = new MonadRec(function() {
    return Data_Either.monadEither;
}, function(f) {
    return function(a0) {
        var g = function(v) {
            if (v instanceof Data_Either.Left) return new Done(new Data_Either.Left(v.value0));
            if (v instanceof Data_Either.Right && v.value0 instanceof Loop) return new Loop(f(v.value0.value0));
            if (v instanceof Data_Either.Right && v.value0 instanceof Done) return new Done(new Data_Either.Right(v.value0.value0));
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): " + [
                v.constructor.name
            ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecEffect = new MonadRec(function() {
    return Effect.monadEffect;
}, function(f) {
    return function(a) {
        var fromDone = function(v) {
            if (v instanceof Done) return v.value0;
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [
                v.constructor.name
            ]);
        };
        return function __do() {
            var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
            (function() {
                while(!function __do1() {
                    var v = Effect_Ref.read(r)();
                    if (v instanceof Loop) {
                        var e = f(v.value0)();
                        Effect_Ref.write(e)(r)();
                        return false;
                    }
                    if (v instanceof Done) return true;
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [
                        v.constructor.name
                    ]);
                }());
                return {
                };
            })();
            return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();
        };
    };
});
var functorStep = new Data_Functor.Functor(function(f) {
    return function(m) {
        if (m instanceof Loop) return new Loop(m.value0);
        if (m instanceof Done) return new Done(f(m.value0));
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 27, column 1 - line 27, column 48): " + [
            m.constructor.name
        ]);
    };
});
var forever = function(dictMonadRec) {
    return function(ma) {
        return tailRecM(dictMonadRec)(function(u) {
            return Data_Functor.voidRight(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(new Loop(u))(ma);
        })(Data_Unit.unit);
    };
};
var bifunctorStep = new Data_Bifunctor.Bifunctor(function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Loop) return new Loop(v(v2.value0));
            if (v2 instanceof Done) return new Done(v1(v2.value0));
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 29, column 1 - line 31, column 34): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
});
module.exports = {
    Loop: Loop,
    Done: Done,
    MonadRec: MonadRec,
    tailRec: tailRec,
    tailRecM: tailRecM,
    tailRecM2: tailRecM2,
    tailRecM3: tailRecM3,
    forever: forever,
    whileJust: whileJust,
    untilJust: untilJust,
    functorStep: functorStep,
    bifunctorStep: bifunctorStep,
    monadRecIdentity: monadRecIdentity,
    monadRecEffect: monadRecEffect,
    monadRecFunction: monadRecFunction,
    monadRecEither: monadRecEither,
    monadRecMaybe: monadRecMaybe
};

},{"../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Data.Bifunctor/index.js":"4aJ07","../Data.Either/index.js":"3WZha","../Data.Functor/index.js":"iy1jO","../Data.Identity/index.js":"3qeSN","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Semigroup/index.js":"4sNah","../Data.Unit/index.js":"d7oKp","../Effect/index.js":"bKbtZ","../Effect.Ref/index.js":"8AWDF"}],"4aJ07":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Bifunctor = function(bimap) {
    this.bimap = bimap;
};
var bimap = function(dict) {
    return dict.bimap;
};
var lmap = function(dictBifunctor) {
    return function(f) {
        return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var rmap = function(dictBifunctor) {
    return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
};
var bifunctorTuple = new Bifunctor(function(f) {
    return function(g) {
        return function(v) {
            return new Data_Tuple.Tuple(f(v.value0), g(v.value1));
        };
    };
});
var bifunctorEither = new Bifunctor(function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Data_Either.Left) return new Data_Either.Left(v(v2.value0));
            if (v2 instanceof Data_Either.Right) return new Data_Either.Right(v1(v2.value0));
            throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
});
var bifunctorConst = new Bifunctor(function(f) {
    return function(v) {
        return function(v1) {
            return f(v1);
        };
    };
});
module.exports = {
    bimap: bimap,
    Bifunctor: Bifunctor,
    lmap: lmap,
    rmap: rmap,
    bifunctorEither: bifunctorEither,
    bifunctorTuple: bifunctorTuple,
    bifunctorConst: bifunctorConst
};

},{"../Control.Category/index.js":"dfcPK","../Data.Either/index.js":"3WZha","../Data.Tuple/index.js":"eOBbM"}],"3qeSN":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var Identity = function(x) {
    return x;
};
var showIdentity = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringIdentity = function(dictSemiring) {
    return dictSemiring;
};
var semigroupIdenity = function(dictSemigroup) {
    return dictSemigroup;
};
var ringIdentity = function(dictRing) {
    return dictRing;
};
var ordIdentity = function(dictOrd) {
    return dictOrd;
};
var newtypeIdentity = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monoidIdentity = function(dictMonoid) {
    return dictMonoid;
};
var lazyIdentity = function(dictLazy) {
    return dictLazy;
};
var heytingAlgebraIdentity = function(dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorIdentity = new Data_Functor.Functor(function(f) {
    return function(m) {
        return f(m);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var extendIdentity = new Control_Extend.Extend(function() {
    return functorIdentity;
}, function(f) {
    return function(m) {
        return f(m);
    };
});
var euclideanRingIdentity = function(dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqIdentity = function(dictEq) {
    return dictEq;
};
var eq1Identity = new Data_Eq.Eq1(function(dictEq) {
    return Data_Eq.eq(eqIdentity(dictEq));
});
var ord1Identity = new Data_Ord.Ord1(function() {
    return eq1Identity;
}, function(dictOrd) {
    return Data_Ord.compare(ordIdentity(dictOrd));
});
var comonadIdentity = new Control_Comonad.Comonad(function() {
    return extendIdentity;
}, function(v) {
    return v;
});
var commutativeRingIdentity = function(dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedIdentity = function(dictBounded) {
    return dictBounded;
};
var booleanAlgebraIdentity = function(dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyIdentity = new Control_Apply.Apply(function() {
    return functorIdentity;
}, function(v) {
    return function(v1) {
        return v(v1);
    };
});
var bindIdentity = new Control_Bind.Bind(function() {
    return applyIdentity;
}, function(v) {
    return function(f) {
        return f(v);
    };
});
var applicativeIdentity = new Control_Applicative.Applicative(function() {
    return applyIdentity;
}, Identity);
var monadIdentity = new Control_Monad.Monad(function() {
    return applicativeIdentity;
}, function() {
    return bindIdentity;
});
var altIdentity = new Control_Alt.Alt(function() {
    return functorIdentity;
}, function(x) {
    return function(v) {
        return x;
    };
});
module.exports = {
    Identity: Identity,
    newtypeIdentity: newtypeIdentity,
    eqIdentity: eqIdentity,
    ordIdentity: ordIdentity,
    boundedIdentity: boundedIdentity,
    heytingAlgebraIdentity: heytingAlgebraIdentity,
    booleanAlgebraIdentity: booleanAlgebraIdentity,
    semigroupIdenity: semigroupIdenity,
    monoidIdentity: monoidIdentity,
    semiringIdentity: semiringIdentity,
    euclideanRingIdentity: euclideanRingIdentity,
    ringIdentity: ringIdentity,
    commutativeRingIdentity: commutativeRingIdentity,
    lazyIdentity: lazyIdentity,
    showIdentity: showIdentity,
    eq1Identity: eq1Identity,
    ord1Identity: ord1Identity,
    functorIdentity: functorIdentity,
    invariantIdentity: invariantIdentity,
    altIdentity: altIdentity,
    applyIdentity: applyIdentity,
    applicativeIdentity: applicativeIdentity,
    bindIdentity: bindIdentity,
    monadIdentity: monadIdentity,
    extendIdentity: extendIdentity,
    comonadIdentity: comonadIdentity
};

},{"../Control.Alt/index.js":"82RIG","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Comonad/index.js":"hfPua","../Control.Extend/index.js":"kAltv","../Control.Monad/index.js":"alCn2","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Functor.Invariant/index.js":"hYAzT","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Show/index.js":"b6tNW"}],"czJbt":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Safe_Coerce = require("../Safe.Coerce/index.js");
var Newtype = function(Coercible0) {
    this.Coercible0 = Coercible0;
};
var wrap = function(dictNewtype) {
    return Safe_Coerce.coerce();
};
var unwrap = function(dictNewtype) {
    return Safe_Coerce.coerce();
};
var underF2 = function(dictCoercible) {
    return function(dictCoercible1) {
        return function(dictNewtype) {
            return function(dictNewtype1) {
                return function(v) {
                    return Safe_Coerce.coerce();
                };
            };
        };
    };
};
var underF = function(dictCoercible) {
    return function(dictCoercible1) {
        return function(dictNewtype) {
            return function(dictNewtype1) {
                return function(v) {
                    return Safe_Coerce.coerce();
                };
            };
        };
    };
};
var under2 = function(dictNewtype) {
    return function(dictNewtype1) {
        return function(v) {
            return Safe_Coerce.coerce();
        };
    };
};
var under = function(dictNewtype) {
    return function(dictNewtype1) {
        return function(v) {
            return Safe_Coerce.coerce();
        };
    };
};
var un = function(dictNewtype) {
    return function(v) {
        return unwrap();
    };
};
var traverse = function(dictCoercible) {
    return function(dictNewtype) {
        return function(v) {
            return Safe_Coerce.coerce();
        };
    };
};
var overF2 = function(dictCoercible) {
    return function(dictCoercible1) {
        return function(dictNewtype) {
            return function(dictNewtype1) {
                return function(v) {
                    return Safe_Coerce.coerce();
                };
            };
        };
    };
};
var overF = function(dictCoercible) {
    return function(dictCoercible1) {
        return function(dictNewtype) {
            return function(dictNewtype1) {
                return function(v) {
                    return Safe_Coerce.coerce();
                };
            };
        };
    };
};
var over2 = function(dictNewtype) {
    return function(dictNewtype1) {
        return function(v) {
            return Safe_Coerce.coerce();
        };
    };
};
var over = function(dictNewtype) {
    return function(dictNewtype1) {
        return function(v) {
            return Safe_Coerce.coerce();
        };
    };
};
var newtypeMultiplicative = new Newtype(function() {
    return undefined;
});
var newtypeLast = new Newtype(function() {
    return undefined;
});
var newtypeFirst = new Newtype(function() {
    return undefined;
});
var newtypeEndo = new Newtype(function() {
    return undefined;
});
var newtypeDual = new Newtype(function() {
    return undefined;
});
var newtypeDisj = new Newtype(function() {
    return undefined;
});
var newtypeConj = new Newtype(function() {
    return undefined;
});
var newtypeAdditive = new Newtype(function() {
    return undefined;
});
var collect = function(dictCoercible) {
    return function(dictNewtype) {
        return function(v) {
            return Safe_Coerce.coerce();
        };
    };
};
var alaF = function(dictCoercible) {
    return function(dictCoercible1) {
        return function(dictNewtype) {
            return function(dictNewtype1) {
                return function(v) {
                    return Safe_Coerce.coerce();
                };
            };
        };
    };
};
var ala = function(dictCoercible) {
    return function(dictNewtype) {
        return function(dictNewtype1) {
            return function(v) {
                return function(f) {
                    return Safe_Coerce.coerce()(f(wrap()));
                };
            };
        };
    };
};
module.exports = {
    Newtype: Newtype,
    wrap: wrap,
    unwrap: unwrap,
    un: un,
    ala: ala,
    alaF: alaF,
    over: over,
    overF: overF,
    under: under,
    underF: underF,
    over2: over2,
    overF2: overF2,
    under2: under2,
    underF2: underF2,
    traverse: traverse,
    collect: collect,
    newtypeAdditive: newtypeAdditive,
    newtypeMultiplicative: newtypeMultiplicative,
    newtypeConj: newtypeConj,
    newtypeDisj: newtypeDisj,
    newtypeDual: newtypeDual,
    newtypeEndo: newtypeEndo,
    newtypeFirst: newtypeFirst,
    newtypeLast: newtypeLast
};

},{"../Safe.Coerce/index.js":"GOTPB"}],"GOTPB":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var coerce = function(dictCoercible) {
    return Unsafe_Coerce.unsafeCoerce;
};
module.exports = {
    coerce: coerce
};

},{"../Unsafe.Coerce/index.js":"6gO81"}],"6gO81":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign.js":"2obab"}],"2obab":[function(require,module,exports) {
"use strict";
// module Unsafe.Coerce
exports.unsafeCoerce = function(x) {
    return x;
};

},{}],"8AWDF":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Effect = require("../Effect/index.js");
var modify$prime = $foreign.modifyImpl;
var modify = function(f) {
    return modify$prime(function(s) {
        var s$prime = f(s);
        return {
            state: s$prime,
            value: s$prime
        };
    });
};
var modify_ = function(f) {
    return function(s) {
        return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
    };
};
module.exports = {
    "modify'": modify$prime,
    modify: modify,
    modify_: modify_,
    "new": $foreign["new"],
    newWithSelf: $foreign.newWithSelf,
    read: $foreign.read,
    write: $foreign.write
};

},{"./foreign.js":"iBjCZ","../Data.Functor/index.js":"iy1jO","../Effect/index.js":"bKbtZ"}],"iBjCZ":[function(require,module,exports) {
"use strict";
exports.new = function(val) {
    return function() {
        return {
            value: val
        };
    };
};
exports.newWithSelf = function(f) {
    return function() {
        var ref = {
            value: null
        };
        ref.value = f(ref);
        return ref;
    };
};
exports.read = function(ref) {
    return function() {
        return ref.value;
    };
};
exports.modifyImpl = function(f) {
    return function(ref) {
        return function() {
            var t = f(ref.value);
            ref.value = t.state;
            return t.value;
        };
    };
};
exports.write = function(val) {
    return function(ref) {
        return function() {
            ref.value = val;
        };
    };
};

},{}],"651yb":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var parTraverse_ = function(dictParallel) {
    return function(dictFoldable) {
        return function(f) {
            var $17 = Control_Parallel_Class.sequential(dictParallel);
            var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function() {
                var $20 = Control_Parallel_Class.parallel(dictParallel);
                return function($21) {
                    return $20(f($21));
                };
            }());
            return function($19) {
                return $17($18($19));
            };
        };
    };
};
var parTraverse = function(dictParallel) {
    return function(dictTraversable) {
        return function(f) {
            var $22 = Control_Parallel_Class.sequential(dictParallel);
            var $23 = Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function() {
                var $25 = Control_Parallel_Class.parallel(dictParallel);
                return function($26) {
                    return $25(f($26));
                };
            }());
            return function($24) {
                return $22($23($24));
            };
        };
    };
};
var parSequence_ = function(dictParallel) {
    return function(dictFoldable) {
        return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var parSequence = function(dictParallel) {
    return function(dictTraversable) {
        return parTraverse(dictParallel)(dictTraversable)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var parOneOfMap = function(dictParallel) {
    return function(dictAlternative) {
        return function(dictFoldable) {
            return function(dictFunctor) {
                return function(f) {
                    var $27 = Control_Parallel_Class.sequential(dictParallel);
                    var $28 = Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(function() {
                        var $30 = Control_Parallel_Class.parallel(dictParallel);
                        return function($31) {
                            return $30(f($31));
                        };
                    }());
                    return function($29) {
                        return $27($28($29));
                    };
                };
            };
        };
    };
};
var parOneOf = function(dictParallel) {
    return function(dictAlternative) {
        return function(dictFoldable) {
            return function(dictFunctor) {
                var $32 = Control_Parallel_Class.sequential(dictParallel);
                var $33 = Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel));
                return function($34) {
                    return $32($33($34));
                };
            };
        };
    };
};
var parApply = function(dictParallel) {
    return function(mf) {
        return function(ma) {
            return Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply(dictParallel.Applicative1().Apply0())(Control_Parallel_Class.parallel(dictParallel)(mf))(Control_Parallel_Class.parallel(dictParallel)(ma)));
        };
    };
};
module.exports = {
    parApply: parApply,
    parTraverse: parTraverse,
    parTraverse_: parTraverse_,
    parSequence: parSequence,
    parSequence_: parSequence_,
    parOneOf: parOneOf,
    parOneOfMap: parOneOfMap,
    ParCont: Control_Parallel_Class.ParCont,
    Parallel: Control_Parallel_Class.Parallel,
    parallel: Control_Parallel_Class.parallel,
    sequential: Control_Parallel_Class.sequential
};

},{"../Control.Apply/index.js":"cnlqg","../Control.Category/index.js":"dfcPK","../Control.Parallel.Class/index.js":"3BOQZ","../Data.Foldable/index.js":"jWmFN","../Data.Traversable/index.js":"i5Kon"}],"3BOQZ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");
var Data_Functor_Costar = require("../Data.Functor.Costar/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Parallel = function(Applicative1, Monad0, parallel, sequential) {
    this.Applicative1 = Applicative1;
    this.Monad0 = Monad0;
    this.parallel = parallel;
    this.sequential = sequential;
};
var ParCont = function(x) {
    return x;
};
var sequential = function(dict) {
    return dict.sequential;
};
var parallel = function(dict) {
    return dict.parallel;
};
var newtypeParCont = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monadParWriterT = function(dictMonoid) {
    return function(dictParallel) {
        return new Parallel(function() {
            return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel.Applicative1());
        }, function() {
            return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel.Monad0());
        }, Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)), Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)));
    };
};
var monadParStar = function(dictParallel) {
    return new Parallel(function() {
        return Data_Profunctor_Star.applicativeStar(dictParallel.Applicative1());
    }, function() {
        return Data_Profunctor_Star.monadStar(dictParallel.Monad0());
    }, function(v) {
        return Data_Profunctor_Star.Star(function() {
            var $47 = parallel(dictParallel);
            return function($48) {
                return $47(v($48));
            };
        }());
    }, function(v) {
        return Data_Profunctor_Star.Star(function() {
            var $49 = sequential(dictParallel);
            return function($50) {
                return $49(v($50));
            };
        }());
    });
};
var monadParReaderT = function(dictParallel) {
    return new Parallel(function() {
        return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
    }, function() {
        return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
    }, Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)), Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)));
};
var monadParMaybeT = function(dictParallel) {
    return new Parallel(function() {
        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);
    }, function() {
        return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());
    }, function(v) {
        return parallel(dictParallel)(v);
    }, function(v) {
        return sequential(dictParallel)(v);
    });
};
var monadParExceptT = function(dictParallel) {
    return new Parallel(function() {
        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
    }, function() {
        return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
    }, function(v) {
        return parallel(dictParallel)(v);
    }, function(v) {
        return sequential(dictParallel)(v);
    });
};
var monadParCostar = function(dictParallel) {
    return new Parallel(function() {
        return Data_Functor_Costar.applicativeCostar;
    }, function() {
        return Data_Functor_Costar.monadCostar;
    }, function(v) {
        return Data_Functor_Costar.Costar(function() {
            var $51 = sequential(dictParallel);
            return function($52) {
                return v($51($52));
            };
        }());
    }, function(v) {
        return Data_Functor_Costar.Costar(function() {
            var $53 = parallel(dictParallel);
            return function($54) {
                return v($53($54));
            };
        }());
    });
};
var monadParParCont = function(dictMonadEffect) {
    return new Parallel(function() {
        return applicativeParCont(dictMonadEffect);
    }, function() {
        return Control_Monad_Cont_Trans.monadContT(dictMonadEffect.Monad0());
    }, ParCont, function(v) {
        return v;
    });
};
var functorParCont = function(dictMonadEffect) {
    return new Data_Functor.Functor(function(f) {
        var $55 = parallel(monadParParCont(dictMonadEffect));
        var $56 = Data_Functor.map(Control_Monad_Cont_Trans.functorContT(dictMonadEffect.Monad0().Bind1().Apply0().Functor0()))(f);
        var $57 = sequential(monadParParCont(dictMonadEffect));
        return function($58) {
            return $55($56($57($58)));
        };
    });
};
var applyParCont = function(dictMonadEffect) {
    return new Control_Apply.Apply(function() {
        return functorParCont(dictMonadEffect);
    }, function(v) {
        return function(v1) {
            return ParCont(function(k) {
                return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function(ra) {
                    return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function(rb) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Control_Monad_Cont_Trans.runContT(v)(function(a) {
                            return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(rb)))(function(mb) {
                                if (mb instanceof Data_Maybe.Nothing) return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(a))(ra));
                                if (mb instanceof Data_Maybe.Just) return k(a(mb.value0));
                                throw new Error("Failed pattern match at Control.Parallel.Class (line 82, column 7 - line 84, column 26): " + [
                                    mb.constructor.name
                                ]);
                            });
                        }))(function() {
                            return Control_Monad_Cont_Trans.runContT(v1)(function(b) {
                                return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(ra)))(function(ma) {
                                    if (ma instanceof Data_Maybe.Nothing) return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(b))(rb));
                                    if (ma instanceof Data_Maybe.Just) return k(ma.value0(b));
                                    throw new Error("Failed pattern match at Control.Parallel.Class (line 88, column 7 - line 90, column 26): " + [
                                        ma.constructor.name
                                    ]);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var applicativeParCont = function(dictMonadEffect) {
    return new Control_Applicative.Applicative(function() {
        return applyParCont(dictMonadEffect);
    }, function() {
        var $59 = parallel(monadParParCont(dictMonadEffect));
        var $60 = Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT(dictMonadEffect.Monad0().Applicative0()));
        return function($61) {
            return $59($60($61));
        };
    }());
};
var altParCont = function(dictMonadEffect) {
    return new Control_Alt.Alt(function() {
        return functorParCont(dictMonadEffect);
    }, function(v) {
        return function(v1) {
            return ParCont(function(k) {
                return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](false)))(function(done) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Control_Monad_Cont_Trans.runContT(v)(function(a) {
                        return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(done)))(function(b) {
                            if (b) return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
                            return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(done)))(function() {
                                return k(a);
                            });
                        });
                    }))(function() {
                        return Control_Monad_Cont_Trans.runContT(v1)(function(a) {
                            return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(done)))(function(b) {
                                if (b) return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
                                return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(done)))(function() {
                                    return k(a);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var plusParCont = function(dictMonadEffect) {
    return new Control_Plus.Plus(function() {
        return altParCont(dictMonadEffect);
    }, ParCont(function(v) {
        return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
    }));
};
var alternativeParCont = function(dictMonadEffect) {
    return new Control_Alternative.Alternative(function() {
        return applicativeParCont(dictMonadEffect);
    }, function() {
        return plusParCont(dictMonadEffect);
    });
};
module.exports = {
    parallel: parallel,
    sequential: sequential,
    Parallel: Parallel,
    ParCont: ParCont,
    monadParExceptT: monadParExceptT,
    monadParReaderT: monadParReaderT,
    monadParWriterT: monadParWriterT,
    monadParMaybeT: monadParMaybeT,
    monadParStar: monadParStar,
    monadParCostar: monadParCostar,
    newtypeParCont: newtypeParCont,
    functorParCont: functorParCont,
    applyParCont: applyParCont,
    applicativeParCont: applicativeParCont,
    altParCont: altParCont,
    plusParCont: plusParCont,
    alternativeParCont: alternativeParCont,
    monadParParCont: monadParParCont
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad.Cont.Trans/index.js":"9BSpt","../Control.Monad.Except.Trans/index.js":"jlllv","../Control.Monad.Maybe.Trans/index.js":"dvmae","../Control.Monad.Reader.Trans/index.js":"eiBpm","../Control.Monad.Writer.Trans/index.js":"av8fT","../Control.Plus/index.js":"5lCU5","../Data.Either/index.js":"3WZha","../Data.Functor/index.js":"iy1jO","../Data.Functor.Compose/index.js":"aJAZA","../Data.Functor.Costar/index.js":"hFevi","../Data.Maybe/index.js":"ePH81","../Data.Newtype/index.js":"czJbt","../Data.Profunctor.Star/index.js":"afhPT","../Data.Unit/index.js":"d7oKp","../Effect.Class/index.js":"53rRA","../Effect.Ref/index.js":"8AWDF"}],"9BSpt":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var ContT = function(x) {
    return x;
};
var withContT = function(f) {
    return function(v) {
        return function(k) {
            return v(f(k));
        };
    };
};
var runContT = function(v) {
    return function(k) {
        return v(k);
    };
};
var newtypeContT = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monadTransContT = new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
    return function(m) {
        return function(k) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(k);
        };
    };
});
var mapContT = function(f) {
    return function(v) {
        return function(k) {
            return f(v(k));
        };
    };
};
var functorContT = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        return function(v) {
            return function(k) {
                return v(function(a) {
                    return k(f(a));
                });
            };
        };
    });
};
var applyContT = function(dictApply) {
    return new Control_Apply.Apply(function() {
        return functorContT(dictApply.Functor0());
    }, function(v) {
        return function(v1) {
            return function(k) {
                return v(function(g) {
                    return v1(function(a) {
                        return k(g(a));
                    });
                });
            };
        };
    });
};
var bindContT = function(dictBind) {
    return new Control_Bind.Bind(function() {
        return applyContT(dictBind.Apply0());
    }, function(v) {
        return function(k) {
            return function(k$prime) {
                return v(function(a) {
                    var v1 = k(a);
                    return v1(k$prime);
                });
            };
        };
    });
};
var semigroupContT = function(dictApply) {
    return function(dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyContT(dictApply))(Data_Semigroup.append(dictSemigroup)));
    };
};
var applicativeContT = function(dictApplicative) {
    return new Control_Applicative.Applicative(function() {
        return applyContT(dictApplicative.Apply0());
    }, function(a) {
        return function(k) {
            return k(a);
        };
    });
};
var monadContT = function(dictMonad) {
    return new Control_Monad.Monad(function() {
        return applicativeContT(dictMonad.Applicative0());
    }, function() {
        return bindContT(dictMonad.Bind1());
    });
};
var monadAskContT = function(dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function() {
        return monadContT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderContT = function(dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function() {
        return monadAskContT(dictMonadReader.MonadAsk0());
    }, function(f) {
        return function(v) {
            return function(k) {
                return Control_Bind.bind(dictMonadReader.MonadAsk0().Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadReader.MonadAsk0()))(function(r) {
                    return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function() {
                        var $44 = Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](r));
                        return function($45) {
                            return $44(k($45));
                        };
                    }()));
                });
            };
        };
    });
};
var monadContContT = function(dictMonad) {
    return new Control_Monad_Cont_Class.MonadCont(function() {
        return monadContT(dictMonad);
    }, function(f) {
        return function(k) {
            var v = f(function(a) {
                return function(v1) {
                    return k(a);
                };
            });
            return v(k);
        };
    });
};
var monadEffectContT = function(dictMonadEffect) {
    return new Effect_Class.MonadEffect(function() {
        return monadContT(dictMonadEffect.Monad0());
    }, function() {
        var $46 = Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEffect.Monad0());
        var $47 = Effect_Class.liftEffect(dictMonadEffect);
        return function($48) {
            return $46($47($48));
        };
    }());
};
var monadStateContT = function(dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function() {
        return monadContT(dictMonadState.Monad0());
    }, function() {
        var $49 = Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState.Monad0());
        var $50 = Control_Monad_State_Class.state(dictMonadState);
        return function($51) {
            return $49($50($51));
        };
    }());
};
var monoidContT = function(dictApplicative) {
    return function(dictMonoid) {
        return new Data_Monoid.Monoid(function() {
            return semigroupContT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeContT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
    };
};
module.exports = {
    ContT: ContT,
    runContT: runContT,
    mapContT: mapContT,
    withContT: withContT,
    newtypeContT: newtypeContT,
    monadContContT: monadContContT,
    functorContT: functorContT,
    applyContT: applyContT,
    applicativeContT: applicativeContT,
    bindContT: bindContT,
    monadContT: monadContT,
    monadTransContT: monadTransContT,
    monadEffectContT: monadEffectContT,
    monadAskContT: monadAskContT,
    monadReaderContT: monadReaderContT,
    monadStateContT: monadStateContT,
    semigroupContT: semigroupContT,
    monoidContT: monoidContT,
    MonadCont: Control_Monad_Cont_Class.MonadCont,
    callCC: Control_Monad_Cont_Class.callCC,
    MonadTrans: Control_Monad_Trans_Class.MonadTrans,
    lift: Control_Monad_Trans_Class.lift
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Control.Monad.Cont.Class/index.js":"kWCMf","../Control.Monad.Reader.Class/index.js":"3BEj9","../Control.Monad.State.Class/index.js":"enW6F","../Control.Monad.Trans.Class/index.js":"9pz5v","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Effect.Class/index.js":"53rRA"}],"kWCMf":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var MonadCont = function(Monad0, callCC) {
    this.Monad0 = Monad0;
    this.callCC = callCC;
};
var callCC = function(dict) {
    return dict.callCC;
};
module.exports = {
    MonadCont: MonadCont,
    callCC: callCC
};

},{}],"3BEj9":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var MonadAsk = function(Monad0, ask) {
    this.Monad0 = Monad0;
    this.ask = ask;
};
var MonadReader = function(MonadAsk0, local) {
    this.MonadAsk0 = MonadAsk0;
    this.local = local;
};
var monadAskFun = new MonadAsk(function() {
    return Control_Monad.monadFn;
}, Control_Category.identity(Control_Category.categoryFn));
var monadReaderFun = new MonadReader(function() {
    return monadAskFun;
}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
var local = function(dict) {
    return dict.local;
};
var ask = function(dict) {
    return dict.ask;
};
var asks = function(dictMonadAsk) {
    return function(f) {
        return Data_Functor.map(dictMonadAsk.Monad0().Bind1().Apply0().Functor0())(f)(ask(dictMonadAsk));
    };
};
module.exports = {
    ask: ask,
    local: local,
    MonadAsk: MonadAsk,
    asks: asks,
    MonadReader: MonadReader,
    monadAskFun: monadAskFun,
    monadReaderFun: monadReaderFun
};

},{"../Control.Category/index.js":"dfcPK","../Control.Monad/index.js":"alCn2","../Control.Semigroupoid/index.js":"fSgEH","../Data.Functor/index.js":"iy1jO"}],"9pz5v":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var MonadTrans = function(lift) {
    this.lift = lift;
};
var lift = function(dict) {
    return dict.lift;
};
module.exports = {
    lift: lift,
    MonadTrans: MonadTrans
};

},{}],"53rRA":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Effect = require("../Effect/index.js");
var MonadEffect = function(Monad0, liftEffect) {
    this.Monad0 = Monad0;
    this.liftEffect = liftEffect;
};
var monadEffectEffect = new MonadEffect(function() {
    return Effect.monadEffect;
}, Control_Category.identity(Control_Category.categoryFn));
var liftEffect = function(dict) {
    return dict.liftEffect;
};
module.exports = {
    liftEffect: liftEffect,
    MonadEffect: MonadEffect,
    monadEffectEffect: monadEffectEffect
};

},{"../Control.Category/index.js":"dfcPK","../Effect/index.js":"bKbtZ"}],"jlllv":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var ExceptT = function(x) {
    return x;
};
var withExceptT = function(dictFunctor) {
    return function(f) {
        return function(v) {
            var mapLeft = function(v1) {
                return function(v2) {
                    if (v2 instanceof Data_Either.Right) return new Data_Either.Right(v2.value0);
                    if (v2 instanceof Data_Either.Left) return new Data_Either.Left(v1(v2.value0));
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 43, column 3 - line 43, column 32): " + [
                        v1.constructor.name,
                        v2.constructor.name
                    ]);
                };
            };
            return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
        };
    };
};
var runExceptT = function(v) {
    return v;
};
var newtypeExceptT = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
    return function(m) {
        return Control_Bind.bind(dictMonad.Bind1())(m)(function(a) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(a));
        });
    };
});
var mapExceptT = function(f) {
    return function(v) {
        return f(v);
    };
};
var functorExceptT = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
};
var except = function(dictApplicative) {
    var $89 = Control_Applicative.pure(dictApplicative);
    return function($90) {
        return ExceptT($89($90));
    };
};
var monadExceptT = function(dictMonad) {
    return new Control_Monad.Monad(function() {
        return applicativeExceptT(dictMonad);
    }, function() {
        return bindExceptT(dictMonad);
    });
};
var bindExceptT = function(dictMonad) {
    return new Control_Bind.Bind(function() {
        return applyExceptT(dictMonad);
    }, function(v) {
        return function(k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function() {
                var $91 = Control_Applicative.pure(dictMonad.Applicative0());
                return function($92) {
                    return $91(Data_Either.Left.create($92));
                };
            }())(function(a) {
                var v1 = k(a);
                return v1;
            }));
        };
    });
};
var applyExceptT = function(dictMonad) {
    return new Control_Apply.Apply(function() {
        return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
};
var applicativeExceptT = function(dictMonad) {
    return new Control_Applicative.Applicative(function() {
        return applyExceptT(dictMonad);
    }, function() {
        var $93 = Control_Applicative.pure(dictMonad.Applicative0());
        return function($94) {
            return ExceptT($93(Data_Either.Right.create($94)));
        };
    }());
};
var semigroupExceptT = function(dictMonad) {
    return function(dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyExceptT(dictMonad))(Data_Semigroup.append(dictSemigroup)));
    };
};
var monadAskExceptT = function(dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function() {
        return monadExceptT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderExceptT = function(dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function() {
        return monadAskExceptT(dictMonadReader.MonadAsk0());
    }, function(f) {
        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContExceptT = function(dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function() {
        return monadExceptT(dictMonadCont.Monad0());
    }, function(f) {
        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function(c) {
            var v = f(function(a) {
                return ExceptT(c(new Data_Either.Right(a)));
            });
            return v;
        }));
    });
};
var monadEffectExceptT = function(dictMonadEffect) {
    return new Effect_Class.MonadEffect(function() {
        return monadExceptT(dictMonadEffect.Monad0());
    }, function() {
        var $95 = Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEffect.Monad0());
        var $96 = Effect_Class.liftEffect(dictMonadEffect);
        return function($97) {
            return $95($96($97));
        };
    }());
};
var monadRecExceptT = function(dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function() {
        return monadExceptT(dictMonadRec.Monad0());
    }, function(f) {
        var $98 = Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function(a) {
            var v = f(a);
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v)(function(m$prime) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function() {
                    if (m$prime instanceof Data_Either.Left) return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
                    if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                    if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 75, column 14 - line 78, column 43): " + [
                        m$prime.constructor.name
                    ]);
                }());
            });
        });
        return function($99) {
            return ExceptT($98($99));
        };
    });
};
var monadStateExceptT = function(dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function() {
        return monadExceptT(dictMonadState.Monad0());
    }, function(f) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellExceptT = function(dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function() {
        return monadExceptT(dictMonadTell.Monad1());
    }, dictMonadTell.Semigroup0, function() {
        var $100 = Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad1());
        var $101 = Control_Monad_Writer_Class.tell(dictMonadTell);
        return function($102) {
            return $100($101($102));
        };
    }());
};
var monadWriterExceptT = function(dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function() {
        return monadTellExceptT(dictMonadWriter.MonadTell1());
    }, dictMonadWriter.Monoid0, mapExceptT(function(m) {
        return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function(v) {
            return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(Data_Functor.map(Data_Either.functorEither)(function(r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapExceptT(function(m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m)(function(a) {
            return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(function() {
                if (a instanceof Data_Either.Left) return new Data_Tuple.Tuple(new Data_Either.Left(a.value0), Control_Category.identity(Control_Category.categoryFn));
                if (a instanceof Data_Either.Right) return new Data_Tuple.Tuple(new Data_Either.Right(a.value0.value0), a.value0.value1);
                throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 137, column 10 - line 139, column 45): " + [
                    a.constructor.name
                ]);
            }());
        }));
    }));
};
var monadThrowExceptT = function(dictMonad) {
    return new Control_Monad_Error_Class.MonadThrow(function() {
        return monadExceptT(dictMonad);
    }, function() {
        var $103 = Control_Applicative.pure(dictMonad.Applicative0());
        return function($104) {
            return ExceptT($103(Data_Either.Left.create($104)));
        };
    }());
};
var monadErrorExceptT = function(dictMonad) {
    return new Control_Monad_Error_Class.MonadError(function() {
        return monadThrowExceptT(dictMonad);
    }, function(v) {
        return function(k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function(a) {
                var v1 = k(a);
                return v1;
            })(function() {
                var $105 = Control_Applicative.pure(dictMonad.Applicative0());
                return function($106) {
                    return $105(Data_Either.Right.create($106));
                };
            }()));
        };
    });
};
var monoidExceptT = function(dictMonad) {
    return function(dictMonoid) {
        return new Data_Monoid.Monoid(function() {
            return semigroupExceptT(dictMonad)(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var altExceptT = function(dictSemigroup) {
    return function(dictMonad) {
        return new Control_Alt.Alt(function() {
            return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
        }, function(v) {
            return function(v1) {
                return Control_Bind.bind(dictMonad.Bind1())(v)(function(rm) {
                    if (rm instanceof Data_Either.Right) return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
                    if (rm instanceof Data_Either.Left) return Control_Bind.bind(dictMonad.Bind1())(v1)(function(rn) {
                        if (rn instanceof Data_Either.Right) return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
                        if (rn instanceof Data_Either.Left) return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 87, column 9 - line 89, column 49): " + [
                            rn.constructor.name
                        ]);
                    });
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 83, column 5 - line 89, column 49): " + [
                        rm.constructor.name
                    ]);
                });
            };
        });
    };
};
var plusExceptT = function(dictMonoid) {
    return function(dictMonad) {
        return new Control_Plus.Plus(function() {
            return altExceptT(dictMonoid.Semigroup0())(dictMonad);
        }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var alternativeExceptT = function(dictMonoid) {
    return function(dictMonad) {
        return new Control_Alternative.Alternative(function() {
            return applicativeExceptT(dictMonad);
        }, function() {
            return plusExceptT(dictMonoid)(dictMonad);
        });
    };
};
var monadPlusExceptT = function(dictMonoid) {
    return function(dictMonad) {
        return new Control_MonadPlus.MonadPlus(function() {
            return alternativeExceptT(dictMonoid)(dictMonad);
        }, function() {
            return monadExceptT(dictMonad);
        });
    };
};
var monadZeroExceptT = function(dictMonoid) {
    return function(dictMonad) {
        return new Control_MonadZero.MonadZero(function() {
            return alternativeExceptT(dictMonoid)(dictMonad);
        }, function() {
            return monadExceptT(dictMonad);
        }, function() {
            return undefined;
        });
    };
};
module.exports = {
    ExceptT: ExceptT,
    runExceptT: runExceptT,
    withExceptT: withExceptT,
    mapExceptT: mapExceptT,
    except: except,
    newtypeExceptT: newtypeExceptT,
    functorExceptT: functorExceptT,
    applyExceptT: applyExceptT,
    applicativeExceptT: applicativeExceptT,
    bindExceptT: bindExceptT,
    monadExceptT: monadExceptT,
    monadRecExceptT: monadRecExceptT,
    altExceptT: altExceptT,
    plusExceptT: plusExceptT,
    alternativeExceptT: alternativeExceptT,
    monadPlusExceptT: monadPlusExceptT,
    monadZeroExceptT: monadZeroExceptT,
    monadTransExceptT: monadTransExceptT,
    monadEffectExceptT: monadEffectExceptT,
    monadContExceptT: monadContExceptT,
    monadThrowExceptT: monadThrowExceptT,
    monadErrorExceptT: monadErrorExceptT,
    monadAskExceptT: monadAskExceptT,
    monadReaderExceptT: monadReaderExceptT,
    monadStateExceptT: monadStateExceptT,
    monadTellExceptT: monadTellExceptT,
    monadWriterExceptT: monadWriterExceptT,
    semigroupExceptT: semigroupExceptT,
    monoidExceptT: monoidExceptT,
    MonadError: Control_Monad_Error_Class.MonadError,
    MonadThrow: Control_Monad_Error_Class.MonadThrow,
    catchError: Control_Monad_Error_Class.catchError,
    throwError: Control_Monad_Error_Class.throwError,
    MonadTrans: Control_Monad_Trans_Class.MonadTrans,
    lift: Control_Monad_Trans_Class.lift
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Monad/index.js":"alCn2","../Control.Monad.Cont.Class/index.js":"kWCMf","../Control.Monad.Error.Class/index.js":"acXO9","../Control.Monad.Reader.Class/index.js":"3BEj9","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Monad.State.Class/index.js":"enW6F","../Control.Monad.Trans.Class/index.js":"9pz5v","../Control.Monad.Writer.Class/index.js":"6wyz5","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Either/index.js":"3WZha","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Tuple/index.js":"eOBbM","../Effect.Class/index.js":"53rRA"}],"6wyz5":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var MonadTell = function(Monad1, Semigroup0, tell) {
    this.Monad1 = Monad1;
    this.Semigroup0 = Semigroup0;
    this.tell = tell;
};
var MonadWriter = function(MonadTell1, Monoid0, listen, pass) {
    this.MonadTell1 = MonadTell1;
    this.Monoid0 = Monoid0;
    this.listen = listen;
    this.pass = pass;
};
var tell = function(dict) {
    return dict.tell;
};
var pass = function(dict) {
    return dict.pass;
};
var listen = function(dict) {
    return dict.listen;
};
var listens = function(dictMonadWriter) {
    return function(f) {
        return function(m) {
            return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(listen(dictMonadWriter)(m))(function(v) {
                return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
            });
        };
    };
};
var censor = function(dictMonadWriter) {
    return function(f) {
        return function(m) {
            return pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m)(function(a) {
                return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(new Data_Tuple.Tuple(a, f));
            }));
        };
    };
};
module.exports = {
    listen: listen,
    pass: pass,
    tell: tell,
    MonadTell: MonadTell,
    MonadWriter: MonadWriter,
    listens: listens,
    censor: censor
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Bind/index.js":"7Sory","../Data.Tuple/index.js":"eOBbM"}],"jUJh4":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var MonadPlus = function(Alternative1, Monad0) {
    this.Alternative1 = Alternative1;
    this.Monad0 = Monad0;
};
var monadPlusArray = new MonadPlus(function() {
    return Control_Alternative.alternativeArray;
}, function() {
    return Control_Monad.monadArray;
});
module.exports = {
    MonadPlus: MonadPlus,
    monadPlusArray: monadPlusArray,
    Alt: Control_Alt.Alt,
    alt: Control_Alt.alt,
    Alternative: Control_Alternative.Alternative,
    guard: Control_Alternative.guard,
    Applicative: Control_Applicative.Applicative,
    liftA1: Control_Applicative.liftA1,
    pure: Control_Applicative.pure,
    unless: Control_Applicative.unless,
    when: Control_Applicative.when,
    Apply: Control_Apply.Apply,
    apply: Control_Apply.apply,
    Bind: Control_Bind.Bind,
    bind: Control_Bind.bind,
    ifM: Control_Bind.ifM,
    join: Control_Bind.join,
    Monad: Control_Monad.Monad,
    ap: Control_Monad.ap,
    liftM1: Control_Monad.liftM1,
    MonadZero: Control_MonadZero.MonadZero,
    Plus: Control_Plus.Plus,
    empty: Control_Plus.empty,
    Functor: Data_Functor.Functor,
    map: Data_Functor.map,
    "void": Data_Functor["void"]
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Functor/index.js":"iy1jO"}],"dvmae":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var MaybeT = function(x) {
    return x;
};
var runMaybeT = function(v) {
    return v;
};
var newtypeMaybeT = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
    var $72 = Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create);
    return function($73) {
        return MaybeT($72($73));
    };
});
var mapMaybeT = function(f) {
    return function(v) {
        return f(v);
    };
};
var functorMaybeT = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        return function(v) {
            return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
        };
    });
};
var monadMaybeT = function(dictMonad) {
    return new Control_Monad.Monad(function() {
        return applicativeMaybeT(dictMonad);
    }, function() {
        return bindMaybeT(dictMonad);
    });
};
var bindMaybeT = function(dictMonad) {
    return new Control_Bind.Bind(function() {
        return applyMaybeT(dictMonad);
    }, function(v) {
        return function(f) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function(v1) {
                if (v1 instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
                if (v1 instanceof Data_Maybe.Just) {
                    var v2 = f(v1.value0);
                    return v2;
                }
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 55, column 11 - line 57, column 42): " + [
                    v1.constructor.name
                ]);
            });
        };
    });
};
var applyMaybeT = function(dictMonad) {
    return new Control_Apply.Apply(function() {
        return functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadMaybeT(dictMonad)));
};
var applicativeMaybeT = function(dictMonad) {
    return new Control_Applicative.Applicative(function() {
        return applyMaybeT(dictMonad);
    }, function() {
        var $74 = Control_Applicative.pure(dictMonad.Applicative0());
        return function($75) {
            return MaybeT($74(Data_Maybe.Just.create($75)));
        };
    }());
};
var semigroupMaybeT = function(dictMonad) {
    return function(dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyMaybeT(dictMonad))(Data_Semigroup.append(dictSemigroup)));
    };
};
var monadAskMaybeT = function(dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function() {
        return monadMaybeT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderMaybeT = function(dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function() {
        return monadAskMaybeT(dictMonadReader.MonadAsk0());
    }, function(f) {
        return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContMaybeT = function(dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function() {
        return monadMaybeT(dictMonadCont.Monad0());
    }, function(f) {
        return MaybeT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function(c) {
            var v = f(function(a) {
                return MaybeT(c(new Data_Maybe.Just(a)));
            });
            return v;
        }));
    });
};
var monadEffectMaybe = function(dictMonadEffect) {
    return new Effect_Class.MonadEffect(function() {
        return monadMaybeT(dictMonadEffect.Monad0());
    }, function() {
        var $76 = Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEffect.Monad0());
        var $77 = Effect_Class.liftEffect(dictMonadEffect);
        return function($78) {
            return $76($77($78));
        };
    }());
};
var monadRecMaybeT = function(dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function() {
        return monadMaybeT(dictMonadRec.Monad0());
    }, function(f) {
        var $79 = Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function(a) {
            var v = f(a);
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v)(function(m$prime) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function() {
                    if (m$prime instanceof Data_Maybe.Nothing) return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
                    if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                    if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
                    throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 85, column 16 - line 88, column 43): " + [
                        m$prime.constructor.name
                    ]);
                }());
            });
        });
        return function($80) {
            return MaybeT($79($80));
        };
    });
};
var monadStateMaybeT = function(dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function() {
        return monadMaybeT(dictMonadState.Monad0());
    }, function(f) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellMaybeT = function(dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function() {
        return monadMaybeT(dictMonadTell.Monad1());
    }, dictMonadTell.Semigroup0, function() {
        var $81 = Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell.Monad1());
        var $82 = Control_Monad_Writer_Class.tell(dictMonadTell);
        return function($83) {
            return $81($82($83));
        };
    }());
};
var monadWriterMaybeT = function(dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function() {
        return monadTellMaybeT(dictMonadWriter.MonadTell1());
    }, dictMonadWriter.Monoid0, mapMaybeT(function(m) {
        return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function(v) {
            return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(Data_Functor.map(Data_Maybe.functorMaybe)(function(r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapMaybeT(function(m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m)(function(a) {
            return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(function() {
                if (a instanceof Data_Maybe.Nothing) return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.identity(Control_Category.categoryFn));
                if (a instanceof Data_Maybe.Just) return new Data_Tuple.Tuple(new Data_Maybe.Just(a.value0.value0), a.value0.value1);
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 122, column 10 - line 124, column 43): " + [
                    a.constructor.name
                ]);
            }());
        }));
    }));
};
var monadThrowMaybeT = function(dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function() {
        return monadMaybeT(dictMonadThrow.Monad0());
    }, function(e) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
};
var monadErrorMaybeT = function(dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function() {
        return monadThrowMaybeT(dictMonadError.MonadThrow0());
    }, function(v) {
        return function(h) {
            return MaybeT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function(a) {
                var v1 = h(a);
                return v1;
            }));
        };
    });
};
var monoidMaybeT = function(dictMonad) {
    return function(dictMonoid) {
        return new Data_Monoid.Monoid(function() {
            return semigroupMaybeT(dictMonad)(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeMaybeT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var altMaybeT = function(dictMonad) {
    return new Control_Alt.Alt(function() {
        return functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
    }, function(v) {
        return function(v1) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function(m) {
                if (m instanceof Data_Maybe.Nothing) return v1;
                return Control_Applicative.pure(dictMonad.Applicative0())(m);
            });
        };
    });
};
var plusMaybeT = function(dictMonad) {
    return new Control_Plus.Plus(function() {
        return altMaybeT(dictMonad);
    }, Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value));
};
var alternativeMaybeT = function(dictMonad) {
    return new Control_Alternative.Alternative(function() {
        return applicativeMaybeT(dictMonad);
    }, function() {
        return plusMaybeT(dictMonad);
    });
};
var monadPlusMaybeT = function(dictMonad) {
    return new Control_MonadPlus.MonadPlus(function() {
        return alternativeMaybeT(dictMonad);
    }, function() {
        return monadMaybeT(dictMonad);
    });
};
var monadZeroMaybeT = function(dictMonad) {
    return new Control_MonadZero.MonadZero(function() {
        return alternativeMaybeT(dictMonad);
    }, function() {
        return monadMaybeT(dictMonad);
    }, function() {
        return undefined;
    });
};
module.exports = {
    MaybeT: MaybeT,
    runMaybeT: runMaybeT,
    mapMaybeT: mapMaybeT,
    newtypeMaybeT: newtypeMaybeT,
    functorMaybeT: functorMaybeT,
    applyMaybeT: applyMaybeT,
    applicativeMaybeT: applicativeMaybeT,
    bindMaybeT: bindMaybeT,
    monadMaybeT: monadMaybeT,
    monadTransMaybeT: monadTransMaybeT,
    altMaybeT: altMaybeT,
    plusMaybeT: plusMaybeT,
    alternativeMaybeT: alternativeMaybeT,
    monadPlusMaybeT: monadPlusMaybeT,
    monadZeroMaybeT: monadZeroMaybeT,
    monadRecMaybeT: monadRecMaybeT,
    monadEffectMaybe: monadEffectMaybe,
    monadContMaybeT: monadContMaybeT,
    monadThrowMaybeT: monadThrowMaybeT,
    monadErrorMaybeT: monadErrorMaybeT,
    monadAskMaybeT: monadAskMaybeT,
    monadReaderMaybeT: monadReaderMaybeT,
    monadStateMaybeT: monadStateMaybeT,
    monadTellMaybeT: monadTellMaybeT,
    monadWriterMaybeT: monadWriterMaybeT,
    semigroupMaybeT: semigroupMaybeT,
    monoidMaybeT: monoidMaybeT,
    MonadTrans: Control_Monad_Trans_Class.MonadTrans,
    lift: Control_Monad_Trans_Class.lift
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Monad/index.js":"alCn2","../Control.Monad.Cont.Class/index.js":"kWCMf","../Control.Monad.Error.Class/index.js":"acXO9","../Control.Monad.Reader.Class/index.js":"3BEj9","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Monad.State.Class/index.js":"enW6F","../Control.Monad.Trans.Class/index.js":"9pz5v","../Control.Monad.Writer.Class/index.js":"6wyz5","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Tuple/index.js":"eOBbM","../Effect.Class/index.js":"53rRA"}],"eiBpm":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Distributive = require("../Data.Distributive/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var ReaderT = function(x) {
    return x;
};
var withReaderT = function(f) {
    return function(v) {
        return function($63) {
            return v(f($63));
        };
    };
};
var runReaderT = function(v) {
    return v;
};
var newtypeReaderT = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
    return function($64) {
        return ReaderT(Data_Function["const"]($64));
    };
});
var mapReaderT = function(f) {
    return function(v) {
        return function($65) {
            return f(v($65));
        };
    };
};
var functorReaderT = function(dictFunctor) {
    return new Data_Functor.Functor(function() {
        var $66 = Data_Functor.map(dictFunctor);
        return function($67) {
            return mapReaderT($66($67));
        };
    }());
};
var distributiveReaderT = function(dictDistributive) {
    return new Data_Distributive.Distributive(function() {
        return functorReaderT(dictDistributive.Functor0());
    }, function(dictFunctor) {
        return function(f) {
            var $68 = Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor);
            var $69 = Data_Functor.map(dictFunctor)(f);
            return function($70) {
                return $68($69($70));
            };
        };
    }, function(dictFunctor) {
        return function(a) {
            return function(e) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function(r) {
                    return r(e);
                })(a);
            };
        };
    });
};
var applyReaderT = function(dictApply) {
    return new Control_Apply.Apply(function() {
        return functorReaderT(dictApply.Functor0());
    }, function(v) {
        return function(v1) {
            return function(r) {
                return Control_Apply.apply(dictApply)(v(r))(v1(r));
            };
        };
    });
};
var bindReaderT = function(dictBind) {
    return new Control_Bind.Bind(function() {
        return applyReaderT(dictBind.Apply0());
    }, function(v) {
        return function(k) {
            return function(r) {
                return Control_Bind.bind(dictBind)(v(r))(function(a) {
                    var v1 = k(a);
                    return v1(r);
                });
            };
        };
    });
};
var semigroupReaderT = function(dictApply) {
    return function(dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
    };
};
var applicativeReaderT = function(dictApplicative) {
    return new Control_Applicative.Applicative(function() {
        return applyReaderT(dictApplicative.Apply0());
    }, function() {
        var $71 = Control_Applicative.pure(dictApplicative);
        return function($72) {
            return ReaderT(Data_Function["const"]($71($72)));
        };
    }());
};
var monadReaderT = function(dictMonad) {
    return new Control_Monad.Monad(function() {
        return applicativeReaderT(dictMonad.Applicative0());
    }, function() {
        return bindReaderT(dictMonad.Bind1());
    });
};
var monadAskReaderT = function(dictMonad) {
    return new Control_Monad_Reader_Class.MonadAsk(function() {
        return monadReaderT(dictMonad);
    }, Control_Applicative.pure(dictMonad.Applicative0()));
};
var monadReaderReaderT = function(dictMonad) {
    return new Control_Monad_Reader_Class.MonadReader(function() {
        return monadAskReaderT(dictMonad);
    }, withReaderT);
};
var monadContReaderT = function(dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function() {
        return monadReaderT(dictMonadCont.Monad0());
    }, function(f) {
        return function(r) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function(c) {
                var v = f(function($73) {
                    return ReaderT(Data_Function["const"](c($73)));
                });
                return v(r);
            });
        };
    });
};
var monadEffectReader = function(dictMonadEffect) {
    return new Effect_Class.MonadEffect(function() {
        return monadReaderT(dictMonadEffect.Monad0());
    }, function() {
        var $74 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0());
        var $75 = Effect_Class.liftEffect(dictMonadEffect);
        return function($76) {
            return $74($75($76));
        };
    }());
};
var monadRecReaderT = function(dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function() {
        return monadReaderT(dictMonadRec.Monad0());
    }, function(k) {
        return function(a) {
            var k$prime = function(r) {
                return function(a$prime) {
                    var v = k(a$prime);
                    return Control_Bind.bindFlipped(dictMonadRec.Monad0().Bind1())(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0()))(v(r));
                };
            };
            return function(r) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
            };
        };
    });
};
var monadStateReaderT = function(dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function() {
        return monadReaderT(dictMonadState.Monad0());
    }, function() {
        var $77 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0());
        var $78 = Control_Monad_State_Class.state(dictMonadState);
        return function($79) {
            return $77($78($79));
        };
    }());
};
var monadTellReaderT = function(dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function() {
        return monadReaderT(dictMonadTell.Monad1());
    }, dictMonadTell.Semigroup0, function() {
        var $80 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad1());
        var $81 = Control_Monad_Writer_Class.tell(dictMonadTell);
        return function($82) {
            return $80($81($82));
        };
    }());
};
var monadWriterReaderT = function(dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function() {
        return monadTellReaderT(dictMonadWriter.MonadTell1());
    }, dictMonadWriter.Monoid0, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)));
};
var monadThrowReaderT = function(dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function() {
        return monadReaderT(dictMonadThrow.Monad0());
    }, function() {
        var $83 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0());
        var $84 = Control_Monad_Error_Class.throwError(dictMonadThrow);
        return function($85) {
            return $83($84($85));
        };
    }());
};
var monadErrorReaderT = function(dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function() {
        return monadThrowReaderT(dictMonadError.MonadThrow0());
    }, function(v) {
        return function(h) {
            return function(r) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function(e) {
                    var v1 = h(e);
                    return v1(r);
                });
            };
        };
    });
};
var monoidReaderT = function(dictApplicative) {
    return function(dictMonoid) {
        return new Data_Monoid.Monoid(function() {
            return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
    };
};
var altReaderT = function(dictAlt) {
    return new Control_Alt.Alt(function() {
        return functorReaderT(dictAlt.Functor0());
    }, function(v) {
        return function(v1) {
            return function(r) {
                return Control_Alt.alt(dictAlt)(v(r))(v1(r));
            };
        };
    });
};
var plusReaderT = function(dictPlus) {
    return new Control_Plus.Plus(function() {
        return altReaderT(dictPlus.Alt0());
    }, Data_Function["const"](Control_Plus.empty(dictPlus)));
};
var alternativeReaderT = function(dictAlternative) {
    return new Control_Alternative.Alternative(function() {
        return applicativeReaderT(dictAlternative.Applicative0());
    }, function() {
        return plusReaderT(dictAlternative.Plus1());
    });
};
var monadPlusReaderT = function(dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function() {
        return alternativeReaderT(dictMonadPlus.Alternative1());
    }, function() {
        return monadReaderT(dictMonadPlus.Monad0());
    });
};
var monadZeroReaderT = function(dictMonadZero) {
    return new Control_MonadZero.MonadZero(function() {
        return alternativeReaderT(dictMonadZero.Alternative1());
    }, function() {
        return monadReaderT(dictMonadZero.Monad0());
    }, function() {
        return undefined;
    });
};
module.exports = {
    ReaderT: ReaderT,
    runReaderT: runReaderT,
    withReaderT: withReaderT,
    mapReaderT: mapReaderT,
    newtypeReaderT: newtypeReaderT,
    functorReaderT: functorReaderT,
    applyReaderT: applyReaderT,
    applicativeReaderT: applicativeReaderT,
    altReaderT: altReaderT,
    plusReaderT: plusReaderT,
    alternativeReaderT: alternativeReaderT,
    bindReaderT: bindReaderT,
    monadReaderT: monadReaderT,
    monadZeroReaderT: monadZeroReaderT,
    semigroupReaderT: semigroupReaderT,
    monoidReaderT: monoidReaderT,
    monadPlusReaderT: monadPlusReaderT,
    monadTransReaderT: monadTransReaderT,
    monadEffectReader: monadEffectReader,
    monadContReaderT: monadContReaderT,
    monadThrowReaderT: monadThrowReaderT,
    monadErrorReaderT: monadErrorReaderT,
    monadAskReaderT: monadAskReaderT,
    monadReaderReaderT: monadReaderReaderT,
    monadStateReaderT: monadStateReaderT,
    monadTellReaderT: monadTellReaderT,
    monadWriterReaderT: monadWriterReaderT,
    distributiveReaderT: distributiveReaderT,
    monadRecReaderT: monadRecReaderT,
    MonadAsk: Control_Monad_Reader_Class.MonadAsk,
    MonadReader: Control_Monad_Reader_Class.MonadReader,
    ask: Control_Monad_Reader_Class.ask,
    asks: Control_Monad_Reader_Class.asks,
    local: Control_Monad_Reader_Class.local,
    MonadTrans: Control_Monad_Trans_Class.MonadTrans,
    lift: Control_Monad_Trans_Class.lift
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Control.Monad.Cont.Class/index.js":"kWCMf","../Control.Monad.Error.Class/index.js":"acXO9","../Control.Monad.Reader.Class/index.js":"3BEj9","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Monad.State.Class/index.js":"enW6F","../Control.Monad.Trans.Class/index.js":"9pz5v","../Control.Monad.Writer.Class/index.js":"6wyz5","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Distributive/index.js":"czVlx","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Effect.Class/index.js":"53rRA"}],"czVlx":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Type_Equality = require("../Type.Equality/index.js");
var Distributive = function(Functor0, collect, distribute) {
    this.Functor0 = Functor0;
    this.collect = collect;
    this.distribute = distribute;
};
var distributiveIdentity = new Distributive(function() {
    return Data_Identity.functorIdentity;
}, function(dictFunctor) {
    return function(f) {
        var $14 = Data_Functor.map(dictFunctor)(function() {
            var $16 = Data_Newtype.unwrap();
            return function($17) {
                return $16(f($17));
            };
        }());
        return function($15) {
            return Data_Identity.Identity($14($15));
        };
    };
}, function(dictFunctor) {
    var $18 = Data_Functor.map(dictFunctor)(Data_Newtype.unwrap());
    return function($19) {
        return Data_Identity.Identity($18($19));
    };
});
var distribute = function(dict) {
    return dict.distribute;
};
var distributiveFunction = new Distributive(function() {
    return Data_Functor.functorFn;
}, function(dictFunctor) {
    return function(f) {
        var $20 = distribute(distributiveFunction)(dictFunctor);
        var $21 = Data_Functor.map(dictFunctor)(f);
        return function($22) {
            return $20($21($22));
        };
    };
}, function(dictFunctor) {
    return function(a) {
        return function(e) {
            return Data_Functor.map(dictFunctor)(function(v) {
                return v(e);
            })(a);
        };
    };
});
var cotraverse = function(dictDistributive) {
    return function(dictFunctor) {
        return function(f) {
            var $23 = Data_Functor.map(dictDistributive.Functor0())(f);
            var $24 = distribute(dictDistributive)(dictFunctor);
            return function($25) {
                return $23($24($25));
            };
        };
    };
};
var collectDefault = function(dictDistributive) {
    return function(dictFunctor) {
        return function(f) {
            var $26 = distribute(dictDistributive)(dictFunctor);
            var $27 = Data_Functor.map(dictFunctor)(f);
            return function($28) {
                return $26($27($28));
            };
        };
    };
};
var distributiveTuple = function(dictTypeEquals) {
    return new Distributive(function() {
        return Data_Tuple.functorTuple;
    }, function(dictFunctor) {
        return collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
    }, function(dictFunctor) {
        var $29 = Data_Tuple.Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit));
        var $30 = Data_Functor.map(dictFunctor)(Data_Tuple.snd);
        return function($31) {
            return $29($30($31));
        };
    });
};
var collect = function(dict) {
    return dict.collect;
};
var distributeDefault = function(dictDistributive) {
    return function(dictFunctor) {
        return collect(dictDistributive)(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
    };
};
module.exports = {
    collect: collect,
    distribute: distribute,
    Distributive: Distributive,
    distributeDefault: distributeDefault,
    collectDefault: collectDefault,
    cotraverse: cotraverse,
    distributiveIdentity: distributiveIdentity,
    distributiveFunction: distributiveFunction,
    distributiveTuple: distributiveTuple
};

},{"../Control.Category/index.js":"dfcPK","../Data.Functor/index.js":"iy1jO","../Data.Identity/index.js":"3qeSN","../Data.Newtype/index.js":"czJbt","../Data.Tuple/index.js":"eOBbM","../Data.Unit/index.js":"d7oKp","../Type.Equality/index.js":"ks4Ik"}],"ks4Ik":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var TypeEquals = function(Coercible0, proof) {
    this.Coercible0 = Coercible0;
    this.proof = proof;
};
var To = function(x) {
    return x;
};
var From = function(x) {
    return x;
};
var refl = new TypeEquals(function() {
    return undefined;
}, function(a) {
    return a;
});
var proof = function(dict) {
    return dict.proof;
};
var to = function(dictTypeEquals) {
    var v = proof(dictTypeEquals)(function(a) {
        return a;
    });
    return v;
};
var from = function(dictTypeEquals) {
    var v = proof(dictTypeEquals)(function(a) {
        return a;
    });
    return v;
};
module.exports = {
    TypeEquals: TypeEquals,
    proof: proof,
    to: to,
    from: from,
    refl: refl
};

},{}],"av8fT":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var WriterT = function(x) {
    return x;
};
var runWriterT = function(v) {
    return v;
};
var newtypeWriterT = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monadTransWriterT = function(dictMonoid) {
    return new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
        return function(m) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(function(a) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid)));
            });
        };
    });
};
var mapWriterT = function(f) {
    return function(v) {
        return f(v);
    };
};
var functorWriterT = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        return mapWriterT(Data_Functor.map(dictFunctor)(function(v) {
            return new Data_Tuple.Tuple(f(v.value0), v.value1);
        }));
    });
};
var execWriterT = function(dictFunctor) {
    return function(v) {
        return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
    };
};
var applyWriterT = function(dictSemigroup) {
    return function(dictApply) {
        return new Control_Apply.Apply(function() {
            return functorWriterT(dictApply.Functor0());
        }, function(v) {
            return function(v1) {
                var k = function(v3) {
                    return function(v4) {
                        return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
                    };
                };
                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
            };
        });
    };
};
var bindWriterT = function(dictSemigroup) {
    return function(dictBind) {
        return new Control_Bind.Bind(function() {
            return applyWriterT(dictSemigroup)(dictBind.Apply0());
        }, function(v) {
            return function(k) {
                return WriterT(Control_Bind.bind(dictBind)(v)(function(v1) {
                    var v2 = k(v1.value0);
                    return Data_Functor.map(dictBind.Apply0().Functor0())(function(v3) {
                        return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
                    })(v2);
                }));
            };
        });
    };
};
var semigroupWriterT = function(dictApply) {
    return function(dictSemigroup) {
        return function(dictSemigroup1) {
            return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyWriterT(dictSemigroup)(dictApply))(Data_Semigroup.append(dictSemigroup1)));
        };
    };
};
var applicativeWriterT = function(dictMonoid) {
    return function(dictApplicative) {
        return new Control_Applicative.Applicative(function() {
            return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
        }, function(a) {
            return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
        });
    };
};
var monadWriterT = function(dictMonoid) {
    return function(dictMonad) {
        return new Control_Monad.Monad(function() {
            return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
        }, function() {
            return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
        });
    };
};
var monadAskWriterT = function(dictMonoid) {
    return function(dictMonadAsk) {
        return new Control_Monad_Reader_Class.MonadAsk(function() {
            return monadWriterT(dictMonoid)(dictMonadAsk.Monad0());
        }, Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
    };
};
var monadReaderWriterT = function(dictMonoid) {
    return function(dictMonadReader) {
        return new Control_Monad_Reader_Class.MonadReader(function() {
            return monadAskWriterT(dictMonoid)(dictMonadReader.MonadAsk0());
        }, function(f) {
            return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
        });
    };
};
var monadContWriterT = function(dictMonoid) {
    return function(dictMonadCont) {
        return new Control_Monad_Cont_Class.MonadCont(function() {
            return monadWriterT(dictMonoid)(dictMonadCont.Monad0());
        }, function(f) {
            return WriterT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function(c) {
                var v = f(function(a) {
                    return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
                });
                return v;
            }));
        });
    };
};
var monadEffectWriter = function(dictMonoid) {
    return function(dictMonadEffect) {
        return new Effect_Class.MonadEffect(function() {
            return monadWriterT(dictMonoid)(dictMonadEffect.Monad0());
        }, function() {
            var $124 = Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEffect.Monad0());
            var $125 = Effect_Class.liftEffect(dictMonadEffect);
            return function($126) {
                return $124($125($126));
            };
        }());
    };
};
var monadRecWriterT = function(dictMonoid) {
    return function(dictMonadRec) {
        return new Control_Monad_Rec_Class.MonadRec(function() {
            return monadWriterT(dictMonoid)(dictMonadRec.Monad0());
        }, function(f) {
            return function(a) {
                var f$prime = function(v) {
                    var v1 = f(v.value0);
                    return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1)(function(v2) {
                        return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function() {
                            if (v2.value0 instanceof Control_Monad_Rec_Class.Loop) return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v2.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v2.value1)));
                            if (v2.value0 instanceof Control_Monad_Rec_Class.Done) return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v2.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v2.value1)));
                            throw new Error("Failed pattern match at Control.Monad.Writer.Trans (line 84, column 16 - line 86, column 47): " + [
                                v2.value0.constructor.name
                            ]);
                        }());
                    });
                };
                return WriterT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
            };
        });
    };
};
var monadStateWriterT = function(dictMonoid) {
    return function(dictMonadState) {
        return new Control_Monad_State_Class.MonadState(function() {
            return monadWriterT(dictMonoid)(dictMonadState.Monad0());
        }, function(f) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
        });
    };
};
var monadTellWriterT = function(dictMonoid) {
    return function(dictMonad) {
        return new Control_Monad_Writer_Class.MonadTell(function() {
            return monadWriterT(dictMonoid)(dictMonad);
        }, dictMonoid.Semigroup0, function() {
            var $127 = Control_Applicative.pure(dictMonad.Applicative0());
            var $128 = Data_Tuple.Tuple.create(Data_Unit.unit);
            return function($129) {
                return WriterT($127($128($129)));
            };
        }());
    };
};
var monadWriterWriterT = function(dictMonoid) {
    return function(dictMonad) {
        return new Control_Monad_Writer_Class.MonadWriter(function() {
            return monadTellWriterT(dictMonoid)(dictMonad);
        }, function() {
            return dictMonoid;
        }, function(v) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function(v1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
            });
        }, function(v) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function(v1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
            });
        });
    };
};
var monadThrowWriterT = function(dictMonoid) {
    return function(dictMonadThrow) {
        return new Control_Monad_Error_Class.MonadThrow(function() {
            return monadWriterT(dictMonoid)(dictMonadThrow.Monad0());
        }, function(e) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
        });
    };
};
var monadErrorWriterT = function(dictMonoid) {
    return function(dictMonadError) {
        return new Control_Monad_Error_Class.MonadError(function() {
            return monadThrowWriterT(dictMonoid)(dictMonadError.MonadThrow0());
        }, function(v) {
            return function(h) {
                return WriterT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function(e) {
                    var v1 = h(e);
                    return v1;
                }));
            };
        });
    };
};
var monoidWriterT = function(dictApplicative) {
    return function(dictMonoid) {
        return function(dictMonoid1) {
            return new Data_Monoid.Monoid(function() {
                return semigroupWriterT(dictApplicative.Apply0())(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
            }, Control_Applicative.pure(applicativeWriterT(dictMonoid)(dictApplicative))(Data_Monoid.mempty(dictMonoid1)));
        };
    };
};
var altWriterT = function(dictAlt) {
    return new Control_Alt.Alt(function() {
        return functorWriterT(dictAlt.Functor0());
    }, function(v) {
        return function(v1) {
            return Control_Alt.alt(dictAlt)(v)(v1);
        };
    });
};
var plusWriterT = function(dictPlus) {
    return new Control_Plus.Plus(function() {
        return altWriterT(dictPlus.Alt0());
    }, Control_Plus.empty(dictPlus));
};
var alternativeWriterT = function(dictMonoid) {
    return function(dictAlternative) {
        return new Control_Alternative.Alternative(function() {
            return applicativeWriterT(dictMonoid)(dictAlternative.Applicative0());
        }, function() {
            return plusWriterT(dictAlternative.Plus1());
        });
    };
};
var monadPlusWriterT = function(dictMonoid) {
    return function(dictMonadPlus) {
        return new Control_MonadPlus.MonadPlus(function() {
            return alternativeWriterT(dictMonoid)(dictMonadPlus.Alternative1());
        }, function() {
            return monadWriterT(dictMonoid)(dictMonadPlus.Monad0());
        });
    };
};
var monadZeroWriterT = function(dictMonoid) {
    return function(dictMonadZero) {
        return new Control_MonadZero.MonadZero(function() {
            return alternativeWriterT(dictMonoid)(dictMonadZero.Alternative1());
        }, function() {
            return monadWriterT(dictMonoid)(dictMonadZero.Monad0());
        }, function() {
            return undefined;
        });
    };
};
module.exports = {
    WriterT: WriterT,
    runWriterT: runWriterT,
    execWriterT: execWriterT,
    mapWriterT: mapWriterT,
    newtypeWriterT: newtypeWriterT,
    functorWriterT: functorWriterT,
    applyWriterT: applyWriterT,
    applicativeWriterT: applicativeWriterT,
    altWriterT: altWriterT,
    plusWriterT: plusWriterT,
    alternativeWriterT: alternativeWriterT,
    bindWriterT: bindWriterT,
    monadWriterT: monadWriterT,
    monadRecWriterT: monadRecWriterT,
    monadZeroWriterT: monadZeroWriterT,
    monadPlusWriterT: monadPlusWriterT,
    monadTransWriterT: monadTransWriterT,
    monadEffectWriter: monadEffectWriter,
    monadContWriterT: monadContWriterT,
    monadThrowWriterT: monadThrowWriterT,
    monadErrorWriterT: monadErrorWriterT,
    monadAskWriterT: monadAskWriterT,
    monadReaderWriterT: monadReaderWriterT,
    monadStateWriterT: monadStateWriterT,
    monadTellWriterT: monadTellWriterT,
    monadWriterWriterT: monadWriterWriterT,
    semigroupWriterT: semigroupWriterT,
    monoidWriterT: monoidWriterT,
    MonadTrans: Control_Monad_Trans_Class.MonadTrans,
    lift: Control_Monad_Trans_Class.lift,
    MonadTell: Control_Monad_Writer_Class.MonadTell,
    MonadWriter: Control_Monad_Writer_Class.MonadWriter,
    censor: Control_Monad_Writer_Class.censor,
    listen: Control_Monad_Writer_Class.listen,
    listens: Control_Monad_Writer_Class.listens,
    pass: Control_Monad_Writer_Class.pass,
    tell: Control_Monad_Writer_Class.tell
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Control.Monad.Cont.Class/index.js":"kWCMf","../Control.Monad.Error.Class/index.js":"acXO9","../Control.Monad.Reader.Class/index.js":"3BEj9","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Monad.State.Class/index.js":"enW6F","../Control.Monad.Trans.Class/index.js":"9pz5v","../Control.Monad.Writer.Class/index.js":"6wyz5","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Tuple/index.js":"eOBbM","../Data.Unit/index.js":"d7oKp","../Effect.Class/index.js":"53rRA"}],"aJAZA":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_App = require("../Data.Functor.App/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var Compose = function(x) {
    return x;
};
var showCompose = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var newtypeCompose = new Data_Newtype.Newtype(function() {
    return undefined;
});
var functorCompose = function(dictFunctor) {
    return function(dictFunctor1) {
        return new Data_Functor.Functor(function(f) {
            return function(v) {
                return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
            };
        });
    };
};
var eqCompose = function(dictEq1) {
    return function(dictEq11) {
        return function(dictEq) {
            return new Data_Eq.Eq(function(v) {
                return function(v1) {
                    return Data_Eq.eq1(dictEq1)(Data_Functor_App.eqApp(dictEq11)(dictEq))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
                };
            });
        };
    };
};
var ordCompose = function(dictOrd1) {
    return function(dictOrd11) {
        return function(dictOrd) {
            return new Data_Ord.Ord(function() {
                return eqCompose(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
            }, function(v) {
                return function(v1) {
                    return Data_Ord.compare1(dictOrd1)(Data_Functor_App.ordApp(dictOrd11)(dictOrd))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
                };
            });
        };
    };
};
var eq1Compose = function(dictEq1) {
    return function(dictEq11) {
        return new Data_Eq.Eq1(function(dictEq) {
            return Data_Eq.eq(eqCompose(dictEq1)(dictEq11)(dictEq));
        });
    };
};
var ord1Compose = function(dictOrd1) {
    return function(dictOrd11) {
        return new Data_Ord.Ord1(function() {
            return eq1Compose(dictOrd1.Eq10())(dictOrd11.Eq10());
        }, function(dictOrd) {
            return Data_Ord.compare(ordCompose(dictOrd1)(dictOrd11)(dictOrd));
        });
    };
};
var bihoistCompose = function(dictFunctor) {
    return function(natF) {
        return function(natG) {
            return function(v) {
                return natF(Data_Functor.map(dictFunctor)(natG)(v));
            };
        };
    };
};
var applyCompose = function(dictApply) {
    return function(dictApply1) {
        return new Control_Apply.Apply(function() {
            return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
        }, function(v) {
            return function(v1) {
                return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1));
            };
        });
    };
};
var applicativeCompose = function(dictApplicative) {
    return function(dictApplicative1) {
        return new Control_Applicative.Applicative(function() {
            return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
        }, function() {
            var $51 = Control_Applicative.pure(dictApplicative);
            var $52 = Control_Applicative.pure(dictApplicative1);
            return function($53) {
                return Compose($51($52($53)));
            };
        }());
    };
};
var altCompose = function(dictAlt) {
    return function(dictFunctor) {
        return new Control_Alt.Alt(function() {
            return functorCompose(dictAlt.Functor0())(dictFunctor);
        }, function(v) {
            return function(v1) {
                return Compose(Control_Alt.alt(dictAlt)(v)(v1));
            };
        });
    };
};
var plusCompose = function(dictPlus) {
    return function(dictFunctor) {
        return new Control_Plus.Plus(function() {
            return altCompose(dictPlus.Alt0())(dictFunctor);
        }, Control_Plus.empty(dictPlus));
    };
};
var alternativeCompose = function(dictAlternative) {
    return function(dictApplicative) {
        return new Control_Alternative.Alternative(function() {
            return applicativeCompose(dictAlternative.Applicative0())(dictApplicative);
        }, function() {
            return plusCompose(dictAlternative.Plus1())(dictApplicative.Apply0().Functor0());
        });
    };
};
module.exports = {
    Compose: Compose,
    bihoistCompose: bihoistCompose,
    newtypeCompose: newtypeCompose,
    eqCompose: eqCompose,
    eq1Compose: eq1Compose,
    ordCompose: ordCompose,
    ord1Compose: ord1Compose,
    showCompose: showCompose,
    functorCompose: functorCompose,
    applyCompose: applyCompose,
    applicativeCompose: applicativeCompose,
    altCompose: altCompose,
    plusCompose: plusCompose,
    alternativeCompose: alternativeCompose
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Plus/index.js":"5lCU5","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Functor.App/index.js":"ihqtJ","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Show/index.js":"b6tNW"}],"ihqtJ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var App = function(x) {
    return x;
};
var showApp = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(App " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupApp = function(dictApply) {
    return function(dictSemigroup) {
        return new Data_Semigroup.Semigroup(function(v) {
            return function(v1) {
                return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
            };
        });
    };
};
var plusApp = function(dictPlus) {
    return dictPlus;
};
var newtypeApp = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monoidApp = function(dictApplicative) {
    return function(dictMonoid) {
        return new Data_Monoid.Monoid(function() {
            return semigroupApp(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(dictApplicative)(Data_Monoid.mempty(dictMonoid)));
    };
};
var monadPlusApp = function(dictMonadPlus) {
    return dictMonadPlus;
};
var monadApp = function(dictMonad) {
    return dictMonad;
};
var lazyApp = function(dictLazy) {
    return dictLazy;
};
var hoistLowerApp = Unsafe_Coerce.unsafeCoerce;
var hoistLiftApp = Unsafe_Coerce.unsafeCoerce;
var hoistApp = function(f) {
    return function(v) {
        return f(v);
    };
};
var functorApp = function(dictFunctor) {
    return dictFunctor;
};
var extendApp = function(dictExtend) {
    return dictExtend;
};
var eqApp = function(dictEq1) {
    return function(dictEq) {
        return new Data_Eq.Eq(function(x) {
            return function(y) {
                return Data_Eq.eq1(dictEq1)(dictEq)(x)(y);
            };
        });
    };
};
var ordApp = function(dictOrd1) {
    return function(dictOrd) {
        return new Data_Ord.Ord(function() {
            return eqApp(dictOrd1.Eq10())(dictOrd.Eq0());
        }, function(x) {
            return function(y) {
                return Data_Ord.compare1(dictOrd1)(dictOrd)(x)(y);
            };
        });
    };
};
var eq1App = function(dictEq1) {
    return new Data_Eq.Eq1(function(dictEq) {
        return Data_Eq.eq(eqApp(dictEq1)(dictEq));
    });
};
var ord1App = function(dictOrd1) {
    return new Data_Ord.Ord1(function() {
        return eq1App(dictOrd1.Eq10());
    }, function(dictOrd) {
        return Data_Ord.compare(ordApp(dictOrd1)(dictOrd));
    });
};
var comonadApp = function(dictComonad) {
    return dictComonad;
};
var bindApp = function(dictBind) {
    return dictBind;
};
var applyApp = function(dictApply) {
    return dictApply;
};
var applicativeApp = function(dictApplicative) {
    return dictApplicative;
};
var alternativeApp = function(dictAlternative) {
    return dictAlternative;
};
var monadZeroApp = function(dictMonadZero) {
    return new Control_MonadZero.MonadZero(function() {
        return alternativeApp(dictMonadZero.Alternative1());
    }, function() {
        return monadApp(dictMonadZero.Monad0());
    }, function() {
        return undefined;
    });
};
var altApp = function(dictAlt) {
    return dictAlt;
};
module.exports = {
    App: App,
    hoistApp: hoistApp,
    hoistLiftApp: hoistLiftApp,
    hoistLowerApp: hoistLowerApp,
    newtypeApp: newtypeApp,
    eqApp: eqApp,
    eq1App: eq1App,
    ordApp: ordApp,
    ord1App: ord1App,
    showApp: showApp,
    semigroupApp: semigroupApp,
    monoidApp: monoidApp,
    monadZeroApp: monadZeroApp,
    functorApp: functorApp,
    applyApp: applyApp,
    applicativeApp: applicativeApp,
    bindApp: bindApp,
    monadApp: monadApp,
    altApp: altApp,
    plusApp: plusApp,
    alternativeApp: alternativeApp,
    monadPlusApp: monadPlusApp,
    lazyApp: lazyApp,
    extendApp: extendApp,
    comonadApp: comonadApp
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.MonadZero/index.js":"aqmZo","../Data.Eq/index.js":"c3b8F","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW","../Unsafe.Coerce/index.js":"6gO81"}],"hFevi":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Distributive = require("../Data.Distributive/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Costar = function(x) {
    return x;
};
var semigroupoidCostar = function(dictExtend) {
    return new Control_Semigroupoid.Semigroupoid(function(v) {
        return function(v1) {
            return Control_Extend.composeCoKleisliFlipped(dictExtend)(v)(v1);
        };
    });
};
var profunctorCostar = function(dictFunctor) {
    return new Data_Profunctor.Profunctor(function(f) {
        return function(g) {
            return function(v) {
                var $46 = Data_Functor.map(dictFunctor)(f);
                return function($47) {
                    return g(v($46($47)));
                };
            };
        };
    });
};
var strongCostar = function(dictComonad) {
    return new Data_Profunctor_Strong.Strong(function() {
        return profunctorCostar(dictComonad.Extend0().Functor0());
    }, function(v) {
        return function(x) {
            return new Data_Tuple.Tuple(v(Data_Functor.map(dictComonad.Extend0().Functor0())(Data_Tuple.fst)(x)), Data_Tuple.snd(Control_Comonad.extract(dictComonad)(x)));
        };
    }, function(v) {
        return function(x) {
            return new Data_Tuple.Tuple(Data_Tuple.fst(Control_Comonad.extract(dictComonad)(x)), v(Data_Functor.map(dictComonad.Extend0().Functor0())(Data_Tuple.snd)(x)));
        };
    });
};
var newtypeCostar = new Data_Newtype.Newtype(function() {
    return undefined;
});
var hoistCostar = function(f) {
    return function(v) {
        return Data_Profunctor.lcmap(Data_Profunctor.profunctorFn)(f)(v);
    };
};
var functorCostar = new Data_Functor.Functor(function(f) {
    return function(v) {
        return function($48) {
            return f(v($48));
        };
    };
});
var invariantCostar = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCostar));
var distributiveCostar = new Data_Distributive.Distributive(function() {
    return functorCostar;
}, function(dictFunctor) {
    return function(f) {
        var $49 = Data_Distributive.distribute(distributiveCostar)(dictFunctor);
        var $50 = Data_Functor.map(dictFunctor)(f);
        return function($51) {
            return $49($50($51));
        };
    };
}, function(dictFunctor) {
    return function(f) {
        return function(a) {
            return Data_Functor.map(dictFunctor)(function(v) {
                return v(a);
            })(f);
        };
    };
});
var closedCostar = function(dictFunctor) {
    return new Data_Profunctor_Closed.Closed(function() {
        return profunctorCostar(dictFunctor);
    }, function(v) {
        return function(g) {
            return function(x) {
                return v(Data_Functor.map(dictFunctor)(function(v1) {
                    return v1(x);
                })(g));
            };
        };
    });
};
var categoryCostar = function(dictComonad) {
    return new Control_Category.Category(function() {
        return semigroupoidCostar(dictComonad.Extend0());
    }, Control_Comonad.extract(dictComonad));
};
var bifunctorCostar = function(dictContravariant) {
    return new Data_Bifunctor.Bifunctor(function(f) {
        return function(g) {
            return function(v) {
                var $52 = Data_Functor_Contravariant.cmap(dictContravariant)(f);
                return function($53) {
                    return g(v($52($53)));
                };
            };
        };
    });
};
var applyCostar = new Control_Apply.Apply(function() {
    return functorCostar;
}, function(v) {
    return function(v1) {
        return function(a) {
            return v(a)(v1(a));
        };
    };
});
var bindCostar = new Control_Bind.Bind(function() {
    return applyCostar;
}, function(v) {
    return function(f) {
        return function(x) {
            var v1 = f(v(x));
            return v1(x);
        };
    };
});
var applicativeCostar = new Control_Applicative.Applicative(function() {
    return applyCostar;
}, function(a) {
    return function(v) {
        return a;
    };
});
var monadCostar = new Control_Monad.Monad(function() {
    return applicativeCostar;
}, function() {
    return bindCostar;
});
module.exports = {
    Costar: Costar,
    hoistCostar: hoistCostar,
    newtypeCostar: newtypeCostar,
    semigroupoidCostar: semigroupoidCostar,
    categoryCostar: categoryCostar,
    functorCostar: functorCostar,
    invariantCostar: invariantCostar,
    applyCostar: applyCostar,
    applicativeCostar: applicativeCostar,
    bindCostar: bindCostar,
    monadCostar: monadCostar,
    distributiveCostar: distributiveCostar,
    bifunctorCostar: bifunctorCostar,
    profunctorCostar: profunctorCostar,
    strongCostar: strongCostar,
    closedCostar: closedCostar
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Comonad/index.js":"hfPua","../Control.Extend/index.js":"kAltv","../Control.Monad/index.js":"alCn2","../Control.Semigroupoid/index.js":"fSgEH","../Data.Bifunctor/index.js":"4aJ07","../Data.Distributive/index.js":"czVlx","../Data.Functor/index.js":"iy1jO","../Data.Functor.Contravariant/index.js":"1SKFf","../Data.Functor.Invariant/index.js":"hYAzT","../Data.Newtype/index.js":"czJbt","../Data.Profunctor/index.js":"8Oy2K","../Data.Profunctor.Closed/index.js":"fRped","../Data.Profunctor.Strong/index.js":"i6ctt","../Data.Tuple/index.js":"eOBbM"}],"1SKFf":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Functor = require("../Data.Functor/index.js");
var Data_Void = require("../Data.Void/index.js");
var Contravariant = function(cmap) {
    this.cmap = cmap;
};
var contravariantConst = new Contravariant(function(v) {
    return function(v1) {
        return v1;
    };
});
var cmap = function(dict) {
    return dict.cmap;
};
var cmapFlipped = function(dictContravariant) {
    return function(x) {
        return function(f) {
            return cmap(dictContravariant)(f)(x);
        };
    };
};
var coerce = function(dictContravariant) {
    return function(dictFunctor) {
        return function(a) {
            return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
        };
    };
};
var imapC = function(dictContravariant) {
    return function(v) {
        return function(f) {
            return cmap(dictContravariant)(f);
        };
    };
};
module.exports = {
    cmap: cmap,
    Contravariant: Contravariant,
    cmapFlipped: cmapFlipped,
    coerce: coerce,
    imapC: imapC,
    contravariantConst: contravariantConst
};

},{"../Data.Functor/index.js":"iy1jO","../Data.Void/index.js":"jziT4"}],"8Oy2K":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Profunctor = function(dimap) {
    this.dimap = dimap;
};
var profunctorFn = new Profunctor(function(a2b) {
    return function(c2d) {
        return function(b2c) {
            return function($9) {
                return c2d(b2c(a2b($9)));
            };
        };
    };
});
var dimap = function(dict) {
    return dict.dimap;
};
var lcmap = function(dictProfunctor) {
    return function(a2b) {
        return dimap(dictProfunctor)(a2b)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var rmap = function(dictProfunctor) {
    return function(b2c) {
        return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
    };
};
var unwrapIso = function(dictProfunctor) {
    return function(dictNewtype) {
        return dimap(dictProfunctor)(Data_Newtype.wrap())(Data_Newtype.unwrap());
    };
};
var wrapIso = function(dictProfunctor) {
    return function(dictNewtype) {
        return function(v) {
            return dimap(dictProfunctor)(Data_Newtype.unwrap())(Data_Newtype.wrap());
        };
    };
};
var arr = function(dictCategory) {
    return function(dictProfunctor) {
        return function(f) {
            return rmap(dictProfunctor)(f)(Control_Category.identity(dictCategory));
        };
    };
};
module.exports = {
    dimap: dimap,
    Profunctor: Profunctor,
    lcmap: lcmap,
    rmap: rmap,
    arr: arr,
    unwrapIso: unwrapIso,
    wrapIso: wrapIso,
    profunctorFn: profunctorFn
};

},{"../Control.Category/index.js":"dfcPK","../Data.Newtype/index.js":"czJbt"}],"fRped":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Closed = function(Profunctor0, closed) {
    this.Profunctor0 = Profunctor0;
    this.closed = closed;
};
var closedFunction = new Closed(function() {
    return Data_Profunctor.profunctorFn;
}, Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var closed = function(dict) {
    return dict.closed;
};
module.exports = {
    closed: closed,
    Closed: Closed,
    closedFunction: closedFunction
};

},{"../Control.Semigroupoid/index.js":"fSgEH","../Data.Profunctor/index.js":"8Oy2K"}],"i6ctt":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Strong = function(Profunctor0, first, second) {
    this.Profunctor0 = Profunctor0;
    this.first = first;
    this.second = second;
};
var strongFn = new Strong(function() {
    return Data_Profunctor.profunctorFn;
}, function(a2b) {
    return function(v) {
        return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
    };
}, Data_Functor.map(Data_Tuple.functorTuple));
var second = function(dict) {
    return dict.second;
};
var first = function(dict) {
    return dict.first;
};
var splitStrong = function(dictCategory) {
    return function(dictStrong) {
        return function(l) {
            return function(r) {
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(first(dictStrong)(l))(second(dictStrong)(r));
            };
        };
    };
};
var fanout = function(dictCategory) {
    return function(dictStrong) {
        return function(l) {
            return function(r) {
                var split = Data_Profunctor.dimap(dictStrong.Profunctor0())(Control_Category.identity(Control_Category.categoryFn))(function(a) {
                    return new Data_Tuple.Tuple(a, a);
                })(Control_Category.identity(dictCategory));
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(split)(splitStrong(dictCategory)(dictStrong)(l)(r));
            };
        };
    };
};
module.exports = {
    first: first,
    second: second,
    Strong: Strong,
    splitStrong: splitStrong,
    fanout: fanout,
    strongFn: strongFn
};

},{"../Control.Category/index.js":"dfcPK","../Control.Semigroupoid/index.js":"fSgEH","../Data.Functor/index.js":"iy1jO","../Data.Profunctor/index.js":"8Oy2K","../Data.Tuple/index.js":"eOBbM"}],"afhPT":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Distributive = require("../Data.Distributive/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Star = function(x) {
    return x;
};
var semigroupoidStar = function(dictBind) {
    return new Control_Semigroupoid.Semigroupoid(function(v) {
        return function(v1) {
            return function(x) {
                return Control_Bind.bind(dictBind)(v1(x))(v);
            };
        };
    });
};
var profunctorStar = function(dictFunctor) {
    return new Data_Profunctor.Profunctor(function(f) {
        return function(g) {
            return function(v) {
                var $75 = Data_Functor.map(dictFunctor)(g);
                return function($76) {
                    return $75(v(f($76)));
                };
            };
        };
    });
};
var strongStar = function(dictFunctor) {
    return new Data_Profunctor_Strong.Strong(function() {
        return profunctorStar(dictFunctor);
    }, function(v) {
        return function(v1) {
            return Data_Functor.map(dictFunctor)(function(v2) {
                return new Data_Tuple.Tuple(v2, v1.value1);
            })(v(v1.value0));
        };
    }, function(v) {
        return function(v1) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create(v1.value0))(v(v1.value1));
        };
    });
};
var newtypeStar = new Data_Newtype.Newtype(function() {
    return undefined;
});
var invariantStar = function(dictInvariant) {
    return new Data_Functor_Invariant.Invariant(function(f) {
        return function(g) {
            return function(v) {
                var $77 = Data_Functor_Invariant.imap(dictInvariant)(f)(g);
                return function($78) {
                    return $77(v($78));
                };
            };
        };
    });
};
var hoistStar = function(f) {
    return function(v) {
        return function($79) {
            return f(v($79));
        };
    };
};
var functorStar = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        return function(v) {
            var $80 = Data_Functor.map(dictFunctor)(f);
            return function($81) {
                return $80(v($81));
            };
        };
    });
};
var distributiveStar = function(dictDistributive) {
    return new Data_Distributive.Distributive(function() {
        return functorStar(dictDistributive.Functor0());
    }, function(dictFunctor) {
        return function(f) {
            var $82 = Data_Distributive.distribute(distributiveStar(dictDistributive))(dictFunctor);
            var $83 = Data_Functor.map(dictFunctor)(f);
            return function($84) {
                return $82($83($84));
            };
        };
    }, function(dictFunctor) {
        return function(f) {
            return function(a) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function(v) {
                    return v(a);
                })(f);
            };
        };
    });
};
var closedStar = function(dictDistributive) {
    return new Data_Profunctor_Closed.Closed(function() {
        return profunctorStar(dictDistributive.Functor0());
    }, function(v) {
        return function(g) {
            return Data_Distributive.distribute(dictDistributive)(Data_Functor.functorFn)(function($85) {
                return v(g($85));
            });
        };
    });
};
var choiceStar = function(dictApplicative) {
    return new Data_Profunctor_Choice.Choice(function() {
        return profunctorStar(dictApplicative.Apply0().Functor0());
    }, function(v) {
        return Star(Data_Either.either(function() {
            var $86 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Left.create);
            return function($87) {
                return $86(v($87));
            };
        }())(function() {
            var $88 = Control_Applicative.pure(dictApplicative);
            return function($89) {
                return $88(Data_Either.Right.create($89));
            };
        }()));
    }, function(v) {
        return Star(Data_Either.either(function() {
            var $90 = Control_Applicative.pure(dictApplicative);
            return function($91) {
                return $90(Data_Either.Left.create($91));
            };
        }())(function() {
            var $92 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create);
            return function($93) {
                return $92(v($93));
            };
        }()));
    });
};
var categoryStar = function(dictMonad) {
    return new Control_Category.Category(function() {
        return semigroupoidStar(dictMonad.Bind1());
    }, Control_Applicative.pure(dictMonad.Applicative0()));
};
var applyStar = function(dictApply) {
    return new Control_Apply.Apply(function() {
        return functorStar(dictApply.Functor0());
    }, function(v) {
        return function(v1) {
            return function(a) {
                return Control_Apply.apply(dictApply)(v(a))(v1(a));
            };
        };
    });
};
var bindStar = function(dictBind) {
    return new Control_Bind.Bind(function() {
        return applyStar(dictBind.Apply0());
    }, function(v) {
        return function(f) {
            return function(x) {
                return Control_Bind.bind(dictBind)(v(x))(function(a) {
                    var v1 = f(a);
                    return v1(x);
                });
            };
        };
    });
};
var applicativeStar = function(dictApplicative) {
    return new Control_Applicative.Applicative(function() {
        return applyStar(dictApplicative.Apply0());
    }, function(a) {
        return function(v) {
            return Control_Applicative.pure(dictApplicative)(a);
        };
    });
};
var monadStar = function(dictMonad) {
    return new Control_Monad.Monad(function() {
        return applicativeStar(dictMonad.Applicative0());
    }, function() {
        return bindStar(dictMonad.Bind1());
    });
};
var altStar = function(dictAlt) {
    return new Control_Alt.Alt(function() {
        return functorStar(dictAlt.Functor0());
    }, function(v) {
        return function(v1) {
            return function(a) {
                return Control_Alt.alt(dictAlt)(v(a))(v1(a));
            };
        };
    });
};
var plusStar = function(dictPlus) {
    return new Control_Plus.Plus(function() {
        return altStar(dictPlus.Alt0());
    }, function(v) {
        return Control_Plus.empty(dictPlus);
    });
};
var alternativeStar = function(dictAlternative) {
    return new Control_Alternative.Alternative(function() {
        return applicativeStar(dictAlternative.Applicative0());
    }, function() {
        return plusStar(dictAlternative.Plus1());
    });
};
var monadPlusStar = function(dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function() {
        return alternativeStar(dictMonadPlus.Alternative1());
    }, function() {
        return monadStar(dictMonadPlus.Monad0());
    });
};
var monadZeroStar = function(dictMonadZero) {
    return new Control_MonadZero.MonadZero(function() {
        return alternativeStar(dictMonadZero.Alternative1());
    }, function() {
        return monadStar(dictMonadZero.Monad0());
    }, function() {
        return undefined;
    });
};
module.exports = {
    Star: Star,
    hoistStar: hoistStar,
    newtypeStar: newtypeStar,
    semigroupoidStar: semigroupoidStar,
    categoryStar: categoryStar,
    functorStar: functorStar,
    invariantStar: invariantStar,
    applyStar: applyStar,
    applicativeStar: applicativeStar,
    bindStar: bindStar,
    monadStar: monadStar,
    altStar: altStar,
    plusStar: plusStar,
    alternativeStar: alternativeStar,
    monadZeroStar: monadZeroStar,
    monadPlusStar: monadPlusStar,
    distributiveStar: distributiveStar,
    profunctorStar: profunctorStar,
    strongStar: strongStar,
    choiceStar: choiceStar,
    closedStar: closedStar
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Monad/index.js":"alCn2","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Control.Semigroupoid/index.js":"fSgEH","../Data.Distributive/index.js":"czVlx","../Data.Either/index.js":"3WZha","../Data.Functor/index.js":"iy1jO","../Data.Functor.Invariant/index.js":"hYAzT","../Data.Newtype/index.js":"czJbt","../Data.Profunctor/index.js":"8Oy2K","../Data.Profunctor.Choice/index.js":"lMMUS","../Data.Profunctor.Closed/index.js":"fRped","../Data.Profunctor.Strong/index.js":"i6ctt","../Data.Tuple/index.js":"eOBbM"}],"lMMUS":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Choice = function(Profunctor0, left, right) {
    this.Profunctor0 = Profunctor0;
    this.left = left;
    this.right = right;
};
var right = function(dict) {
    return dict.right;
};
var left = function(dict) {
    return dict.left;
};
var splitChoice = function(dictCategory) {
    return function(dictChoice) {
        return function(l) {
            return function(r) {
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(left(dictChoice)(l))(right(dictChoice)(r));
            };
        };
    };
};
var fanin = function(dictCategory) {
    return function(dictChoice) {
        return function(l) {
            return function(r) {
                var join = Data_Profunctor.dimap(dictChoice.Profunctor0())(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(dictCategory));
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(splitChoice(dictCategory)(dictChoice)(l)(r))(join);
            };
        };
    };
};
var choiceFn = new Choice(function() {
    return Data_Profunctor.profunctorFn;
}, function(v) {
    return function(v1) {
        if (v1 instanceof Data_Either.Left) return Data_Either.Left.create(v(v1.value0));
        if (v1 instanceof Data_Either.Right) return new Data_Either.Right(v1.value0);
        throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 35, column 16): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
}, Data_Functor.map(Data_Either.functorEither));
module.exports = {
    left: left,
    right: right,
    Choice: Choice,
    splitChoice: splitChoice,
    fanin: fanin,
    choiceFn: choiceFn
};

},{"../Control.Category/index.js":"dfcPK","../Control.Semigroupoid/index.js":"fSgEH","../Data.Either/index.js":"3WZha","../Data.Functor/index.js":"iy1jO","../Data.Profunctor/index.js":"8Oy2K"}],"jWmFN":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Foldable = function(foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function(dict) {
    return dict.foldr;
};
var indexr = function(dictFoldable) {
    return function(idx) {
        var go = function(a) {
            return function(cursor) {
                if (cursor.elem instanceof Data_Maybe.Just) return cursor;
                var $152 = cursor.pos === idx;
                if ($152) return {
                    elem: new Data_Maybe.Just(a),
                    pos: cursor.pos
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        var $309 = foldr(dictFoldable)(go)({
            elem: Data_Maybe.Nothing.value,
            pos: 0
        });
        return function($310) {
            return (function(v) {
                return v.elem;
            })($309($310));
        };
    };
};
var $$null = function(dictFoldable) {
    return foldr(dictFoldable)(function(v) {
        return function(v1) {
            return false;
        };
    })(true);
};
var oneOf = function(dictFoldable) {
    return function(dictPlus) {
        return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
    };
};
var oneOfMap = function(dictFoldable) {
    return function(dictPlus) {
        return function(f) {
            return foldr(dictFoldable)(function() {
                var $311 = Control_Alt.alt(dictPlus.Alt0());
                return function($312) {
                    return $311(f($312));
                };
            }())(Control_Plus.empty(dictPlus));
        };
    };
};
var traverse_ = function(dictApplicative) {
    return function(dictFoldable) {
        return function(f) {
            return foldr(dictFoldable)(function() {
                var $313 = Control_Apply.applySecond(dictApplicative.Apply0());
                return function($314) {
                    return $313(f($314));
                };
            }())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var for_ = function(dictApplicative) {
    return function(dictFoldable) {
        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
    };
};
var sequence_ = function(dictApplicative) {
    return function(dictFoldable) {
        return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var foldl = function(dict) {
    return dict.foldl;
};
var indexl = function(dictFoldable) {
    return function(idx) {
        var go = function(cursor) {
            return function(a) {
                if (cursor.elem instanceof Data_Maybe.Just) return cursor;
                var $155 = cursor.pos === idx;
                if ($155) return {
                    elem: new Data_Maybe.Just(a),
                    pos: cursor.pos
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        var $315 = foldl(dictFoldable)(go)({
            elem: Data_Maybe.Nothing.value,
            pos: 0
        });
        return function($316) {
            return (function(v) {
                return v.elem;
            })($315($316));
        };
    };
};
var intercalate = function(dictFoldable) {
    return function(dictMonoid) {
        return function(sep) {
            return function(xs) {
                var go = function(v) {
                    return function(x) {
                        if (v.init) return {
                            init: false,
                            acc: x
                        };
                        return {
                            init: false,
                            acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                        };
                    };
                };
                return foldl(dictFoldable)(go)({
                    init: true,
                    acc: Data_Monoid.mempty(dictMonoid)
                })(xs).acc;
            };
        };
    };
};
var length = function(dictFoldable) {
    return function(dictSemiring) {
        return foldl(dictFoldable)(function(c) {
            return function(v) {
                return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
            };
        })(Data_Semiring.zero(dictSemiring));
    };
};
var maximumBy = function(dictFoldable) {
    return function(cmp) {
        var max$prime = function(v) {
            return function(v1) {
                if (v instanceof Data_Maybe.Nothing) return new Data_Maybe.Just(v1);
                if (v instanceof Data_Maybe.Just) return new Data_Maybe.Just(function() {
                    var $162 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                    if ($162) return v.value0;
                    return v1;
                }());
                throw new Error("Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function(dictOrd) {
    return function(dictFoldable) {
        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var minimumBy = function(dictFoldable) {
    return function(cmp) {
        var min$prime = function(v) {
            return function(v1) {
                if (v instanceof Data_Maybe.Nothing) return new Data_Maybe.Just(v1);
                if (v instanceof Data_Maybe.Just) return new Data_Maybe.Just(function() {
                    var $166 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
                    if ($166) return v.value0;
                    return v1;
                }());
                throw new Error("Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function(dictOrd) {
    return function(dictFoldable) {
        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var product = function(dictFoldable) {
    return function(dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
    };
};
var sum = function(dictFoldable) {
    return function(dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
    };
};
var foldableTuple = new Foldable(function(dictMonoid) {
    return function(f) {
        return function(v) {
            return f(v.value1);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(z)(v.value1);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(v.value1)(z);
        };
    };
});
var foldableMultiplicative = new Foldable(function(dictMonoid) {
    return function(f) {
        return function(v) {
            return f(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(z)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(v)(z);
        };
    };
});
var foldableMaybe = new Foldable(function(dictMonoid) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof Data_Maybe.Nothing) return Data_Monoid.mempty(dictMonoid);
            if (v1 instanceof Data_Maybe.Just) return v(v1.value0);
            throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
}, function(v) {
    return function(z) {
        return function(v1) {
            if (v1 instanceof Data_Maybe.Nothing) return z;
            if (v1 instanceof Data_Maybe.Just) return v(z)(v1.value0);
            throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                v.constructor.name,
                z.constructor.name,
                v1.constructor.name
            ]);
        };
    };
}, function(v) {
    return function(z) {
        return function(v1) {
            if (v1 instanceof Data_Maybe.Nothing) return z;
            if (v1 instanceof Data_Maybe.Just) return v(v1.value0)(z);
            throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                v.constructor.name,
                z.constructor.name,
                v1.constructor.name
            ]);
        };
    };
});
var foldableIdentity = new Foldable(function(dictMonoid) {
    return function(f) {
        return function(v) {
            return f(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(z)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(v)(z);
        };
    };
});
var foldableEither = new Foldable(function(dictMonoid) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof Data_Either.Left) return Data_Monoid.mempty(dictMonoid);
            if (v1 instanceof Data_Either.Right) return v(v1.value0);
            throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
}, function(v) {
    return function(z) {
        return function(v1) {
            if (v1 instanceof Data_Either.Left) return z;
            if (v1 instanceof Data_Either.Right) return v(z)(v1.value0);
            throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [
                v.constructor.name,
                z.constructor.name,
                v1.constructor.name
            ]);
        };
    };
}, function(v) {
    return function(z) {
        return function(v1) {
            if (v1 instanceof Data_Either.Left) return z;
            if (v1 instanceof Data_Either.Right) return v(v1.value0)(z);
            throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [
                v.constructor.name,
                z.constructor.name,
                v1.constructor.name
            ]);
        };
    };
});
var foldableDual = new Foldable(function(dictMonoid) {
    return function(f) {
        return function(v) {
            return f(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(z)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(v)(z);
        };
    };
});
var foldableDisj = new Foldable(function(dictMonoid) {
    return function(f) {
        return function(v) {
            return f(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(z)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(v)(z);
        };
    };
});
var foldableConst = new Foldable(function(dictMonoid) {
    return function(v) {
        return function(v1) {
            return Data_Monoid.mempty(dictMonoid);
        };
    };
}, function(v) {
    return function(z) {
        return function(v1) {
            return z;
        };
    };
}, function(v) {
    return function(z) {
        return function(v1) {
            return z;
        };
    };
});
var foldableConj = new Foldable(function(dictMonoid) {
    return function(f) {
        return function(v) {
            return f(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(z)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(v)(z);
        };
    };
});
var foldableAdditive = new Foldable(function(dictMonoid) {
    return function(f) {
        return function(v) {
            return f(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(z)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(v)(z);
        };
    };
});
var foldMapDefaultR = function(dictFoldable) {
    return function(dictMonoid) {
        return function(f) {
            return foldr(dictFoldable)(function(x) {
                return function(acc) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableArray = new Foldable(function(dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function(dictFoldable) {
    return function(dictMonoid) {
        return function(f) {
            return foldl(dictFoldable)(function(acc) {
                return function(x) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMap = function(dict) {
    return dict.foldMap;
};
var foldableApp = function(dictFoldable) {
    return new Foldable(function(dictMonoid) {
        return function(f) {
            return function(v) {
                return foldMap(dictFoldable)(dictMonoid)(f)(v);
            };
        };
    }, function(f) {
        return function(i) {
            return function(v) {
                return foldl(dictFoldable)(f)(i)(v);
            };
        };
    }, function(f) {
        return function(i) {
            return function(v) {
                return foldr(dictFoldable)(f)(i)(v);
            };
        };
    });
};
var foldableCompose = function(dictFoldable) {
    return function(dictFoldable1) {
        return new Foldable(function(dictMonoid) {
            return function(f) {
                return function(v) {
                    return foldMap(dictFoldable)(dictMonoid)(foldMap(dictFoldable1)(dictMonoid)(f))(v);
                };
            };
        }, function(f) {
            return function(i) {
                return function(v) {
                    return foldl(dictFoldable)(foldl(dictFoldable1)(f))(i)(v);
                };
            };
        }, function(f) {
            return function(i) {
                return function(v) {
                    return foldr(dictFoldable)(Data_Function.flip(foldr(dictFoldable1)(f)))(i)(v);
                };
            };
        });
    };
};
var foldableCoproduct = function(dictFoldable) {
    return function(dictFoldable1) {
        return new Foldable(function(dictMonoid) {
            return function(f) {
                return Data_Functor_Coproduct.coproduct(foldMap(dictFoldable)(dictMonoid)(f))(foldMap(dictFoldable1)(dictMonoid)(f));
            };
        }, function(f) {
            return function(z) {
                return Data_Functor_Coproduct.coproduct(foldl(dictFoldable)(f)(z))(foldl(dictFoldable1)(f)(z));
            };
        }, function(f) {
            return function(z) {
                return Data_Functor_Coproduct.coproduct(foldr(dictFoldable)(f)(z))(foldr(dictFoldable1)(f)(z));
            };
        });
    };
};
var foldableFirst = new Foldable(function(dictMonoid) {
    return function(f) {
        return function(v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableLast = new Foldable(function(dictMonoid) {
    return function(f) {
        return function(v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableProduct = function(dictFoldable) {
    return function(dictFoldable1) {
        return new Foldable(function(dictMonoid) {
            return function(f) {
                return function(v) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(foldMap(dictFoldable)(dictMonoid)(f)(v.value0))(foldMap(dictFoldable1)(dictMonoid)(f)(v.value1));
                };
            };
        }, function(f) {
            return function(z) {
                return function(v) {
                    return foldl(dictFoldable1)(f)(foldl(dictFoldable)(f)(z)(v.value0))(v.value1);
                };
            };
        }, function(f) {
            return function(z) {
                return function(v) {
                    return foldr(dictFoldable)(f)(foldr(dictFoldable1)(f)(z)(v.value1))(v.value0);
                };
            };
        });
    };
};
var foldlDefault = function(dictFoldable) {
    return function(c) {
        return function(u) {
            return function(xs) {
                return Data_Newtype.unwrap()(Data_Newtype.unwrap()(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function() {
                    var $317 = Data_Function.flip(c);
                    return function($318) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($317($318)));
                    };
                }())(xs)))(u);
            };
        };
    };
};
var foldrDefault = function(dictFoldable) {
    return function(c) {
        return function(u) {
            return function(xs) {
                return Data_Newtype.unwrap()(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function($319) {
                    return Data_Monoid_Endo.Endo(c($319));
                })(xs))(u);
            };
        };
    };
};
var lookup = function(dictFoldable) {
    return function(dictEq) {
        return function(a) {
            var $320 = Data_Newtype.unwrap();
            var $321 = foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function(v) {
                var $302 = Data_Eq.eq(dictEq)(a)(v.value0);
                if ($302) return new Data_Maybe.Just(v.value1);
                return Data_Maybe.Nothing.value;
            });
            return function($322) {
                return $320($321($322));
            };
        };
    };
};
var surroundMap = function(dictFoldable) {
    return function(dictSemigroup) {
        return function(d) {
            return function(t) {
                return function(f) {
                    var joined = function(a) {
                        return function(m) {
                            return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
                        };
                    };
                    return Data_Newtype.unwrap()(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
                };
            };
        };
    };
};
var surround = function(dictFoldable) {
    return function(dictSemigroup) {
        return function(d) {
            return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.identity(Control_Category.categoryFn));
        };
    };
};
var foldM = function(dictFoldable) {
    return function(dictMonad) {
        return function(f) {
            return function(b0) {
                return foldl(dictFoldable)(function(b) {
                    return function(a) {
                        return Control_Bind.bind(dictMonad.Bind1())(b)(Data_Function.flip(f)(a));
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(b0));
            };
        };
    };
};
var fold = function(dictFoldable) {
    return function(dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var findMap = function(dictFoldable) {
    return function(p) {
        var go = function(v) {
            return function(v1) {
                if (v instanceof Data_Maybe.Nothing) return p(v1);
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var find = function(dictFoldable) {
    return function(p) {
        var go = function(v) {
            return function(v1) {
                if (v instanceof Data_Maybe.Nothing && p(v1)) return new Data_Maybe.Just(v1);
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var any = function(dictFoldable) {
    return function(dictHeytingAlgebra) {
        return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
    };
};
var elem = function(dictFoldable) {
    return function(dictEq) {
        var $323 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
        var $324 = Data_Eq.eq(dictEq);
        return function($325) {
            return $323($324($325));
        };
    };
};
var notElem = function(dictFoldable) {
    return function(dictEq) {
        return function(x) {
            var $326 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
            var $327 = elem(dictFoldable)(dictEq)(x);
            return function($328) {
                return $326($327($328));
            };
        };
    };
};
var or = function(dictFoldable) {
    return function(dictHeytingAlgebra) {
        return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var all = function(dictFoldable) {
    return function(dictHeytingAlgebra) {
        return Data_Newtype.alaF()()()()(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
    };
};
var and = function(dictFoldable) {
    return function(dictHeytingAlgebra) {
        return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable,
    foldr: foldr,
    foldl: foldl,
    foldMap: foldMap,
    foldrDefault: foldrDefault,
    foldlDefault: foldlDefault,
    foldMapDefaultL: foldMapDefaultL,
    foldMapDefaultR: foldMapDefaultR,
    fold: fold,
    foldM: foldM,
    traverse_: traverse_,
    for_: for_,
    sequence_: sequence_,
    oneOf: oneOf,
    oneOfMap: oneOfMap,
    intercalate: intercalate,
    surroundMap: surroundMap,
    surround: surround,
    and: and,
    or: or,
    all: all,
    any: any,
    sum: sum,
    product: product,
    elem: elem,
    notElem: notElem,
    indexl: indexl,
    indexr: indexr,
    find: find,
    findMap: findMap,
    maximum: maximum,
    maximumBy: maximumBy,
    minimum: minimum,
    minimumBy: minimumBy,
    "null": $$null,
    length: length,
    lookup: lookup,
    foldableArray: foldableArray,
    foldableMaybe: foldableMaybe,
    foldableFirst: foldableFirst,
    foldableLast: foldableLast,
    foldableAdditive: foldableAdditive,
    foldableDual: foldableDual,
    foldableDisj: foldableDisj,
    foldableConj: foldableConj,
    foldableMultiplicative: foldableMultiplicative,
    foldableEither: foldableEither,
    foldableTuple: foldableTuple,
    foldableIdentity: foldableIdentity,
    foldableConst: foldableConst,
    foldableProduct: foldableProduct,
    foldableCoproduct: foldableCoproduct,
    foldableCompose: foldableCompose,
    foldableApp: foldableApp
};

},{"./foreign.js":"2B1xa","../Control.Alt/index.js":"82RIG","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Plus/index.js":"5lCU5","../Data.Either/index.js":"3WZha","../Data.Eq/index.js":"c3b8F","../Data.Function/index.js":"cuwEt","../Data.Functor.Coproduct/index.js":"gpKJ8","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.Maybe/index.js":"ePH81","../Data.Maybe.First/index.js":"7YZYW","../Data.Monoid/index.js":"94fxC","../Data.Monoid.Conj/index.js":"gxI2n","../Data.Monoid.Disj/index.js":"2qFBQ","../Data.Monoid.Dual/index.js":"9K8EM","../Data.Monoid.Endo/index.js":"jaqUa","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Semiring/index.js":"39btI","../Data.Unit/index.js":"d7oKp"}],"2B1xa":[function(require,module,exports) {
"use strict";
exports.foldrArray = function(f) {
    return function(init) {
        return function(xs) {
            var acc = init;
            var len = xs.length;
            for(var i = len - 1; i >= 0; i--)acc = f(xs[i])(acc);
            return acc;
        };
    };
};
exports.foldlArray = function(f) {
    return function(init) {
        return function(xs) {
            var acc = init;
            var len = xs.length;
            for(var i = 0; i < len; i++)acc = f(acc)(xs[i]);
            return acc;
        };
    };
};

},{}],"gpKJ8":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Coproduct = function(x) {
    return x;
};
var showCoproduct = function(dictShow) {
    return function(dictShow1) {
        return new Data_Show.Show(function(v) {
            if (v instanceof Data_Either.Left) return "(left " + (Data_Show.show(dictShow)(v.value0) + ")");
            if (v instanceof Data_Either.Right) return "(right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            throw new Error("Failed pattern match at Data.Functor.Coproduct (line 63, column 1 - line 65, column 60): " + [
                v.constructor.name
            ]);
        });
    };
};
var right = function(ga) {
    return new Data_Either.Right(ga);
};
var newtypeCoproduct = new Data_Newtype.Newtype(function() {
    return undefined;
});
var left = function(fa) {
    return new Data_Either.Left(fa);
};
var functorCoproduct = function(dictFunctor) {
    return function(dictFunctor1) {
        return new Data_Functor.Functor(function(f) {
            return function(v) {
                return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
            };
        });
    };
};
var eq1Coproduct = function(dictEq1) {
    return function(dictEq11) {
        return new Data_Eq.Eq1(function(dictEq) {
            return function(v) {
                return function(v1) {
                    if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) return Data_Eq.eq1(dictEq1)(dictEq)(v.value0)(v1.value0);
                    if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) return Data_Eq.eq1(dictEq11)(dictEq)(v.value0)(v1.value0);
                    return false;
                };
            };
        });
    };
};
var eqCoproduct = function(dictEq1) {
    return function(dictEq11) {
        return function(dictEq) {
            return new Data_Eq.Eq(Data_Eq.eq1(eq1Coproduct(dictEq1)(dictEq11))(dictEq));
        };
    };
};
var ord1Coproduct = function(dictOrd1) {
    return function(dictOrd11) {
        return new Data_Ord.Ord1(function() {
            return eq1Coproduct(dictOrd1.Eq10())(dictOrd11.Eq10());
        }, function(dictOrd) {
            return function(v) {
                return function(v1) {
                    if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value0)(v1.value0);
                    if (v instanceof Data_Either.Left) return Data_Ordering.LT.value;
                    if (v1 instanceof Data_Either.Left) return Data_Ordering.GT.value;
                    if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) return Data_Ord.compare1(dictOrd11)(dictOrd)(v.value0)(v1.value0);
                    throw new Error("Failed pattern match at Data.Functor.Coproduct (line 57, column 5 - line 61, column 43): " + [
                        v.constructor.name,
                        v1.constructor.name
                    ]);
                };
            };
        });
    };
};
var ordCoproduct = function(dictOrd1) {
    return function(dictOrd11) {
        return function(dictOrd) {
            return new Data_Ord.Ord(function() {
                return eqCoproduct(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
            }, Data_Ord.compare1(ord1Coproduct(dictOrd1)(dictOrd11))(dictOrd));
        };
    };
};
var coproduct = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Data_Either.Left) return v(v2.value0);
            if (v2 instanceof Data_Either.Right) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Functor.Coproduct (line 27, column 1 - line 27, column 78): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var extendCoproduct = function(dictExtend) {
    return function(dictExtend1) {
        return new Control_Extend.Extend(function() {
            return functorCoproduct(dictExtend.Functor0())(dictExtend1.Functor0());
        }, function(f) {
            var $61 = coproduct(function() {
                var $63 = Control_Extend.extend(dictExtend)(function($65) {
                    return f(Coproduct(Data_Either.Left.create($65)));
                });
                return function($64) {
                    return Data_Either.Left.create($63($64));
                };
            }())(function() {
                var $66 = Control_Extend.extend(dictExtend1)(function($68) {
                    return f(Coproduct(Data_Either.Right.create($68)));
                });
                return function($67) {
                    return Data_Either.Right.create($66($67));
                };
            }());
            return function($62) {
                return Coproduct($61($62));
            };
        });
    };
};
var comonadCoproduct = function(dictComonad) {
    return function(dictComonad1) {
        return new Control_Comonad.Comonad(function() {
            return extendCoproduct(dictComonad.Extend0())(dictComonad1.Extend0());
        }, coproduct(Control_Comonad.extract(dictComonad))(Control_Comonad.extract(dictComonad1)));
    };
};
var bihoistCoproduct = function(natF) {
    return function(natG) {
        return function(v) {
            return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(natF)(natG)(v);
        };
    };
};
module.exports = {
    Coproduct: Coproduct,
    left: left,
    right: right,
    coproduct: coproduct,
    bihoistCoproduct: bihoistCoproduct,
    newtypeCoproduct: newtypeCoproduct,
    eqCoproduct: eqCoproduct,
    eq1Coproduct: eq1Coproduct,
    ordCoproduct: ordCoproduct,
    ord1Coproduct: ord1Coproduct,
    showCoproduct: showCoproduct,
    functorCoproduct: functorCoproduct,
    extendCoproduct: extendCoproduct,
    comonadCoproduct: comonadCoproduct
};

},{"../Control.Comonad/index.js":"hfPua","../Control.Extend/index.js":"kAltv","../Data.Bifunctor/index.js":"4aJ07","../Data.Either/index.js":"3WZha","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW"}],"7YZYW":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var First = function(x) {
    return x;
};
var showFirst = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupFirst = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        if (v instanceof Data_Maybe.Just) return v;
        return v1;
    };
});
var ordFirst = function(dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1First = Data_Maybe.ord1Maybe;
var newtypeFirst = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monoidFirst = new Data_Monoid.Monoid(function() {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;
var eqFirst = function(dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1First = Data_Maybe.eq1Maybe;
var boundedFirst = function(dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
var altFirst = new Control_Alt.Alt(function() {
    return functorFirst;
}, Data_Semigroup.append(semigroupFirst));
var plusFirst = new Control_Plus.Plus(function() {
    return altFirst;
}, Data_Monoid.mempty(monoidFirst));
var alternativeFirst = new Control_Alternative.Alternative(function() {
    return applicativeFirst;
}, function() {
    return plusFirst;
});
var monadZeroFirst = new Control_MonadZero.MonadZero(function() {
    return alternativeFirst;
}, function() {
    return monadFirst;
}, function() {
    return undefined;
});
module.exports = {
    First: First,
    newtypeFirst: newtypeFirst,
    eqFirst: eqFirst,
    eq1First: eq1First,
    ordFirst: ordFirst,
    ord1First: ord1First,
    boundedFirst: boundedFirst,
    functorFirst: functorFirst,
    invariantFirst: invariantFirst,
    applyFirst: applyFirst,
    applicativeFirst: applicativeFirst,
    bindFirst: bindFirst,
    monadFirst: monadFirst,
    extendFirst: extendFirst,
    showFirst: showFirst,
    semigroupFirst: semigroupFirst,
    monoidFirst: monoidFirst,
    altFirst: altFirst,
    plusFirst: plusFirst,
    alternativeFirst: alternativeFirst,
    monadZeroFirst: monadZeroFirst
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW"}],"gxI2n":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Conj = function(x) {
    return x;
};
var showConj = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConj = function(dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function(v) {
        return function(v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, function(v) {
        return function(v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var semigroupConj = function(dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordConj = function(dictOrd) {
    return dictOrd;
};
var monoidConj = function(dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function() {
        return semigroupConj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var functorConj = new Data_Functor.Functor(function(f) {
    return function(m) {
        return f(m);
    };
});
var eqConj = function(dictEq) {
    return dictEq;
};
var eq1Conj = new Data_Eq.Eq1(function(dictEq) {
    return Data_Eq.eq(eqConj(dictEq));
});
var ord1Conj = new Data_Ord.Ord1(function() {
    return eq1Conj;
}, function(dictOrd) {
    return Data_Ord.compare(ordConj(dictOrd));
});
var boundedConj = function(dictBounded) {
    return dictBounded;
};
var applyConj = new Control_Apply.Apply(function() {
    return functorConj;
}, function(v) {
    return function(v1) {
        return v(v1);
    };
});
var bindConj = new Control_Bind.Bind(function() {
    return applyConj;
}, function(v) {
    return function(f) {
        return f(v);
    };
});
var applicativeConj = new Control_Applicative.Applicative(function() {
    return applyConj;
}, Conj);
var monadConj = new Control_Monad.Monad(function() {
    return applicativeConj;
}, function() {
    return bindConj;
});
module.exports = {
    Conj: Conj,
    eqConj: eqConj,
    eq1Conj: eq1Conj,
    ordConj: ordConj,
    ord1Conj: ord1Conj,
    boundedConj: boundedConj,
    showConj: showConj,
    functorConj: functorConj,
    applyConj: applyConj,
    applicativeConj: applicativeConj,
    bindConj: bindConj,
    monadConj: monadConj,
    semigroupConj: semigroupConj,
    monoidConj: monoidConj,
    semiringConj: semiringConj
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Semiring/index.js":"39btI","../Data.Show/index.js":"b6tNW"}],"2qFBQ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Disj = function(x) {
    return x;
};
var showDisj = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringDisj = function(dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function(v) {
        return function(v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, function(v) {
        return function(v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var semigroupDisj = function(dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordDisj = function(dictOrd) {
    return dictOrd;
};
var monoidDisj = function(dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function() {
        return semigroupDisj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var functorDisj = new Data_Functor.Functor(function(f) {
    return function(m) {
        return f(m);
    };
});
var eqDisj = function(dictEq) {
    return dictEq;
};
var eq1Disj = new Data_Eq.Eq1(function(dictEq) {
    return Data_Eq.eq(eqDisj(dictEq));
});
var ord1Disj = new Data_Ord.Ord1(function() {
    return eq1Disj;
}, function(dictOrd) {
    return Data_Ord.compare(ordDisj(dictOrd));
});
var boundedDisj = function(dictBounded) {
    return dictBounded;
};
var applyDisj = new Control_Apply.Apply(function() {
    return functorDisj;
}, function(v) {
    return function(v1) {
        return v(v1);
    };
});
var bindDisj = new Control_Bind.Bind(function() {
    return applyDisj;
}, function(v) {
    return function(f) {
        return f(v);
    };
});
var applicativeDisj = new Control_Applicative.Applicative(function() {
    return applyDisj;
}, Disj);
var monadDisj = new Control_Monad.Monad(function() {
    return applicativeDisj;
}, function() {
    return bindDisj;
});
module.exports = {
    Disj: Disj,
    eqDisj: eqDisj,
    eq1Disj: eq1Disj,
    ordDisj: ordDisj,
    ord1Disj: ord1Disj,
    boundedDisj: boundedDisj,
    showDisj: showDisj,
    functorDisj: functorDisj,
    applyDisj: applyDisj,
    applicativeDisj: applicativeDisj,
    bindDisj: bindDisj,
    monadDisj: monadDisj,
    semigroupDisj: semigroupDisj,
    monoidDisj: monoidDisj,
    semiringDisj: semiringDisj
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Semiring/index.js":"39btI","../Data.Show/index.js":"b6tNW"}],"9K8EM":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Dual = function(x) {
    return x;
};
var showDual = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupDual = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return Data_Semigroup.append(dictSemigroup)(v1)(v);
        };
    });
};
var ordDual = function(dictOrd) {
    return dictOrd;
};
var monoidDual = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupDual(dictMonoid.Semigroup0());
    }, Data_Monoid.mempty(dictMonoid));
};
var functorDual = new Data_Functor.Functor(function(f) {
    return function(m) {
        return f(m);
    };
});
var eqDual = function(dictEq) {
    return dictEq;
};
var eq1Dual = new Data_Eq.Eq1(function(dictEq) {
    return Data_Eq.eq(eqDual(dictEq));
});
var ord1Dual = new Data_Ord.Ord1(function() {
    return eq1Dual;
}, function(dictOrd) {
    return Data_Ord.compare(ordDual(dictOrd));
});
var boundedDual = function(dictBounded) {
    return dictBounded;
};
var applyDual = new Control_Apply.Apply(function() {
    return functorDual;
}, function(v) {
    return function(v1) {
        return v(v1);
    };
});
var bindDual = new Control_Bind.Bind(function() {
    return applyDual;
}, function(v) {
    return function(f) {
        return f(v);
    };
});
var applicativeDual = new Control_Applicative.Applicative(function() {
    return applyDual;
}, Dual);
var monadDual = new Control_Monad.Monad(function() {
    return applicativeDual;
}, function() {
    return bindDual;
});
module.exports = {
    Dual: Dual,
    eqDual: eqDual,
    eq1Dual: eq1Dual,
    ordDual: ordDual,
    ord1Dual: ord1Dual,
    boundedDual: boundedDual,
    showDual: showDual,
    functorDual: functorDual,
    applyDual: applyDual,
    applicativeDual: applicativeDual,
    bindDual: bindDual,
    monadDual: monadDual,
    semigroupDual: semigroupDual,
    monoidDual: monoidDual
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW"}],"jaqUa":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Endo = function(x) {
    return x;
};
var showEndo = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Endo " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupEndo = function(dictSemigroupoid) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return Control_Semigroupoid.compose(dictSemigroupoid)(v)(v1);
        };
    });
};
var ordEndo = function(dictOrd) {
    return dictOrd;
};
var monoidEndo = function(dictCategory) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEndo(dictCategory.Semigroupoid0());
    }, Control_Category.identity(dictCategory));
};
var eqEndo = function(dictEq) {
    return dictEq;
};
var boundedEndo = function(dictBounded) {
    return dictBounded;
};
module.exports = {
    Endo: Endo,
    eqEndo: eqEndo,
    ordEndo: ordEndo,
    boundedEndo: boundedEndo,
    showEndo: showEndo,
    semigroupEndo: semigroupEndo,
    monoidEndo: monoidEndo
};

},{"../Control.Category/index.js":"dfcPK","../Control.Semigroupoid/index.js":"fSgEH","../Data.Monoid/index.js":"94fxC","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW"}],"i5Kon":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Const = require("../Data.Const/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_App = require("../Data.Functor.App/index.js");
var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");
var Data_Functor_Product = require("../Data.Functor.Product/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Traversable = function(Foldable1, Functor0, sequence, traverse) {
    this.Foldable1 = Foldable1;
    this.Functor0 = Functor0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function(dict) {
    return dict.traverse;
};
var traversableTuple = new Traversable(function() {
    return Data_Foldable.foldableTuple;
}, function() {
    return Data_Tuple.functorTuple;
}, function(dictApplicative) {
    return function(v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(v.value0))(v.value1);
    };
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var traversableMultiplicative = new Traversable(function() {
    return Data_Foldable.foldableMultiplicative;
}, function() {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function(dictApplicative) {
    return function(v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var traversableMaybe = new Traversable(function() {
    return Data_Foldable.foldableMaybe;
}, function() {
    return Data_Maybe.functorMaybe;
}, function(dictApplicative) {
    return function(v) {
        if (v instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
        if (v instanceof Data_Maybe.Just) return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe.Just.create)(v.value0);
        throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [
            v.constructor.name
        ]);
    };
}, function(dictApplicative) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
            if (v1 instanceof Data_Maybe.Just) return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe.Just.create)(v(v1.value0));
            throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
});
var traversableIdentity = new Traversable(function() {
    return Data_Foldable.foldableIdentity;
}, function() {
    return Data_Identity.functorIdentity;
}, function(dictApplicative) {
    return function(v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Identity.Identity)(v);
    };
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Identity.Identity)(f(v));
        };
    };
});
var traversableEither = new Traversable(function() {
    return Data_Foldable.foldableEither;
}, function() {
    return Data_Either.functorEither;
}, function(dictApplicative) {
    return function(v) {
        if (v instanceof Data_Either.Left) return Control_Applicative.pure(dictApplicative)(new Data_Either.Left(v.value0));
        if (v instanceof Data_Either.Right) return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v.value0);
        throw new Error("Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): " + [
            v.constructor.name
        ]);
    };
}, function(dictApplicative) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof Data_Either.Left) return Control_Applicative.pure(dictApplicative)(new Data_Either.Left(v1.value0));
            if (v1 instanceof Data_Either.Right) return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v(v1.value0));
            throw new Error("Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
});
var traversableDual = new Traversable(function() {
    return Data_Foldable.foldableDual;
}, function() {
    return Data_Monoid_Dual.functorDual;
}, function(dictApplicative) {
    return function(v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Dual.Dual)(v);
    };
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableDisj = new Traversable(function() {
    return Data_Foldable.foldableDisj;
}, function() {
    return Data_Monoid_Disj.functorDisj;
}, function(dictApplicative) {
    return function(v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Disj.Disj)(v);
    };
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Disj.Disj)(f(v));
        };
    };
});
var traversableConst = new Traversable(function() {
    return Data_Foldable.foldableConst;
}, function() {
    return Data_Const.functorConst;
}, function(dictApplicative) {
    return function(v) {
        return Control_Applicative.pure(dictApplicative)(v);
    };
}, function(dictApplicative) {
    return function(v) {
        return function(v1) {
            return Control_Applicative.pure(dictApplicative)(v1);
        };
    };
});
var traversableConj = new Traversable(function() {
    return Data_Foldable.foldableConj;
}, function() {
    return Data_Monoid_Conj.functorConj;
}, function(dictApplicative) {
    return function(v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Conj.Conj)(v);
    };
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Conj.Conj)(f(v));
        };
    };
});
var traversableCompose = function(dictTraversable) {
    return function(dictTraversable1) {
        return new Traversable(function() {
            return Data_Foldable.foldableCompose(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
        }, function() {
            return Data_Functor_Compose.functorCompose(dictTraversable.Functor0())(dictTraversable1.Functor0());
        }, function(dictApplicative) {
            return traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
        }, function(dictApplicative) {
            return function(f) {
                return function(v) {
                    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_Compose.Compose)(traverse(dictTraversable)(dictApplicative)(traverse(dictTraversable1)(dictApplicative)(f))(v));
                };
            };
        });
    };
};
var traversableAdditive = new Traversable(function() {
    return Data_Foldable.foldableAdditive;
}, function() {
    return Data_Monoid_Additive.functorAdditive;
}, function(dictApplicative) {
    return function(v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Additive.Additive)(v);
    };
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Additive.Additive)(f(v));
        };
    };
});
var sequenceDefault = function(dictTraversable) {
    return function(dictApplicative) {
        return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var traversableArray = new Traversable(function() {
    return Data_Foldable.foldableArray;
}, function() {
    return Data_Functor.functorArray;
}, function(dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
}, function(dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative));
});
var sequence = function(dict) {
    return dict.sequence;
};
var traversableApp = function(dictTraversable) {
    return new Traversable(function() {
        return Data_Foldable.foldableApp(dictTraversable.Foldable1());
    }, function() {
        return Data_Functor_App.functorApp(dictTraversable.Functor0());
    }, function(dictApplicative) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_App.App)(sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function(dictApplicative) {
        return function(f) {
            return function(v) {
                return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_App.App)(traverse(dictTraversable)(dictApplicative)(f)(v));
            };
        };
    });
};
var traversableCoproduct = function(dictTraversable) {
    return function(dictTraversable1) {
        return new Traversable(function() {
            return Data_Foldable.foldableCoproduct(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
        }, function() {
            return Data_Functor_Coproduct.functorCoproduct(dictTraversable.Functor0())(dictTraversable1.Functor0());
        }, function(dictApplicative) {
            return Data_Functor_Coproduct.coproduct(function() {
                var $141 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function($144) {
                    return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($144));
                });
                var $142 = sequence(dictTraversable)(dictApplicative);
                return function($143) {
                    return $141($142($143));
                };
            }())(function() {
                var $145 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function($148) {
                    return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($148));
                });
                var $146 = sequence(dictTraversable1)(dictApplicative);
                return function($147) {
                    return $145($146($147));
                };
            }());
        }, function(dictApplicative) {
            return function(f) {
                return Data_Functor_Coproduct.coproduct(function() {
                    var $149 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function($152) {
                        return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($152));
                    });
                    var $150 = traverse(dictTraversable)(dictApplicative)(f);
                    return function($151) {
                        return $149($150($151));
                    };
                }())(function() {
                    var $153 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function($156) {
                        return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($156));
                    });
                    var $154 = traverse(dictTraversable1)(dictApplicative)(f);
                    return function($155) {
                        return $153($154($155));
                    };
                }());
            };
        });
    };
};
var traversableFirst = new Traversable(function() {
    return Data_Foldable.foldableFirst;
}, function() {
    return Data_Maybe_First.functorFirst;
}, function(dictApplicative) {
    return function(v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableLast = new Traversable(function() {
    return Data_Foldable.foldableLast;
}, function() {
    return Data_Maybe_Last.functorLast;
}, function(dictApplicative) {
    return function(v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableProduct = function(dictTraversable) {
    return function(dictTraversable1) {
        return new Traversable(function() {
            return Data_Foldable.foldableProduct(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
        }, function() {
            return Data_Functor_Product.functorProduct(dictTraversable.Functor0())(dictTraversable1.Functor0());
        }, function(dictApplicative) {
            return function(v) {
                return Control_Apply.lift2(dictApplicative.Apply0())(Data_Functor_Product.product)(sequence(dictTraversable)(dictApplicative)(v.value0))(sequence(dictTraversable1)(dictApplicative)(v.value1));
            };
        }, function(dictApplicative) {
            return function(f) {
                return function(v) {
                    return Control_Apply.lift2(dictApplicative.Apply0())(Data_Functor_Product.product)(traverse(dictTraversable)(dictApplicative)(f)(v.value0))(traverse(dictTraversable1)(dictApplicative)(f)(v.value1));
                };
            };
        });
    };
};
var traverseDefault = function(dictTraversable) {
    return function(dictApplicative) {
        return function(f) {
            return function(ta) {
                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
            };
        };
    };
};
var mapAccumR = function(dictTraversable) {
    return function(f) {
        return function(s0) {
            return function(xs) {
                return Data_Traversable_Accum_Internal.stateR(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function(a) {
                    return function(s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function(dictTraversable) {
    return function(f) {
        return function(b0) {
            return function(xs) {
                return mapAccumR(dictTraversable)(function(b) {
                    return function(a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var mapAccumL = function(dictTraversable) {
    return function(f) {
        return function(s0) {
            return function(xs) {
                return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function(a) {
                    return function(s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function(dictTraversable) {
    return function(f) {
        return function(b0) {
            return function(xs) {
                return mapAccumL(dictTraversable)(function(b) {
                    return function(a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var $$for = function(dictApplicative) {
    return function(dictTraversable) {
        return function(x) {
            return function(f) {
                return traverse(dictTraversable)(dictApplicative)(f)(x);
            };
        };
    };
};
module.exports = {
    Traversable: Traversable,
    traverse: traverse,
    sequence: sequence,
    traverseDefault: traverseDefault,
    sequenceDefault: sequenceDefault,
    "for": $$for,
    scanl: scanl,
    scanr: scanr,
    mapAccumL: mapAccumL,
    mapAccumR: mapAccumR,
    traversableArray: traversableArray,
    traversableMaybe: traversableMaybe,
    traversableFirst: traversableFirst,
    traversableLast: traversableLast,
    traversableAdditive: traversableAdditive,
    traversableDual: traversableDual,
    traversableConj: traversableConj,
    traversableDisj: traversableDisj,
    traversableMultiplicative: traversableMultiplicative,
    traversableEither: traversableEither,
    traversableTuple: traversableTuple,
    traversableIdentity: traversableIdentity,
    traversableConst: traversableConst,
    traversableProduct: traversableProduct,
    traversableCoproduct: traversableCoproduct,
    traversableCompose: traversableCompose,
    traversableApp: traversableApp,
    Foldable: Data_Foldable.Foldable,
    all: Data_Foldable.all,
    and: Data_Foldable.and,
    any: Data_Foldable.any,
    elem: Data_Foldable.elem,
    find: Data_Foldable.find,
    fold: Data_Foldable.fold,
    foldMap: Data_Foldable.foldMap,
    foldMapDefaultL: Data_Foldable.foldMapDefaultL,
    foldMapDefaultR: Data_Foldable.foldMapDefaultR,
    foldl: Data_Foldable.foldl,
    foldlDefault: Data_Foldable.foldlDefault,
    foldr: Data_Foldable.foldr,
    foldrDefault: Data_Foldable.foldrDefault,
    for_: Data_Foldable.for_,
    intercalate: Data_Foldable.intercalate,
    maximum: Data_Foldable.maximum,
    maximumBy: Data_Foldable.maximumBy,
    minimum: Data_Foldable.minimum,
    minimumBy: Data_Foldable.minimumBy,
    notElem: Data_Foldable.notElem,
    oneOf: Data_Foldable.oneOf,
    or: Data_Foldable.or,
    sequence_: Data_Foldable.sequence_,
    sum: Data_Foldable.sum,
    traverse_: Data_Foldable.traverse_
};

},{"./foreign.js":"6FRLh","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Category/index.js":"dfcPK","../Data.Const/index.js":"hlexi","../Data.Either/index.js":"3WZha","../Data.Foldable/index.js":"jWmFN","../Data.Functor/index.js":"iy1jO","../Data.Functor.App/index.js":"ihqtJ","../Data.Functor.Compose/index.js":"aJAZA","../Data.Functor.Coproduct/index.js":"gpKJ8","../Data.Functor.Product/index.js":"8AoSo","../Data.Identity/index.js":"3qeSN","../Data.Maybe/index.js":"ePH81","../Data.Maybe.First/index.js":"7YZYW","../Data.Maybe.Last/index.js":"kKmFe","../Data.Monoid.Additive/index.js":"gMw6U","../Data.Monoid.Conj/index.js":"gxI2n","../Data.Monoid.Disj/index.js":"2qFBQ","../Data.Monoid.Dual/index.js":"9K8EM","../Data.Monoid.Multiplicative/index.js":"ks234","../Data.Traversable.Accum/index.js":"gN98F","../Data.Traversable.Accum.Internal/index.js":"1K5e2","../Data.Tuple/index.js":"eOBbM"}],"6FRLh":[function(require,module,exports) {
"use strict";
// jshint maxparams: 3
exports.traverseArrayImpl = (function() {
    function array1(a) {
        return [
            a
        ];
    }
    function array2(a) {
        return function(b) {
            return [
                a,
                b
            ];
        };
    }
    function array3(a) {
        return function(b) {
            return function(c) {
                return [
                    a,
                    b,
                    c
                ];
            };
        };
    }
    function concat2(xs) {
        return function(ys) {
            return xs.concat(ys);
        };
    }
    return function(apply) {
        return function(map) {
            return function(pure) {
                return function(f) {
                    return function(array) {
                        function go(bot, top) {
                            switch(top - bot){
                                case 0:
                                    return pure([]);
                                case 1:
                                    return map(array1)(f(array[bot]));
                                case 2:
                                    return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                                case 3:
                                    return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                                default:
                                    // This slightly tricky pivot selection aims to produce two
                                    // even-length partitions where possible.
                                    var pivot = bot + Math.floor((top - bot) / 4) * 2;
                                    return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                            }
                        }
                        return go(0, array.length);
                    };
                };
            };
        };
    };
})();

},{}],"hlexi":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Const = function(x) {
    return x;
};
var showConst = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Const " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConst = function(dictSemiring) {
    return dictSemiring;
};
var semigroupoidConst = new Control_Semigroupoid.Semigroupoid(function(v) {
    return function(v1) {
        return v1;
    };
});
var semigroupConst = function(dictSemigroup) {
    return dictSemigroup;
};
var ringConst = function(dictRing) {
    return dictRing;
};
var ordConst = function(dictOrd) {
    return dictOrd;
};
var newtypeConst = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monoidConst = function(dictMonoid) {
    return dictMonoid;
};
var heytingAlgebraConst = function(dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorConst = new Data_Functor.Functor(function(f) {
    return function(m) {
        return m;
    };
});
var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
var euclideanRingConst = function(dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqConst = function(dictEq) {
    return dictEq;
};
var eq1Const = function(dictEq) {
    return new Data_Eq.Eq1(function(dictEq1) {
        return Data_Eq.eq(eqConst(dictEq));
    });
};
var ord1Const = function(dictOrd) {
    return new Data_Ord.Ord1(function() {
        return eq1Const(dictOrd.Eq0());
    }, function(dictOrd1) {
        return Data_Ord.compare(ordConst(dictOrd));
    });
};
var commutativeRingConst = function(dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedConst = function(dictBounded) {
    return dictBounded;
};
var booleanAlgebraConst = function(dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyConst = function(dictSemigroup) {
    return new Control_Apply.Apply(function() {
        return functorConst;
    }, function(v) {
        return function(v1) {
            return Data_Semigroup.append(dictSemigroup)(v)(v1);
        };
    });
};
var applicativeConst = function(dictMonoid) {
    return new Control_Applicative.Applicative(function() {
        return applyConst(dictMonoid.Semigroup0());
    }, function(v) {
        return Data_Monoid.mempty(dictMonoid);
    });
};
module.exports = {
    Const: Const,
    newtypeConst: newtypeConst,
    eqConst: eqConst,
    eq1Const: eq1Const,
    ordConst: ordConst,
    ord1Const: ord1Const,
    boundedConst: boundedConst,
    showConst: showConst,
    semigroupoidConst: semigroupoidConst,
    semigroupConst: semigroupConst,
    monoidConst: monoidConst,
    semiringConst: semiringConst,
    ringConst: ringConst,
    euclideanRingConst: euclideanRingConst,
    commutativeRingConst: commutativeRingConst,
    heytingAlgebraConst: heytingAlgebraConst,
    booleanAlgebraConst: booleanAlgebraConst,
    functorConst: functorConst,
    invariantConst: invariantConst,
    applyConst: applyConst,
    applicativeConst: applicativeConst
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Semigroupoid/index.js":"fSgEH","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Functor.Invariant/index.js":"hYAzT","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW"}],"8AoSo":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Product = function(x) {
    return x;
};
var showProduct = function(dictShow) {
    return function(dictShow1) {
        return new Data_Show.Show(function(v) {
            return "(product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var product = function(fa) {
    return function(ga) {
        return new Data_Tuple.Tuple(fa, ga);
    };
};
var newtypeProduct = new Data_Newtype.Newtype(function() {
    return undefined;
});
var functorProduct = function(dictFunctor) {
    return function(dictFunctor1) {
        return new Data_Functor.Functor(function(f) {
            return function(v) {
                return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
            };
        });
    };
};
var eq1Product = function(dictEq1) {
    return function(dictEq11) {
        return new Data_Eq.Eq1(function(dictEq) {
            return function(v) {
                return function(v1) {
                    return Data_Eq.eq1(dictEq1)(dictEq)(v.value0)(v1.value0) && Data_Eq.eq1(dictEq11)(dictEq)(v.value1)(v1.value1);
                };
            };
        });
    };
};
var eqProduct = function(dictEq1) {
    return function(dictEq11) {
        return function(dictEq) {
            return new Data_Eq.Eq(Data_Eq.eq1(eq1Product(dictEq1)(dictEq11))(dictEq));
        };
    };
};
var ord1Product = function(dictOrd1) {
    return function(dictOrd11) {
        return new Data_Ord.Ord1(function() {
            return eq1Product(dictOrd1.Eq10())(dictOrd11.Eq10());
        }, function(dictOrd) {
            return function(v) {
                return function(v1) {
                    var v2 = Data_Ord.compare1(dictOrd1)(dictOrd)(v.value0)(v1.value0);
                    if (v2 instanceof Data_Ordering.EQ) return Data_Ord.compare1(dictOrd11)(dictOrd)(v.value1)(v1.value1);
                    return v2;
                };
            };
        });
    };
};
var ordProduct = function(dictOrd1) {
    return function(dictOrd11) {
        return function(dictOrd) {
            return new Data_Ord.Ord(function() {
                return eqProduct(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
            }, Data_Ord.compare1(ord1Product(dictOrd1)(dictOrd11))(dictOrd));
        };
    };
};
var bihoistProduct = function(natF) {
    return function(natG) {
        return function(v) {
            return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(natF)(natG)(v);
        };
    };
};
var applyProduct = function(dictApply) {
    return function(dictApply1) {
        return new Control_Apply.Apply(function() {
            return functorProduct(dictApply.Functor0())(dictApply1.Functor0());
        }, function(v) {
            return function(v1) {
                return product(Control_Apply.apply(dictApply)(v.value0)(v1.value0))(Control_Apply.apply(dictApply1)(v.value1)(v1.value1));
            };
        });
    };
};
var bindProduct = function(dictBind) {
    return function(dictBind1) {
        return new Control_Bind.Bind(function() {
            return applyProduct(dictBind.Apply0())(dictBind1.Apply0());
        }, function(v) {
            return function(f) {
                return product(Control_Bind.bind(dictBind)(v.value0)(function() {
                    var $67 = Data_Newtype.unwrap();
                    return function($68) {
                        return Data_Tuple.fst($67(f($68)));
                    };
                }()))(Control_Bind.bind(dictBind1)(v.value1)(function() {
                    var $69 = Data_Newtype.unwrap();
                    return function($70) {
                        return Data_Tuple.snd($69(f($70)));
                    };
                }()));
            };
        });
    };
};
var applicativeProduct = function(dictApplicative) {
    return function(dictApplicative1) {
        return new Control_Applicative.Applicative(function() {
            return applyProduct(dictApplicative.Apply0())(dictApplicative1.Apply0());
        }, function(a) {
            return product(Control_Applicative.pure(dictApplicative)(a))(Control_Applicative.pure(dictApplicative1)(a));
        });
    };
};
var monadProduct = function(dictMonad) {
    return function(dictMonad1) {
        return new Control_Monad.Monad(function() {
            return applicativeProduct(dictMonad.Applicative0())(dictMonad1.Applicative0());
        }, function() {
            return bindProduct(dictMonad.Bind1())(dictMonad1.Bind1());
        });
    };
};
module.exports = {
    Product: Product,
    product: product,
    bihoistProduct: bihoistProduct,
    newtypeProduct: newtypeProduct,
    eqProduct: eqProduct,
    eq1Product: eq1Product,
    ordProduct: ordProduct,
    ord1Product: ord1Product,
    showProduct: showProduct,
    functorProduct: functorProduct,
    applyProduct: applyProduct,
    applicativeProduct: applicativeProduct,
    bindProduct: bindProduct,
    monadProduct: monadProduct
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Data.Bifunctor/index.js":"4aJ07","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW","../Data.Tuple/index.js":"eOBbM"}],"kKmFe":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Last = function(x) {
    return x;
};
var showLast = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupLast = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        if (v1 instanceof Data_Maybe.Just) return v1;
        if (v1 instanceof Data_Maybe.Nothing) return v;
        throw new Error("Failed pattern match at Data.Maybe.Last (line 52, column 1 - line 54, column 36): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var ordLast = function(dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1Last = Data_Maybe.ord1Maybe;
var newtypeLast = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monoidLast = new Data_Monoid.Monoid(function() {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;
var eqLast = function(dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1Last = Data_Maybe.eq1Maybe;
var boundedLast = function(dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
var altLast = new Control_Alt.Alt(function() {
    return functorLast;
}, Data_Semigroup.append(semigroupLast));
var plusLast = new Control_Plus.Plus(function() {
    return altLast;
}, Data_Monoid.mempty(monoidLast));
var alternativeLast = new Control_Alternative.Alternative(function() {
    return applicativeLast;
}, function() {
    return plusLast;
});
var monadZeroLast = new Control_MonadZero.MonadZero(function() {
    return alternativeLast;
}, function() {
    return monadLast;
}, function() {
    return undefined;
});
module.exports = {
    Last: Last,
    newtypeLast: newtypeLast,
    eqLast: eqLast,
    eq1Last: eq1Last,
    ordLast: ordLast,
    ord1Last: ord1Last,
    boundedLast: boundedLast,
    functorLast: functorLast,
    invariantLast: invariantLast,
    applyLast: applyLast,
    applicativeLast: applicativeLast,
    bindLast: bindLast,
    monadLast: monadLast,
    extendLast: extendLast,
    showLast: showLast,
    semigroupLast: semigroupLast,
    monoidLast: monoidLast,
    altLast: altLast,
    plusLast: plusLast,
    alternativeLast: alternativeLast,
    monadZeroLast: monadZeroLast
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW"}],"gMw6U":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Additive = function(x) {
    return x;
};
var showAdditive = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupAdditive = function(dictSemiring) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return Data_Semiring.add(dictSemiring)(v)(v1);
        };
    });
};
var ordAdditive = function(dictOrd) {
    return dictOrd;
};
var monoidAdditive = function(dictSemiring) {
    return new Data_Monoid.Monoid(function() {
        return semigroupAdditive(dictSemiring);
    }, Data_Semiring.zero(dictSemiring));
};
var functorAdditive = new Data_Functor.Functor(function(f) {
    return function(m) {
        return f(m);
    };
});
var eqAdditive = function(dictEq) {
    return dictEq;
};
var eq1Additive = new Data_Eq.Eq1(function(dictEq) {
    return Data_Eq.eq(eqAdditive(dictEq));
});
var ord1Additive = new Data_Ord.Ord1(function() {
    return eq1Additive;
}, function(dictOrd) {
    return Data_Ord.compare(ordAdditive(dictOrd));
});
var boundedAdditive = function(dictBounded) {
    return dictBounded;
};
var applyAdditive = new Control_Apply.Apply(function() {
    return functorAdditive;
}, function(v) {
    return function(v1) {
        return v(v1);
    };
});
var bindAdditive = new Control_Bind.Bind(function() {
    return applyAdditive;
}, function(v) {
    return function(f) {
        return f(v);
    };
});
var applicativeAdditive = new Control_Applicative.Applicative(function() {
    return applyAdditive;
}, Additive);
var monadAdditive = new Control_Monad.Monad(function() {
    return applicativeAdditive;
}, function() {
    return bindAdditive;
});
module.exports = {
    Additive: Additive,
    eqAdditive: eqAdditive,
    eq1Additive: eq1Additive,
    ordAdditive: ordAdditive,
    ord1Additive: ord1Additive,
    boundedAdditive: boundedAdditive,
    showAdditive: showAdditive,
    functorAdditive: functorAdditive,
    applyAdditive: applyAdditive,
    applicativeAdditive: applicativeAdditive,
    bindAdditive: bindAdditive,
    monadAdditive: monadAdditive,
    semigroupAdditive: semigroupAdditive,
    monoidAdditive: monoidAdditive
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Semiring/index.js":"39btI","../Data.Show/index.js":"b6tNW"}],"ks234":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Multiplicative = function(x) {
    return x;
};
var showMultiplicative = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMultiplicative = function(dictSemiring) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return Data_Semiring.mul(dictSemiring)(v)(v1);
        };
    });
};
var ordMultiplicative = function(dictOrd) {
    return dictOrd;
};
var monoidMultiplicative = function(dictSemiring) {
    return new Data_Monoid.Monoid(function() {
        return semigroupMultiplicative(dictSemiring);
    }, Data_Semiring.one(dictSemiring));
};
var functorMultiplicative = new Data_Functor.Functor(function(f) {
    return function(m) {
        return f(m);
    };
});
var eqMultiplicative = function(dictEq) {
    return dictEq;
};
var eq1Multiplicative = new Data_Eq.Eq1(function(dictEq) {
    return Data_Eq.eq(eqMultiplicative(dictEq));
});
var ord1Multiplicative = new Data_Ord.Ord1(function() {
    return eq1Multiplicative;
}, function(dictOrd) {
    return Data_Ord.compare(ordMultiplicative(dictOrd));
});
var boundedMultiplicative = function(dictBounded) {
    return dictBounded;
};
var applyMultiplicative = new Control_Apply.Apply(function() {
    return functorMultiplicative;
}, function(v) {
    return function(v1) {
        return v(v1);
    };
});
var bindMultiplicative = new Control_Bind.Bind(function() {
    return applyMultiplicative;
}, function(v) {
    return function(f) {
        return f(v);
    };
});
var applicativeMultiplicative = new Control_Applicative.Applicative(function() {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Control_Monad.Monad(function() {
    return applicativeMultiplicative;
}, function() {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative,
    eqMultiplicative: eqMultiplicative,
    eq1Multiplicative: eq1Multiplicative,
    ordMultiplicative: ordMultiplicative,
    ord1Multiplicative: ord1Multiplicative,
    boundedMultiplicative: boundedMultiplicative,
    showMultiplicative: showMultiplicative,
    functorMultiplicative: functorMultiplicative,
    applyMultiplicative: applyMultiplicative,
    applicativeMultiplicative: applicativeMultiplicative,
    bindMultiplicative: bindMultiplicative,
    monadMultiplicative: monadMultiplicative,
    semigroupMultiplicative: semigroupMultiplicative,
    monoidMultiplicative: monoidMultiplicative
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Semiring/index.js":"39btI","../Data.Show/index.js":"b6tNW"}],"gN98F":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
module.exports = {
};

},{}],"1K5e2":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var StateR = function(x) {
    return x;
};
var StateL = function(x) {
    return x;
};
var stateR = function(v) {
    return v;
};
var stateL = function(v) {
    return v;
};
var functorStateR = new Data_Functor.Functor(function(f) {
    return function(k) {
        return function(s) {
            var v = stateR(k)(s);
            return {
                accum: v.accum,
                value: f(v.value)
            };
        };
    };
});
var functorStateL = new Data_Functor.Functor(function(f) {
    return function(k) {
        return function(s) {
            var v = stateL(k)(s);
            return {
                accum: v.accum,
                value: f(v.value)
            };
        };
    };
});
var applyStateR = new Control_Apply.Apply(function() {
    return functorStateR;
}, function(f) {
    return function(x) {
        return function(s) {
            var v = stateR(x)(s);
            var v1 = stateR(f)(v.accum);
            return {
                accum: v1.accum,
                value: v1.value(v.value)
            };
        };
    };
});
var applyStateL = new Control_Apply.Apply(function() {
    return functorStateL;
}, function(f) {
    return function(x) {
        return function(s) {
            var v = stateL(f)(s);
            var v1 = stateL(x)(v.accum);
            return {
                accum: v1.accum,
                value: v.value(v1.value)
            };
        };
    };
});
var applicativeStateR = new Control_Applicative.Applicative(function() {
    return applyStateR;
}, function(a) {
    return function(s) {
        return {
            accum: s,
            value: a
        };
    };
});
var applicativeStateL = new Control_Applicative.Applicative(function() {
    return applyStateL;
}, function(a) {
    return function(s) {
        return {
            accum: s,
            value: a
        };
    };
});
module.exports = {
    StateL: StateL,
    stateL: stateL,
    StateR: StateR,
    stateR: stateR,
    functorStateL: functorStateL,
    applyStateL: applyStateL,
    applicativeStateL: applicativeStateL,
    functorStateR: functorStateR,
    applyStateR: applyStateR,
    applicativeStateR: applicativeStateR
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Data.Functor/index.js":"iy1jO"}],"4CSfE":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Seconds = function(x) {
    return x;
};
var Minutes = function(x) {
    return x;
};
var Milliseconds = function(x) {
    return x;
};
var Hours = function(x) {
    return x;
};
var Duration = function(fromDuration, toDuration) {
    this.fromDuration = fromDuration;
    this.toDuration = toDuration;
};
var Days = function(x) {
    return x;
};
var toDuration = function(dict) {
    return dict.toDuration;
};
var showSeconds = new Data_Show.Show(function(v) {
    return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMinutes = new Data_Show.Show(function(v) {
    return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMilliseconds = new Data_Show.Show(function(v) {
    return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showHours = new Data_Show.Show(function(v) {
    return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showDays = new Data_Show.Show(function(v) {
    return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var semigroupSeconds = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        return v + v1;
    };
});
var semigroupMinutes = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        return v + v1;
    };
});
var semigroupMilliseconds = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        return v + v1;
    };
});
var semigroupHours = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        return v + v1;
    };
});
var semigroupDays = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        return v + v1;
    };
});
var ordSeconds = Data_Ord.ordNumber;
var ordMinutes = Data_Ord.ordNumber;
var ordMilliseconds = Data_Ord.ordNumber;
var ordHours = Data_Ord.ordNumber;
var ordDays = Data_Ord.ordNumber;
var newtypeSeconds = new Data_Newtype.Newtype(function() {
    return undefined;
});
var newtypeMinutes = new Data_Newtype.Newtype(function() {
    return undefined;
});
var newtypeMilliseconds = new Data_Newtype.Newtype(function() {
    return undefined;
});
var newtypeHours = new Data_Newtype.Newtype(function() {
    return undefined;
});
var newtypeDays = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monoidSeconds = new Data_Monoid.Monoid(function() {
    return semigroupSeconds;
}, 0);
var monoidMinutes = new Data_Monoid.Monoid(function() {
    return semigroupMinutes;
}, 0);
var monoidMilliseconds = new Data_Monoid.Monoid(function() {
    return semigroupMilliseconds;
}, 0);
var monoidHours = new Data_Monoid.Monoid(function() {
    return semigroupHours;
}, 0);
var monoidDays = new Data_Monoid.Monoid(function() {
    return semigroupDays;
}, 0);
var fromDuration = function(dict) {
    return dict.fromDuration;
};
var negateDuration = function(dictDuration) {
    var $41 = toDuration(dictDuration);
    var $42 = Data_Newtype.over()()(Milliseconds)(Data_Ring.negate(Data_Ring.ringNumber));
    var $43 = fromDuration(dictDuration);
    return function($44) {
        return $41($42($43($44)));
    };
};
var eqSeconds = Data_Eq.eqNumber;
var eqMinutes = Data_Eq.eqNumber;
var eqMilliseconds = Data_Eq.eqNumber;
var eqHours = Data_Eq.eqNumber;
var eqDays = Data_Eq.eqNumber;
var durationSeconds = new Duration(Data_Newtype.over()()(Seconds)(function(v) {
    return v * 1000;
}), Data_Newtype.over()()(Milliseconds)(function(v) {
    return v / 1000;
}));
var durationMinutes = new Duration(Data_Newtype.over()()(Minutes)(function(v) {
    return v * 60000;
}), Data_Newtype.over()()(Milliseconds)(function(v) {
    return v / 60000;
}));
var durationMilliseconds = new Duration(Control_Category.identity(Control_Category.categoryFn), Control_Category.identity(Control_Category.categoryFn));
var durationHours = new Duration(Data_Newtype.over()()(Hours)(function(v) {
    return v * 3600000;
}), Data_Newtype.over()()(Milliseconds)(function(v) {
    return v / 3600000;
}));
var durationDays = new Duration(Data_Newtype.over()()(Days)(function(v) {
    return v * 86400000;
}), Data_Newtype.over()()(Milliseconds)(function(v) {
    return v / 86400000;
}));
var convertDuration = function(dictDuration) {
    return function(dictDuration1) {
        var $45 = toDuration(dictDuration1);
        var $46 = fromDuration(dictDuration);
        return function($47) {
            return $45($46($47));
        };
    };
};
module.exports = {
    fromDuration: fromDuration,
    toDuration: toDuration,
    Milliseconds: Milliseconds,
    Seconds: Seconds,
    Minutes: Minutes,
    Hours: Hours,
    Days: Days,
    Duration: Duration,
    convertDuration: convertDuration,
    negateDuration: negateDuration,
    newtypeMilliseconds: newtypeMilliseconds,
    eqMilliseconds: eqMilliseconds,
    ordMilliseconds: ordMilliseconds,
    semigroupMilliseconds: semigroupMilliseconds,
    monoidMilliseconds: monoidMilliseconds,
    showMilliseconds: showMilliseconds,
    newtypeSeconds: newtypeSeconds,
    eqSeconds: eqSeconds,
    ordSeconds: ordSeconds,
    semigroupSeconds: semigroupSeconds,
    monoidSeconds: monoidSeconds,
    showSeconds: showSeconds,
    newtypeMinutes: newtypeMinutes,
    eqMinutes: eqMinutes,
    ordMinutes: ordMinutes,
    semigroupMinutes: semigroupMinutes,
    monoidMinutes: monoidMinutes,
    showMinutes: showMinutes,
    newtypeHours: newtypeHours,
    eqHours: eqHours,
    ordHours: ordHours,
    semigroupHours: semigroupHours,
    monoidHours: monoidHours,
    showHours: showHours,
    newtypeDays: newtypeDays,
    eqDays: eqDays,
    ordDays: ordDays,
    semigroupDays: semigroupDays,
    monoidDays: monoidDays,
    showDays: showDays,
    durationMilliseconds: durationMilliseconds,
    durationSeconds: durationSeconds,
    durationMinutes: durationMinutes,
    durationHours: durationHours,
    durationDays: durationDays
};

},{"../Control.Category/index.js":"dfcPK","../Data.Eq/index.js":"c3b8F","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Ring/index.js":"2x2oG","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW"}],"7GTyi":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    unsafePerformEffect: $foreign.unsafePerformEffect
};

},{"./foreign.js":"7pgeM"}],"7pgeM":[function(require,module,exports) {
"use strict";
exports.unsafePerformEffect = function(f) {
    return f();
};

},{}],"fE2bk":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Partial = require("../Partial/index.js");
var unsafePartial = $foreign["_unsafePartial"];
var unsafeCrashWith = function(msg) {
    return unsafePartial(function(dictPartial) {
        return Partial.crashWith()(msg);
    });
};
module.exports = {
    unsafePartial: unsafePartial,
    unsafeCrashWith: unsafeCrashWith
};

},{"./foreign.js":"903so","../Partial/index.js":"9VKad"}],"903so":[function(require,module,exports) {
"use strict";
// module Partial.Unsafe
exports._unsafePartial = function(f) {
    return f();
};

},{}],"9VKad":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var crashWith = function(dictPartial) {
    return $foreign["_crashWith"];
};
var crash = function(dictPartial) {
    return crashWith()("Partial.crash: partial function");
};
module.exports = {
    crash: crash,
    crashWith: crashWith
};

},{"./foreign.js":"bY6Vs"}],"bY6Vs":[function(require,module,exports) {
"use strict";
// module Partial
exports._crashWith = function(msg) {
    throw new Error(msg);
};

},{}],"csHnk":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML = require("../Web.HTML/index.js");
var Web_HTML_Event_EventTypes = require("../Web.HTML.Event.EventTypes/index.js");
var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");
var Web_HTML_HTMLDocument_ReadyState = require("../Web.HTML.HTMLDocument.ReadyState/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_Window = require("../Web.HTML.Window/index.js");
var selectElement = function(query) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(function() {
        var $2 = Web_DOM_ParentNode.querySelector(query);
        return function($3) {
            return $2(Web_HTML_HTMLDocument.toParentNode($3));
        };
    }())(Web_HTML_Window.document))(Web_HTML.window)))(function(mel) {
        return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(mel));
    });
};
var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
var awaitLoad = Effect_Aff.makeAff(function(callback) {
    return function __do() {
        var rs = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();
        if (rs instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
            var et = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
            var listener = Web_Event_EventTarget.eventListener(function(v) {
                return callback(new Data_Either.Right(Data_Unit.unit));
            })();
            Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et)();
            return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et));
        }
        callback(new Data_Either.Right(Data_Unit.unit))();
        return Effect_Aff.nonCanceler;
    };
});
var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function() {
    return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function(body) {
        return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(body);
    });
});
module.exports = {
    awaitLoad: awaitLoad,
    awaitBody: awaitBody,
    selectElement: selectElement,
    runHalogenAff: runHalogenAff
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Bind/index.js":"7Sory","../Control.Monad.Error.Class/index.js":"acXO9","../Data.Either/index.js":"3WZha","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Unit/index.js":"d7oKp","../Effect/index.js":"bKbtZ","../Effect.Aff/index.js":"3YiSJ","../Effect.Class/index.js":"53rRA","../Effect.Exception/index.js":"3J2RH","../Web.DOM.ParentNode/index.js":"6B7kO","../Web.Event.EventTarget/index.js":"6hdTa","../Web.HTML/index.js":"gCjev","../Web.HTML.Event.EventTypes/index.js":"6J0bq","../Web.HTML.HTMLDocument/index.js":"i3hAZ","../Web.HTML.HTMLDocument.ReadyState/index.js":"aBOmI","../Web.HTML.HTMLElement/index.js":"60xVV","../Web.HTML.Window/index.js":"iseED"}],"6B7kO":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Effect = require("../Effect/index.js");
var QuerySelector = function(x) {
    return x;
};
var querySelector = function(qs) {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    var $1 = $foreign["_querySelector"](qs);
    return function($2) {
        return $0($1($2));
    };
};
var ordQuerySelector = Data_Ord.ordString;
var newtypeQuerySelector = new Data_Newtype.Newtype(function() {
    return undefined;
});
var lastElementChild = function() {
    var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($4) {
        return $3($foreign["_lastElementChild"]($4));
    };
}();
var firstElementChild = function() {
    var $5 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($6) {
        return $5($foreign["_firstElementChild"]($6));
    };
}();
var eqQuerySelector = Data_Eq.eqString;
module.exports = {
    firstElementChild: firstElementChild,
    lastElementChild: lastElementChild,
    QuerySelector: QuerySelector,
    querySelector: querySelector,
    eqQuerySelector: eqQuerySelector,
    ordQuerySelector: ordQuerySelector,
    newtypeQuerySelector: newtypeQuerySelector,
    children: $foreign.children,
    childElementCount: $foreign.childElementCount,
    querySelectorAll: $foreign.querySelectorAll
};

},{"./foreign.js":"k50rk","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Newtype/index.js":"czJbt","../Data.Nullable/index.js":"5SdGN","../Data.Ord/index.js":"f14nh","../Effect/index.js":"bKbtZ"}],"k50rk":[function(require,module,exports) {
"use strict";
var getEffProp = function(name) {
    return function(node) {
        return function() {
            return node[name];
        };
    };
};
exports.children = getEffProp("children");
exports._firstElementChild = getEffProp("firstElementChild");
exports._lastElementChild = getEffProp("lastElementChild");
exports.childElementCount = getEffProp("childElementCount");
exports._querySelector = function(selector) {
    return function(node) {
        return function() {
            return node.querySelector(selector);
        };
    };
};
exports.querySelectorAll = function(selector) {
    return function(node) {
        return function() {
            return node.querySelectorAll(selector);
        };
    };
};

},{}],"5SdGN":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function(n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function(dictShow) {
    return new Data_Show.Show(function() {
        var $5 = Data_Maybe.maybe("null")(Data_Show.show(dictShow));
        return function($6) {
            return $5(toMaybe($6));
        };
    }());
};
var eqNullable = function(dictEq) {
    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};
var ordNullable = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqNullable(dictOrd.Eq0());
    }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};
var eq1Nullable = new Data_Eq.Eq1(function(dictEq) {
    return Data_Eq.eq(eqNullable(dictEq));
});
var ord1Nullable = new Data_Ord.Ord1(function() {
    return eq1Nullable;
}, function(dictOrd) {
    return Data_Ord.compare(ordNullable(dictOrd));
});
module.exports = {
    toMaybe: toMaybe,
    toNullable: toNullable,
    showNullable: showNullable,
    eqNullable: eqNullable,
    eq1Nullable: eq1Nullable,
    ordNullable: ordNullable,
    ord1Nullable: ord1Nullable,
    "null": $foreign["null"],
    notNull: $foreign.notNull
};

},{"./foreign.js":"k8imN","../Data.Eq/index.js":"c3b8F","../Data.Function/index.js":"cuwEt","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Show/index.js":"b6tNW"}],"k8imN":[function(require,module,exports) {
/* eslint-disable no-eq-null, eqeqeq */ "use strict";
exports["null"] = null;
exports.nullable = function(a, r, f) {
    return a == null ? r : f(a);
};
exports.notNull = function(x) {
    return x;
};

},{}],"6hdTa":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Web_Event_Internal_Types = require("../Web.Event.Internal.Types/index.js");
module.exports = {
    eventListener: $foreign.eventListener,
    addEventListener: $foreign.addEventListener,
    removeEventListener: $foreign.removeEventListener,
    dispatchEvent: $foreign.dispatchEvent
};

},{"./foreign.js":"hdaFv","../Web.Event.Internal.Types/index.js":"iitC1"}],"hdaFv":[function(require,module,exports) {
"use strict";
exports.eventListener = function(fn) {
    return function() {
        return function(event) {
            return fn(event)();
        };
    };
};
exports.addEventListener = function(type) {
    return function(listener) {
        return function(useCapture) {
            return function(target) {
                return function() {
                    return target.addEventListener(type, listener, useCapture);
                };
            };
        };
    };
};
exports.removeEventListener = function(type) {
    return function(listener) {
        return function(useCapture) {
            return function(target) {
                return function() {
                    return target.removeEventListener(type, listener, useCapture);
                };
            };
        };
    };
};
exports.dispatchEvent = function(event) {
    return function(target) {
        return function() {
            return target.dispatchEvent(event);
        };
    };
};

},{}],"iitC1":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
module.exports = {
};

},{}],"gCjev":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Web_HTML_Common = require("../Web.HTML.Common/index.js");
var Web_HTML_HTMLAnchorElement = require("../Web.HTML.HTMLAnchorElement/index.js");
var Web_HTML_HTMLAreaElement = require("../Web.HTML.HTMLAreaElement/index.js");
var Web_HTML_HTMLAudioElement = require("../Web.HTML.HTMLAudioElement/index.js");
var Web_HTML_HTMLBRElement = require("../Web.HTML.HTMLBRElement/index.js");
var Web_HTML_HTMLBaseElement = require("../Web.HTML.HTMLBaseElement/index.js");
var Web_HTML_HTMLBodyElement = require("../Web.HTML.HTMLBodyElement/index.js");
var Web_HTML_HTMLButtonElement = require("../Web.HTML.HTMLButtonElement/index.js");
var Web_HTML_HTMLCanvasElement = require("../Web.HTML.HTMLCanvasElement/index.js");
var Web_HTML_HTMLDListElement = require("../Web.HTML.HTMLDListElement/index.js");
var Web_HTML_HTMLDataElement = require("../Web.HTML.HTMLDataElement/index.js");
var Web_HTML_HTMLDataListElement = require("../Web.HTML.HTMLDataListElement/index.js");
var Web_HTML_HTMLDivElement = require("../Web.HTML.HTMLDivElement/index.js");
var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLEmbedElement = require("../Web.HTML.HTMLEmbedElement/index.js");
var Web_HTML_HTMLFieldSetElement = require("../Web.HTML.HTMLFieldSetElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_HTML_HTMLHRElement = require("../Web.HTML.HTMLHRElement/index.js");
var Web_HTML_HTMLHeadElement = require("../Web.HTML.HTMLHeadElement/index.js");
var Web_HTML_HTMLHeadingElement = require("../Web.HTML.HTMLHeadingElement/index.js");
var Web_HTML_HTMLIFrameElement = require("../Web.HTML.HTMLIFrameElement/index.js");
var Web_HTML_HTMLImageElement = require("../Web.HTML.HTMLImageElement/index.js");
var Web_HTML_HTMLInputElement = require("../Web.HTML.HTMLInputElement/index.js");
var Web_HTML_HTMLKeygenElement = require("../Web.HTML.HTMLKeygenElement/index.js");
var Web_HTML_HTMLLIElement = require("../Web.HTML.HTMLLIElement/index.js");
var Web_HTML_HTMLLabelElement = require("../Web.HTML.HTMLLabelElement/index.js");
var Web_HTML_HTMLLegendElement = require("../Web.HTML.HTMLLegendElement/index.js");
var Web_HTML_HTMLLinkElement = require("../Web.HTML.HTMLLinkElement/index.js");
var Web_HTML_HTMLMapElement = require("../Web.HTML.HTMLMapElement/index.js");
var Web_HTML_HTMLMediaElement = require("../Web.HTML.HTMLMediaElement/index.js");
var Web_HTML_HTMLMetaElement = require("../Web.HTML.HTMLMetaElement/index.js");
var Web_HTML_HTMLMeterElement = require("../Web.HTML.HTMLMeterElement/index.js");
var Web_HTML_HTMLModElement = require("../Web.HTML.HTMLModElement/index.js");
var Web_HTML_HTMLOListElement = require("../Web.HTML.HTMLOListElement/index.js");
var Web_HTML_HTMLObjectElement = require("../Web.HTML.HTMLObjectElement/index.js");
var Web_HTML_HTMLOptGroupElement = require("../Web.HTML.HTMLOptGroupElement/index.js");
var Web_HTML_HTMLOptionElement = require("../Web.HTML.HTMLOptionElement/index.js");
var Web_HTML_HTMLOutputElement = require("../Web.HTML.HTMLOutputElement/index.js");
var Web_HTML_HTMLParagraphElement = require("../Web.HTML.HTMLParagraphElement/index.js");
var Web_HTML_HTMLParamElement = require("../Web.HTML.HTMLParamElement/index.js");
var Web_HTML_HTMLPreElement = require("../Web.HTML.HTMLPreElement/index.js");
var Web_HTML_HTMLProgressElement = require("../Web.HTML.HTMLProgressElement/index.js");
var Web_HTML_HTMLQuoteElement = require("../Web.HTML.HTMLQuoteElement/index.js");
var Web_HTML_HTMLScriptElement = require("../Web.HTML.HTMLScriptElement/index.js");
var Web_HTML_HTMLSelectElement = require("../Web.HTML.HTMLSelectElement/index.js");
var Web_HTML_HTMLSourceElement = require("../Web.HTML.HTMLSourceElement/index.js");
var Web_HTML_HTMLSpanElement = require("../Web.HTML.HTMLSpanElement/index.js");
var Web_HTML_HTMLStyleElement = require("../Web.HTML.HTMLStyleElement/index.js");
var Web_HTML_HTMLTableCaptionElement = require("../Web.HTML.HTMLTableCaptionElement/index.js");
var Web_HTML_HTMLTableCellElement = require("../Web.HTML.HTMLTableCellElement/index.js");
var Web_HTML_HTMLTableColElement = require("../Web.HTML.HTMLTableColElement/index.js");
var Web_HTML_HTMLTableDataCellElement = require("../Web.HTML.HTMLTableDataCellElement/index.js");
var Web_HTML_HTMLTableElement = require("../Web.HTML.HTMLTableElement/index.js");
var Web_HTML_HTMLTableHeaderCellElement = require("../Web.HTML.HTMLTableHeaderCellElement/index.js");
var Web_HTML_HTMLTableRowElement = require("../Web.HTML.HTMLTableRowElement/index.js");
var Web_HTML_HTMLTableSectionElement = require("../Web.HTML.HTMLTableSectionElement/index.js");
var Web_HTML_HTMLTemplateElement = require("../Web.HTML.HTMLTemplateElement/index.js");
var Web_HTML_HTMLTextAreaElement = require("../Web.HTML.HTMLTextAreaElement/index.js");
var Web_HTML_HTMLTimeElement = require("../Web.HTML.HTMLTimeElement/index.js");
var Web_HTML_HTMLTitleElement = require("../Web.HTML.HTMLTitleElement/index.js");
var Web_HTML_HTMLTrackElement = require("../Web.HTML.HTMLTrackElement/index.js");
var Web_HTML_HTMLUListElement = require("../Web.HTML.HTMLUListElement/index.js");
var Web_HTML_HTMLVideoElement = require("../Web.HTML.HTMLVideoElement/index.js");
var Web_HTML_History = require("../Web.HTML.History/index.js");
var Web_HTML_Location = require("../Web.HTML.Location/index.js");
var Web_HTML_Navigator = require("../Web.HTML.Navigator/index.js");
var Web_HTML_Window = require("../Web.HTML.Window/index.js");
module.exports = {
    window: $foreign.window
};

},{"./foreign.js":"20lYV","../Web.HTML.Common/index.js":"aewmj","../Web.HTML.HTMLAnchorElement/index.js":"4mgtg","../Web.HTML.HTMLAreaElement/index.js":"dHhWc","../Web.HTML.HTMLAudioElement/index.js":"cbS3r","../Web.HTML.HTMLBRElement/index.js":"1IbNW","../Web.HTML.HTMLBaseElement/index.js":"gN6WZ","../Web.HTML.HTMLBodyElement/index.js":"dHZdg","../Web.HTML.HTMLButtonElement/index.js":"e3Vzc","../Web.HTML.HTMLCanvasElement/index.js":"3Qeg6","../Web.HTML.HTMLDListElement/index.js":"ixOAC","../Web.HTML.HTMLDataElement/index.js":"bsNGl","../Web.HTML.HTMLDataListElement/index.js":"96NBb","../Web.HTML.HTMLDivElement/index.js":"1DRse","../Web.HTML.HTMLDocument/index.js":"i3hAZ","../Web.HTML.HTMLElement/index.js":"60xVV","../Web.HTML.HTMLEmbedElement/index.js":"ldKEb","../Web.HTML.HTMLFieldSetElement/index.js":"2mmBW","../Web.HTML.HTMLFormElement/index.js":"iHBDq","../Web.HTML.HTMLHRElement/index.js":"79Tb6","../Web.HTML.HTMLHeadElement/index.js":"vAdi2","../Web.HTML.HTMLHeadingElement/index.js":"cjBHf","../Web.HTML.HTMLIFrameElement/index.js":"bNsux","../Web.HTML.HTMLImageElement/index.js":"9L1B3","../Web.HTML.HTMLInputElement/index.js":"Bjhju","../Web.HTML.HTMLKeygenElement/index.js":"fJZU0","../Web.HTML.HTMLLIElement/index.js":"6eWUI","../Web.HTML.HTMLLabelElement/index.js":"685Kl","../Web.HTML.HTMLLegendElement/index.js":"8d0nT","../Web.HTML.HTMLLinkElement/index.js":"ecbYq","../Web.HTML.HTMLMapElement/index.js":"fLEsU","../Web.HTML.HTMLMediaElement/index.js":"ecVRM","../Web.HTML.HTMLMetaElement/index.js":"2fDGQ","../Web.HTML.HTMLMeterElement/index.js":"jKPoW","../Web.HTML.HTMLModElement/index.js":"8g4Ei","../Web.HTML.HTMLOListElement/index.js":"2Kcjk","../Web.HTML.HTMLObjectElement/index.js":"16oGE","../Web.HTML.HTMLOptGroupElement/index.js":"1lU57","../Web.HTML.HTMLOptionElement/index.js":"jqtvY","../Web.HTML.HTMLOutputElement/index.js":"9GxH3","../Web.HTML.HTMLParagraphElement/index.js":"dZrCO","../Web.HTML.HTMLParamElement/index.js":"3Rag3","../Web.HTML.HTMLPreElement/index.js":"ayV8r","../Web.HTML.HTMLProgressElement/index.js":"e7tIa","../Web.HTML.HTMLQuoteElement/index.js":"chA4R","../Web.HTML.HTMLScriptElement/index.js":"jEBOw","../Web.HTML.HTMLSelectElement/index.js":"9sf62","../Web.HTML.HTMLSourceElement/index.js":"56V2k","../Web.HTML.HTMLSpanElement/index.js":"2jL9G","../Web.HTML.HTMLStyleElement/index.js":"9Ut5o","../Web.HTML.HTMLTableCaptionElement/index.js":"hKgS6","../Web.HTML.HTMLTableCellElement/index.js":"hKXya","../Web.HTML.HTMLTableColElement/index.js":"hNsh0","../Web.HTML.HTMLTableDataCellElement/index.js":"bzY8K","../Web.HTML.HTMLTableElement/index.js":"cnlxN","../Web.HTML.HTMLTableHeaderCellElement/index.js":"30gPk","../Web.HTML.HTMLTableRowElement/index.js":"18flM","../Web.HTML.HTMLTableSectionElement/index.js":"9Qlvn","../Web.HTML.HTMLTemplateElement/index.js":"ch7hf","../Web.HTML.HTMLTextAreaElement/index.js":"8SJlL","../Web.HTML.HTMLTimeElement/index.js":"2Pq2s","../Web.HTML.HTMLTitleElement/index.js":"lJtFB","../Web.HTML.HTMLTrackElement/index.js":"69ol5","../Web.HTML.HTMLUListElement/index.js":"1YdOZ","../Web.HTML.HTMLVideoElement/index.js":"4mVrA","../Web.HTML.History/index.js":"ikHmg","../Web.HTML.Location/index.js":"fPPuY","../Web.HTML.Navigator/index.js":"hSYPo","../Web.HTML.Window/index.js":"iseED"}],"20lYV":[function(require,module,exports) {
"use strict";
exports.window = function() {
    return window;
};

},{}],"aewmj":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var PropName = function(x) {
    return x;
};
var ClassName = function(x) {
    return x;
};
var AttrName = function(x) {
    return x;
};
var ordPropName = Data_Ord.ordString;
var ordClassName = Data_Ord.ordString;
var ordAttrName = Data_Ord.ordString;
var newtypePropName = new Data_Newtype.Newtype(function() {
    return undefined;
});
var newtypeClassName = new Data_Newtype.Newtype(function() {
    return undefined;
});
var newtypeAttrName = new Data_Newtype.Newtype(function() {
    return undefined;
});
var eqPropName = Data_Eq.eqString;
var eqClassName = Data_Eq.eqString;
var eqAttrName = Data_Eq.eqString;
module.exports = {
    PropName: PropName,
    AttrName: AttrName,
    ClassName: ClassName,
    newtypePropName: newtypePropName,
    eqPropName: eqPropName,
    ordPropName: ordPropName,
    newtypeAttrName: newtypeAttrName,
    eqAttrName: eqAttrName,
    ordAttrName: ordAttrName,
    newtypeClassName: newtypeClassName,
    eqClassName: eqClassName,
    ordClassName: ordClassName
};

},{"../Data.Eq/index.js":"c3b8F","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh"}],"4mgtg":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLHyperlinkElementUtils = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    toHTMLHyperlinkElementUtils: toHTMLHyperlinkElementUtils,
    target: $foreign.target,
    setTarget: $foreign.setTarget,
    download: $foreign.download,
    setDownload: $foreign.setDownload,
    rel: $foreign.rel,
    setRel: $foreign.setRel,
    rev: $foreign.rev,
    setRev: $foreign.setRev,
    relList: $foreign.relList,
    hreflang: $foreign.hreflang,
    setHreflang: $foreign.setHreflang,
    type_: $foreign.type_,
    setType: $foreign.setType,
    text: $foreign.text,
    setText: $foreign.setText
};

},{"./foreign.js":"g3M9Q","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"g3M9Q":[function(require,module,exports) {
"use strict";
exports.target = function(a) {
    return function() {
        return a.target;
    };
};
exports.setTarget = function(target) {
    return function(a) {
        return function() {
            a.target = target;
        };
    };
};
// ----------------------------------------------------------------------------
exports.download = function(a) {
    return function() {
        return a.download;
    };
};
exports.setDownload = function(download) {
    return function(a) {
        return function() {
            a.download = download;
        };
    };
};
// ----------------------------------------------------------------------------
exports.rel = function(a) {
    return function() {
        return a.rel;
    };
};
exports.setRel = function(rel) {
    return function(a) {
        return function() {
            a.rel = rel;
        };
    };
};
// ----------------------------------------------------------------------------
exports.rev = function(a) {
    return function() {
        return a.rev;
    };
};
exports.setRev = function(rev) {
    return function(a) {
        return function() {
            a.rev = rev;
        };
    };
};
// ----------------------------------------------------------------------------
exports.relList = function(a) {
    return function() {
        return a.relList;
    };
};
// ----------------------------------------------------------------------------
exports.hreflang = function(a) {
    return function() {
        return a.hreflang;
    };
};
exports.setHreflang = function(hreflang) {
    return function(a) {
        return function() {
            a.hreflang = hreflang;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(a) {
    return function() {
        return a.type;
    };
};
exports.setType = function(type) {
    return function(a) {
        return function() {
            a.type = type;
        };
    };
};
// ----------------------------------------------------------------------------
exports.text = function(a) {
    return function() {
        return a.text;
    };
};
exports.setText = function(text) {
    return function(a) {
        return function() {
            a.text = text;
        };
    };
};

},{}],"1vIWP":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var unsafeReadProtoTagged = function(name) {
    return function(value) {
        return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
    };
};
module.exports = {
    unsafeReadProtoTagged: unsafeReadProtoTagged
};

},{"./foreign.js":"la4Ry","../Data.Maybe/index.js":"ePH81"}],"la4Ry":[function(require,module,exports) {
"use strict";
exports._unsafeReadProtoTagged = function(nothing, just, name, value) {
    if (typeof window !== "undefined") {
        var ty = window[name];
        if (ty != null && value instanceof ty) return just(value);
    }
    var obj = value;
    while(obj != null){
        var proto = Object.getPrototypeOf(obj);
        var constructorName = proto.constructor.name;
        if (constructorName === name) return just(value);
        else if (constructorName === "Object") return nothing;
        obj = proto;
    }
    return nothing;
};

},{}],"dHhWc":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    alt: $foreign.alt,
    setAlt: $foreign.setAlt,
    coords: $foreign.coords,
    setCoords: $foreign.setCoords,
    shape: $foreign.shape,
    setShape: $foreign.setShape,
    target: $foreign.target,
    setTarget: $foreign.setTarget,
    download: $foreign.download,
    setDownload: $foreign.setDownload,
    rel: $foreign.rel,
    setRel: $foreign.setRel,
    relList: $foreign.relList,
    hreflang: $foreign.hreflang,
    setHreflang: $foreign.setHreflang,
    type_: $foreign.type_,
    setType: $foreign.setType
};

},{"./foreign.js":"1eUtf","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"1eUtf":[function(require,module,exports) {
"use strict";
exports.alt = function(area) {
    return function() {
        return area.alt;
    };
};
exports.setAlt = function(alt) {
    return function(area) {
        return function() {
            area.alt = alt;
        };
    };
};
// ----------------------------------------------------------------------------
exports.coords = function(area) {
    return function() {
        return area.coords;
    };
};
exports.setCoords = function(coords) {
    return function(area) {
        return function() {
            area.coords = coords;
        };
    };
};
// ----------------------------------------------------------------------------
exports.shape = function(area) {
    return function() {
        return area.shape;
    };
};
exports.setShape = function(shape) {
    return function(area) {
        return function() {
            area.shape = shape;
        };
    };
};
// ----------------------------------------------------------------------------
exports.target = function(area) {
    return function() {
        return area.target;
    };
};
exports.setTarget = function(target) {
    return function(area) {
        return function() {
            area.target = target;
        };
    };
};
// ----------------------------------------------------------------------------
exports.download = function(area) {
    return function() {
        return area.download;
    };
};
exports.setDownload = function(download) {
    return function(area) {
        return function() {
            area.download = download;
        };
    };
};
// ----------------------------------------------------------------------------
exports.rel = function(area) {
    return function() {
        return area.rel;
    };
};
exports.setRel = function(rel) {
    return function(area) {
        return function() {
            area.rel = rel;
        };
    };
};
// ----------------------------------------------------------------------------
exports.relList = function(area) {
    return function() {
        return area.relList;
    };
};
// ----------------------------------------------------------------------------
exports.hreflang = function(area) {
    return function() {
        return area.hreflang;
    };
};
exports.setHreflang = function(hreflang) {
    return function(area) {
        return function() {
            area.hreflang = hreflang;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(area) {
    return function() {
        return area.type;
    };
};
exports.setType = function(type) {
    return function(area) {
        return function() {
            area.type = type;
        };
    };
};

},{}],"cbS3r":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLMediaElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var create$prime = $foreign.createWithURL;
module.exports = {
    fromHTMLMediaElement: fromHTMLMediaElement,
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLMediaElement: toHTMLMediaElement,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    "create'": create$prime,
    create: $foreign.create
};

},{"./foreign.js":"idvuq","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"idvuq":[function(require,module,exports) {
"use strict";
exports.create = function() {
    return new Audio();
};
exports.createWithURL = function(url) {
    return function() {
        return new Audio(url);
    };
};

},{}],"1IbNW":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"gN6WZ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    href: $foreign.href,
    setHref: $foreign.setHref,
    target: $foreign.target,
    setTarget: $foreign.setTarget
};

},{"./foreign.js":"hvsLf","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"hvsLf":[function(require,module,exports) {
"use strict";
exports.href = function(base) {
    return function() {
        return base.href;
    };
};
exports.setHref = function(href) {
    return function(base) {
        return function() {
            base.href = href;
        };
    };
};
// ----------------------------------------------------------------------------
exports.target = function(base) {
    return function() {
        return base.target;
    };
};
exports.setTarget = function(target) {
    return function(base) {
        return function() {
            base.target = target;
        };
    };
};

},{}],"dHZdg":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"e3Vzc":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var form = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_form"]($1));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    formAction: $foreign.formAction,
    setFormAction: $foreign.setFormAction,
    formEnctype: $foreign.formEnctype,
    setFormEnctype: $foreign.setFormEnctype,
    formMethod: $foreign.formMethod,
    setFormMethod: $foreign.setFormMethod,
    formNoValidate: $foreign.formNoValidate,
    setFormNoValidate: $foreign.setFormNoValidate,
    formTarget: $foreign.formTarget,
    setFormTarget: $foreign.setFormTarget,
    name: $foreign.name,
    setName: $foreign.setName,
    type_: $foreign.type_,
    setType: $foreign.setType,
    value: $foreign.value,
    setValue: $foreign.setValue,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    reportValidity: $foreign.reportValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels
};

},{"./foreign.js":"fRcyC","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"fRcyC":[function(require,module,exports) {
"use strict";
exports.autofocus = function(button) {
    return function() {
        return button.autofocus;
    };
};
exports.setAutofocus = function(autofocus) {
    return function(button) {
        return function() {
            button.autofocus = autofocus;
        };
    };
};
// ----------------------------------------------------------------------------
exports.disabled = function(button) {
    return function() {
        return button.disabled;
    };
};
exports.setDisabled = function(disabled) {
    return function(button) {
        return function() {
            button.disabled = disabled;
        };
    };
};
// ----------------------------------------------------------------------------
exports._form = function(button) {
    return function() {
        return button.form;
    };
};
// ----------------------------------------------------------------------------
exports.formAction = function(button) {
    return function() {
        return button.formAction;
    };
};
exports.setFormAction = function(formAction) {
    return function(button) {
        return function() {
            button.formAction = formAction;
        };
    };
};
// ----------------------------------------------------------------------------
exports.formEnctype = function(button) {
    return function() {
        return button.formEnctype;
    };
};
exports.setFormEnctype = function(formEnctype) {
    return function(button) {
        return function() {
            button.formEnctype = formEnctype;
        };
    };
};
// ----------------------------------------------------------------------------
exports.formMethod = function(button) {
    return function() {
        return button.formMethod;
    };
};
exports.setFormMethod = function(formMethod) {
    return function(button) {
        return function() {
            button.formMethod = formMethod;
        };
    };
};
// ----------------------------------------------------------------------------
exports.formNoValidate = function(button) {
    return function() {
        return button.formNoValidate;
    };
};
exports.setFormNoValidate = function(formNoValidate) {
    return function(button) {
        return function() {
            button.formNoValidate = formNoValidate;
        };
    };
};
// ----------------------------------------------------------------------------
exports.formTarget = function(button) {
    return function() {
        return button.formTarget;
    };
};
exports.setFormTarget = function(formTarget) {
    return function(button) {
        return function() {
            button.formTarget = formTarget;
        };
    };
};
// ----------------------------------------------------------------------------
exports.name = function(button) {
    return function() {
        return button.name;
    };
};
exports.setName = function(name) {
    return function(button) {
        return function() {
            button.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(button) {
    return function() {
        return button.type;
    };
};
exports.setType = function(type) {
    return function(button) {
        return function() {
            button.type = type;
        };
    };
};
// ----------------------------------------------------------------------------
exports.value = function(button) {
    return function() {
        return button.value;
    };
};
exports.setValue = function(value) {
    return function(button) {
        return function() {
            button.value = value;
        };
    };
};
// ----------------------------------------------------------------------------
exports.willValidate = function(button) {
    return function() {
        return button.willValidate;
    };
};
// ----------------------------------------------------------------------------
exports.validity = function(button) {
    return function() {
        return button.validity;
    };
};
// ----------------------------------------------------------------------------
exports.validationMessage = function(button) {
    return function() {
        return button.validationMessage;
    };
};
// ----------------------------------------------------------------------------
exports.checkValidity = function(button) {
    return function() {
        return button.checkValidity();
    };
};
// ----------------------------------------------------------------------------
exports.reportValidity = function(button) {
    return function() {
        return button.reportValidity();
    };
};
// ----------------------------------------------------------------------------
exports.setCustomValidity = function(value) {
    return function(button) {
        return function() {
            button.setCustomValidity(value);
        };
    };
};
// ----------------------------------------------------------------------------
exports.labels = function(button) {
    return function() {
        return button.labels;
    };
};

},{}],"3Qeg6":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight
};

},{"./foreign.js":"hGVPO","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"hGVPO":[function(require,module,exports) {
"use strict";
exports.width = function(canvas) {
    return function() {
        return canvas.width;
    };
};
exports.setWidth = function(width) {
    return function(canvas) {
        return function() {
            canvas.width = width;
        };
    };
};
// ----------------------------------------------------------------------------
exports.height = function(canvas) {
    return function() {
        return canvas.height;
    };
};
exports.setHeight = function(height) {
    return function(canvas) {
        return function() {
            canvas.height = height;
        };
    };
};

},{}],"ixOAC":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"bsNGl":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    value: $foreign.value,
    setValue: $foreign.setValue
};

},{"./foreign.js":"aHXvX","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"aHXvX":[function(require,module,exports) {
"use strict";
exports.value = function(data) {
    return function() {
        return data.value;
    };
};
exports.setValue = function(value) {
    return function(data) {
        return function() {
            data.value = value;
        };
    };
};

},{}],"96NBb":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    options: $foreign.options
};

},{"./foreign.js":"47Tfn","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"47Tfn":[function(require,module,exports) {
"use strict";
exports.options = function(dle) {
    return function() {
        return dle.options;
    };
};

},{}],"1DRse":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"i3hAZ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_HTML_HTMLDocument_ReadyState = require("../Web.HTML.HTMLDocument.ReadyState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toDocument = Unsafe_Coerce.unsafeCoerce;
var readyState = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(function() {
        var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);
        return function($3) {
            return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));
        };
    }());
    return function($1) {
        return $0($foreign["_readyState"]($1));
    };
}();
var head = function() {
    var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($5) {
        return $4($foreign["_head"]($5));
    };
}();
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNonElementParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromDocument = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var currentScript = function() {
    var $6 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($7) {
        return $6($foreign["_currentScript"]($7));
    };
}();
var body = function() {
    var $8 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($9) {
        return $8($foreign["_body"]($9));
    };
}();
var activeElement = function() {
    var $10 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($11) {
        return $10($foreign["_activeElement"]($11));
    };
}();
module.exports = {
    fromDocument: fromDocument,
    fromNode: fromNode,
    fromParentNode: fromParentNode,
    fromNonElementParentNode: fromNonElementParentNode,
    fromEventTarget: fromEventTarget,
    toDocument: toDocument,
    toNode: toNode,
    toParentNode: toParentNode,
    toNonElementParentNode: toNonElementParentNode,
    toEventTarget: toEventTarget,
    head: head,
    body: body,
    readyState: readyState,
    activeElement: activeElement,
    currentScript: currentScript,
    referrer: $foreign.referrer,
    title: $foreign.title,
    setTitle: $foreign.setTitle
};

},{"./foreign.js":"zL5Yp","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.HTML.HTMLDocument.ReadyState/index.js":"aBOmI","../Web.Internal.FFI/index.js":"1vIWP"}],"zL5Yp":[function(require,module,exports) {
"use strict";
exports._head = function(doc) {
    return function() {
        return doc.head;
    };
};
exports._body = function(doc) {
    return function() {
        return doc.body;
    };
};
exports._readyState = function(doc) {
    return function() {
        return doc.readyState;
    };
};
exports._activeElement = function(doc) {
    return function() {
        return doc.activeElement;
    };
};
exports._currentScript = function(doc) {
    return function() {
        return doc.currentScript;
    };
};
exports.referrer = function(doc) {
    return function() {
        return doc.referrer;
    };
};
exports.title = function(doc) {
    return function() {
        return doc.title;
    };
};
exports.setTitle = function(title) {
    return function(doc) {
        return function() {
            doc.title = title;
        };
    };
};

},{}],"aBOmI":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Loading = function() {
    function Loading1() {
    }
    Loading1.value = new Loading1();
    return Loading1;
}();
var Interactive = function() {
    function Interactive1() {
    }
    Interactive1.value = new Interactive1();
    return Interactive1;
}();
var Complete = function() {
    function Complete1() {
    }
    Complete1.value = new Complete1();
    return Complete1;
}();
var showReadyState = new Data_Show.Show(function(v) {
    if (v instanceof Loading) return "Loading";
    if (v instanceof Interactive) return "Interactive";
    if (v instanceof Complete) return "Complete";
    throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 15, column 10 - line 18, column 27): " + [
        v.constructor.name
    ]);
});
var print = function(v) {
    if (v instanceof Loading) return "loading";
    if (v instanceof Interactive) return "interactive";
    if (v instanceof Complete) return "complete";
    throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 21, column 9 - line 24, column 25): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "loading") return new Data_Maybe.Just(Loading.value);
    if (v === "interactive") return new Data_Maybe.Just(Interactive.value);
    if (v === "complete") return new Data_Maybe.Just(Complete.value);
    return Data_Maybe.Nothing.value;
};
var eqReadyState = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof Loading && y instanceof Loading) return true;
        if (x instanceof Interactive && y instanceof Interactive) return true;
        if (x instanceof Complete && y instanceof Complete) return true;
        return false;
    };
});
var ordReadyState = new Data_Ord.Ord(function() {
    return eqReadyState;
}, function(x) {
    return function(y) {
        if (x instanceof Loading && y instanceof Loading) return Data_Ordering.EQ.value;
        if (x instanceof Loading) return Data_Ordering.LT.value;
        if (y instanceof Loading) return Data_Ordering.GT.value;
        if (x instanceof Interactive && y instanceof Interactive) return Data_Ordering.EQ.value;
        if (x instanceof Interactive) return Data_Ordering.LT.value;
        if (y instanceof Interactive) return Data_Ordering.GT.value;
        if (x instanceof Complete && y instanceof Complete) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 12, column 1 - line 12, column 48): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
module.exports = {
    Loading: Loading,
    Interactive: Interactive,
    Complete: Complete,
    print: print,
    parse: parse,
    eqReadyState: eqReadyState,
    ordReadyState: ordReadyState,
    showReadyState: showReadyState
};

},{"../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW"}],"60xVV":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var offsetParent = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_offsetParent"]($1));
    };
}();
var fromParentNode = function(x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
var fromNonDocumentTypeChildNode = function(x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
var fromNode = function(x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
var fromEventTarget = function(x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
var fromElement = function(x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
var fromChildNode = function(x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
module.exports = {
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    offsetParent: offsetParent,
    title: $foreign.title,
    setTitle: $foreign.setTitle,
    lang: $foreign.lang,
    setLang: $foreign.setLang,
    dir: $foreign.dir,
    setDir: $foreign.setDir,
    className: $foreign.className,
    setClassName: $foreign.setClassName,
    classList: $foreign.classList,
    hidden: $foreign.hidden,
    setHidden: $foreign.setHidden,
    tabIndex: $foreign.tabIndex,
    setTabIndex: $foreign.setTabIndex,
    draggable: $foreign.draggable,
    setDraggable: $foreign.setDraggable,
    contentEditable: $foreign.contentEditable,
    setContentEditable: $foreign.setContentEditable,
    isContentEditable: $foreign.isContentEditable,
    spellcheck: $foreign.spellcheck,
    setSpellcheck: $foreign.setSpellcheck,
    click: $foreign.click,
    focus: $foreign.focus,
    blur: $foreign.blur,
    getBoundingClientRect: $foreign.getBoundingClientRect,
    offsetTop: $foreign.offsetTop,
    offsetLeft: $foreign.offsetLeft,
    offsetWidth: $foreign.offsetWidth,
    offsetHeight: $foreign.offsetHeight
};

},{"./foreign.js":"8vgYT","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81"}],"8vgYT":[function(require,module,exports) {
"use strict";
exports._read = function(nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) return just(value);
    else return nothing;
};
// ----------------------------------------------------------------------------
exports.title = function(elt) {
    return function() {
        return elt.title;
    };
};
exports.setTitle = function(title) {
    return function(elt) {
        return function() {
            elt.title = title;
        };
    };
};
// ----------------------------------------------------------------------------
exports.lang = function(elt) {
    return function() {
        return elt.lang;
    };
};
exports.setLang = function(lang) {
    return function(elt) {
        return function() {
            elt.lang = lang;
        };
    };
};
// ----------------------------------------------------------------------------
exports.dir = function(elt) {
    return function() {
        return elt.dir;
    };
};
exports.setDir = function(dir) {
    return function(elt) {
        return function() {
            elt.dir = dir;
        };
    };
};
// ----------------------------------------------------------------------------
exports.className = function(elt) {
    return function() {
        return elt.className;
    };
};
exports.setClassName = function(className) {
    return function(elt) {
        return function() {
            elt.className = className;
        };
    };
};
exports.classList = function(element) {
    return function() {
        return element.classList;
    };
};
// ----------------------------------------------------------------------------
exports.hidden = function(elt) {
    return function() {
        return elt.hidden;
    };
};
exports.setHidden = function(hidden) {
    return function(elt) {
        return function() {
            elt.hidden = hidden;
        };
    };
};
// ----------------------------------------------------------------------------
exports.tabIndex = function(elt) {
    return function() {
        return elt.tabIndex;
    };
};
exports.setTabIndex = function(tabIndex) {
    return function(elt) {
        return function() {
            elt.tabIndex = tabIndex;
        };
    };
};
// ----------------------------------------------------------------------------
exports.draggable = function(elt) {
    return function() {
        return elt.draggable;
    };
};
exports.setDraggable = function(draggable) {
    return function(elt) {
        return function() {
            elt.draggable = draggable;
        };
    };
};
// ----------------------------------------------------------------------------
exports.contentEditable = function(elt) {
    return function() {
        return elt.contentEditable;
    };
};
exports.setContentEditable = function(contentEditable) {
    return function(elt) {
        return function() {
            elt.contentEditable = contentEditable;
        };
    };
};
exports.isContentEditable = function(elt) {
    return function() {
        return elt.isContentEditable;
    };
};
// ----------------------------------------------------------------------------
exports.spellcheck = function(elt) {
    return function() {
        return elt.spellcheck;
    };
};
exports.setSpellcheck = function(spellcheck) {
    return function(elt) {
        return function() {
            elt.spellcheck = spellcheck;
        };
    };
};
// ----------------------------------------------------------------------------
exports.click = function(elt) {
    return function() {
        return elt.click();
    };
};
exports.focus = function(elt) {
    return function() {
        return elt.focus();
    };
};
exports.blur = function(elt) {
    return function() {
        return elt.blur();
    };
};
// - CSSOM ---------------------------------------------------------------------
exports.getBoundingClientRect = function(el) {
    return function() {
        var rect = el.getBoundingClientRect();
        return {
            top: rect.top,
            right: rect.right,
            bottom: rect.bottom,
            left: rect.left,
            width: rect.width,
            height: rect.height
        };
    };
};
exports._offsetParent = function(el) {
    return function() {
        return el.offsetParent;
    };
};
exports.offsetTop = function(el) {
    return function() {
        return el.offsetTop;
    };
};
exports.offsetLeft = function(el) {
    return function() {
        return el.offsetLeft;
    };
};
exports.offsetWidth = function(el) {
    return function() {
        return el.offsetWidth;
    };
};
exports.offsetHeight = function(el) {
    return function() {
        return el.offsetHeight;
    };
};

},{}],"ldKEb":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    type_: $foreign.type_,
    setType: $foreign.setType,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight
};

},{"./foreign.js":"gzDYu","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"gzDYu":[function(require,module,exports) {
"use strict";
exports.src = function(embed) {
    return function() {
        return embed.src;
    };
};
exports.setSrc = function(src) {
    return function(embed) {
        return function() {
            embed.src = src;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(embed) {
    return function() {
        return embed.type;
    };
};
exports.setType = function(type) {
    return function(embed) {
        return function() {
            embed.type = type;
        };
    };
};
// ----------------------------------------------------------------------------
exports.width = function(embed) {
    return function() {
        return embed.width;
    };
};
exports.setWidth = function(width) {
    return function(embed) {
        return function() {
            embed.width = width;
        };
    };
};
// ----------------------------------------------------------------------------
exports.height = function(embed) {
    return function() {
        return embed.height;
    };
};
exports.setHeight = function(height) {
    return function(embed) {
        return function() {
            embed.height = height;
        };
    };
};

},{}],"2mmBW":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var form = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_form"]($1));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    name: $foreign.name,
    setName: $foreign.setName,
    type_: $foreign.type_,
    setType: $foreign.setType,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    reportValidity: $foreign.reportValidity,
    setCustomValidity: $foreign.setCustomValidity
};

},{"./foreign.js":"bwWlT","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"bwWlT":[function(require,module,exports) {
"use strict";
exports.disabled = function(fieldset) {
    return function() {
        return fieldset.disabled;
    };
};
exports.setDisabled = function(disabled) {
    return function(fieldset) {
        return function() {
            fieldset.disabled = disabled;
        };
    };
};
// ----------------------------------------------------------------------------
exports._form = function(fieldset) {
    return function() {
        return fieldset.form;
    };
};
// ----------------------------------------------------------------------------
exports.name = function(fieldset) {
    return function() {
        return fieldset.name;
    };
};
exports.setName = function(name) {
    return function(fieldset) {
        return function() {
            fieldset.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(fieldset) {
    return function() {
        return fieldset.type;
    };
};
exports.setType = function(type) {
    return function(fieldset) {
        return function() {
            fieldset.type = type;
        };
    };
};
// ----------------------------------------------------------------------------
exports.willValidate = function(fieldset) {
    return function() {
        return fieldset.willValidate;
    };
};
// ----------------------------------------------------------------------------
exports.validity = function(fieldset) {
    return function() {
        return fieldset.validity;
    };
};
// ----------------------------------------------------------------------------
exports.validationMessage = function(fieldset) {
    return function() {
        return fieldset.validationMessage;
    };
};
// ----------------------------------------------------------------------------
exports.checkValidity = function(fieldset) {
    return function() {
        return fieldset.checkValidity();
    };
};
// ----------------------------------------------------------------------------
exports.reportValidity = function(fieldset) {
    return function() {
        return fieldset.reportValidity();
    };
};
// ----------------------------------------------------------------------------
exports.setCustomValidity = function(value) {
    return function(fieldset) {
        return function() {
            fieldset.setCustomValidity(value);
        };
    };
};

},{}],"iHBDq":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    acceptCharset: $foreign.acceptCharset,
    setAcceptCharset: $foreign.setAcceptCharset,
    action: $foreign.action,
    setAction: $foreign.setAction,
    autocomplete: $foreign.autocomplete,
    setAutocomplete: $foreign.setAutocomplete,
    enctype: $foreign.enctype,
    setEnctype: $foreign.setEnctype,
    encoding: $foreign.encoding,
    setEncoding: $foreign.setEncoding,
    method: $foreign.method,
    setMethod: $foreign.setMethod,
    name: $foreign.name,
    setName: $foreign.setName,
    noValidate: $foreign.noValidate,
    setNoValidate: $foreign.setNoValidate,
    target: $foreign.target,
    setTarget: $foreign.setTarget,
    length: $foreign.length,
    submit: $foreign.submit,
    reset: $foreign.reset,
    checkValidity: $foreign.checkValidity,
    reportValidity: $foreign.reportValidity
};

},{"./foreign.js":"fPl41","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"fPl41":[function(require,module,exports) {
"use strict";
exports.acceptCharset = function(form) {
    return function() {
        return form.acceptCharset;
    };
};
exports.setAcceptCharset = function(acceptCharset) {
    return function(form) {
        return function() {
            form.acceptCharset = acceptCharset;
        };
    };
};
// ----------------------------------------------------------------------------
exports.action = function(form) {
    return function() {
        return form.action;
    };
};
exports.setAction = function(action) {
    return function(form) {
        return function() {
            form.action = action;
        };
    };
};
// ----------------------------------------------------------------------------
exports.autocomplete = function(form) {
    return function() {
        return form.autocomplete;
    };
};
exports.setAutocomplete = function(autocomplete) {
    return function(form) {
        return function() {
            form.autocomplete = autocomplete;
        };
    };
};
// ----------------------------------------------------------------------------
exports.enctype = function(form) {
    return function() {
        return form.enctype;
    };
};
exports.setEnctype = function(enctype) {
    return function(form) {
        return function() {
            form.enctype = enctype;
        };
    };
};
// ----------------------------------------------------------------------------
exports.encoding = function(form) {
    return function() {
        return form.encoding;
    };
};
exports.setEncoding = function(encoding) {
    return function(form) {
        return function() {
            form.encoding = encoding;
        };
    };
};
// ----------------------------------------------------------------------------
exports.method = function(form) {
    return function() {
        return form.method;
    };
};
exports.setMethod = function(method) {
    return function(form) {
        return function() {
            form.method = method;
        };
    };
};
// ----------------------------------------------------------------------------
exports.name = function(form) {
    return function() {
        return form.name;
    };
};
exports.setName = function(name) {
    return function(form) {
        return function() {
            form.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.noValidate = function(form) {
    return function() {
        return form.noValidate;
    };
};
exports.setNoValidate = function(noValidate) {
    return function(form) {
        return function() {
            form.noValidate = noValidate;
        };
    };
};
// ----------------------------------------------------------------------------
exports.target = function(form) {
    return function() {
        return form.target;
    };
};
exports.setTarget = function(target) {
    return function(form) {
        return function() {
            form.target = target;
        };
    };
};
// ----------------------------------------------------------------------------
exports.length = function(form) {
    return function() {
        return form.length;
    };
};
// ----------------------------------------------------------------------------
exports.submit = function(form) {
    return function() {
        form.submit();
    };
};
// ----------------------------------------------------------------------------
exports.reset = function(form) {
    return function() {
        form.reset();
    };
};
// ----------------------------------------------------------------------------
exports.checkValidity = function(form) {
    return function() {
        return form.checkValidity();
    };
};
// ----------------------------------------------------------------------------
exports.reportValidity = function(form) {
    return function() {
        return form.reportValidity();
    };
};

},{}],"79Tb6":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"vAdi2":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"cjBHf":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"bNsux":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var contentWindow = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_contentWindow"]($1));
    };
}();
var contentDocument = function() {
    var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($3) {
        return $2($foreign["_contentDocument"]($3));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    contentDocument: contentDocument,
    contentWindow: contentWindow,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    srcdoc: $foreign.srcdoc,
    setSrcdoc: $foreign.setSrcdoc,
    name: $foreign.name,
    setName: $foreign.setName,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight
};

},{"./foreign.js":"192So","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"192So":[function(require,module,exports) {
"use strict";
exports.src = function(iframe) {
    return function() {
        return iframe.src;
    };
};
exports.setSrc = function(src) {
    return function(iframe) {
        return function() {
            iframe.src = src;
        };
    };
};
// ----------------------------------------------------------------------------
exports.srcdoc = function(iframe) {
    return function() {
        return iframe.srcdoc;
    };
};
exports.setSrcdoc = function(srcdoc) {
    return function(iframe) {
        return function() {
            iframe.srcdoc = srcdoc;
        };
    };
};
// ----------------------------------------------------------------------------
exports.name = function(iframe) {
    return function() {
        return iframe.name;
    };
};
exports.setName = function(name) {
    return function(iframe) {
        return function() {
            iframe.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.width = function(iframe) {
    return function() {
        return iframe.width;
    };
};
exports.setWidth = function(width) {
    return function(iframe) {
        return function() {
            iframe.width = width;
        };
    };
};
// ----------------------------------------------------------------------------
exports.height = function(iframe) {
    return function() {
        return iframe.height;
    };
};
exports.setHeight = function(height) {
    return function(iframe) {
        return function() {
            iframe.height = height;
        };
    };
};
// ----------------------------------------------------------------------------
exports._contentDocument = function(iframe) {
    return function() {
        return iframe.contentDocument;
    };
};
exports._contentWindow = function(iframe) {
    return function() {
        return iframe.contentWindow;
    };
};

},{}],"9L1B3":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_HTML_HTMLImageElement_CORSMode = require("../Web.HTML.HTMLImageElement.CORSMode/index.js");
var Web_HTML_HTMLImageElement_DecodingHint = require("../Web.HTML.HTMLImageElement.DecodingHint/index.js");
var Web_HTML_HTMLImageElement_Laziness = require("../Web.HTML.HTMLImageElement.Laziness/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var setLoading = function(laziness) {
    return Effect_Uncurried.runEffectFn2($foreign["_setLoading"])(Web_HTML_HTMLImageElement_Laziness.print(laziness));
};
var setDecoding = function(hint) {
    return Effect_Uncurried.runEffectFn2($foreign["_setDecoding"])(Web_HTML_HTMLImageElement_DecodingHint.print(hint));
};
var setCrossOrigin = function(mode) {
    return Effect_Uncurried.runEffectFn2($foreign["_setCrossOrigin"])(Web_HTML_HTMLImageElement_CORSMode.print(mode));
};
var loading = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(function() {
        var $3 = Data_Maybe.fromMaybe(Web_HTML_HTMLImageElement_Laziness.Eager.value);
        return function($4) {
            return $3(Web_HTML_HTMLImageElement_Laziness.parse($4));
        };
    }());
    var $1 = Effect_Uncurried.runEffectFn1($foreign["_loading"]);
    return function($2) {
        return $0($1($2));
    };
}();
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var decoding = function() {
    var $5 = Data_Functor.map(Effect.functorEffect)(function() {
        var $8 = Data_Maybe.fromMaybe(Web_HTML_HTMLImageElement_DecodingHint.Auto.value);
        return function($9) {
            return $8(Web_HTML_HTMLImageElement_DecodingHint.parse($9));
        };
    }());
    var $6 = Effect_Uncurried.runEffectFn1($foreign["_decoding"]);
    return function($7) {
        return $5($6($7));
    };
}();
var crossOrigin = function() {
    var $10 = Data_Functor.map(Effect.functorEffect)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLImageElement_CORSMode.parse)(Data_Nullable.toMaybe));
    var $11 = Effect_Uncurried.runEffectFn1($foreign["_crossOrigin"]);
    return function($12) {
        return $10($11($12));
    };
}();
var create$prime = $foreign.createWithDimensions;
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    "create'": create$prime,
    crossOrigin: crossOrigin,
    setCrossOrigin: setCrossOrigin,
    decoding: decoding,
    setDecoding: setDecoding,
    loading: loading,
    setLoading: setLoading,
    create: $foreign.create,
    alt: $foreign.alt,
    setAlt: $foreign.setAlt,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    srcset: $foreign.srcset,
    setSrcset: $foreign.setSrcset,
    currentSrc: $foreign.currentSrc,
    sizes: $foreign.sizes,
    setSizes: $foreign.setSizes,
    useMap: $foreign.useMap,
    setUseMap: $foreign.setUseMap,
    isMap: $foreign.isMap,
    setIsMap: $foreign.setIsMap,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight,
    naturalWidth: $foreign.naturalWidth,
    naturalHeight: $foreign.naturalHeight,
    referrerPolicy: $foreign.referrerPolicy,
    setReferrerPolicy: $foreign.setReferrerPolicy,
    complete: $foreign.complete
};

},{"./foreign.js":"gqBkc","../Control.Bind/index.js":"7Sory","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Effect.Uncurried/index.js":"33Dai","../Unsafe.Coerce/index.js":"6gO81","../Web.HTML.HTMLImageElement.CORSMode/index.js":"bgHoZ","../Web.HTML.HTMLImageElement.DecodingHint/index.js":"gBbMR","../Web.HTML.HTMLImageElement.Laziness/index.js":"fZ5Dq","../Web.Internal.FFI/index.js":"1vIWP"}],"gqBkc":[function(require,module,exports) {
"use strict";
exports.create = function() {
    return new Image();
};
exports.createWithDimensions = function(width) {
    return function(height) {
        return function() {
            return new Image(width, height);
        };
    };
};
// ----------------------------------------------------------------------------
exports.alt = function(image) {
    return function() {
        return image.alt;
    };
};
exports.setAlt = function(alt) {
    return function(image) {
        return function() {
            image.alt = alt;
        };
    };
};
// ----------------------------------------------------------------------------
exports.src = function(image) {
    return function() {
        return image.src;
    };
};
exports.setSrc = function(src) {
    return function(image) {
        return function() {
            image.src = src;
        };
    };
};
// ----------------------------------------------------------------------------
exports.srcset = function(image) {
    return function() {
        return image.srcset;
    };
};
exports.setSrcset = function(srcset) {
    return function(image) {
        return function() {
            image.srcset = srcset;
        };
    };
};
// ----------------------------------------------------------------------------
exports.sizes = function(image) {
    return function() {
        return image.sizes;
    };
};
exports.setSizes = function(sizes) {
    return function(image) {
        return function() {
            image.sizes = sizes;
        };
    };
};
// ----------------------------------------------------------------------------
exports.currentSrc = function(image) {
    return function() {
        return image.currentSrc;
    };
};
// ----------------------------------------------------------------------------
exports._crossOrigin = function(image) {
    return image.crossOrigin;
};
exports._setCrossOrigin = function(crossOrigin, image) {
    image.crossOrigin = crossOrigin;
};
// ----------------------------------------------------------------------------
exports.useMap = function(image) {
    return function() {
        return image.useMap;
    };
};
exports.setUseMap = function(useMap) {
    return function(image) {
        return function() {
            image.useMap = useMap;
        };
    };
};
// ----------------------------------------------------------------------------
exports.isMap = function(image) {
    return function() {
        return image.isMap;
    };
};
exports.setIsMap = function(isMap) {
    return function(image) {
        return function() {
            image.isMap = isMap;
        };
    };
};
// ----------------------------------------------------------------------------
exports.width = function(image) {
    return function() {
        return image.width;
    };
};
exports.setWidth = function(width) {
    return function(image) {
        return function() {
            image.width = width;
        };
    };
};
// ----------------------------------------------------------------------------
exports.height = function(image) {
    return function() {
        return image.height;
    };
};
exports.setHeight = function(height) {
    return function(image) {
        return function() {
            image.height = height;
        };
    };
};
// ----------------------------------------------------------------------------
exports.naturalWidth = function(image) {
    return function() {
        return image.naturalWidth;
    };
};
exports.naturalHeight = function(image) {
    return function() {
        return image.naturalHeight;
    };
};
// ----------------------------------------------------------------------------
exports.referrerPolicy = function(image) {
    return function() {
        return image.referrerPolicy;
    };
};
exports.setReferrerPolicy = function(referrerPolicy) {
    return function(image) {
        return function() {
            image.referrerPolicy = referrerPolicy;
        };
    };
};
// ----------------------------------------------------------------------------
exports._decoding = function(image) {
    return image.decoding;
};
exports._setDecoding = function(decoding, image) {
    image.decoding = decoding;
};
// ----------------------------------------------------------------------------
exports._loading = function(image) {
    return image.loading;
};
exports._setLoading = function(loading, image) {
    image.loading = loading;
};
// ----------------------------------------------------------------------------
exports.complete = function(image) {
    return function() {
        return image.complete;
    };
};

},{}],"33Dai":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Effect = require("../Effect/index.js");
var semigroupEffectFn9 = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(f1) {
        return function(f2) {
            return $foreign.mkEffectFn9(function(a) {
                return function(b) {
                    return function(c) {
                        return function(d) {
                            return function(e) {
                                return function(f) {
                                    return function(g) {
                                        return function(h) {
                                            return function(i) {
                                                return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn9(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i))($foreign.runEffectFn9(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i));
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            });
        };
    });
};
var semigroupEffectFn8 = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(f1) {
        return function(f2) {
            return $foreign.mkEffectFn8(function(a) {
                return function(b) {
                    return function(c) {
                        return function(d) {
                            return function(e) {
                                return function(f) {
                                    return function(g) {
                                        return function(h) {
                                            return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn8(f1)(a)(b)(c)(d)(e)(f)(g)(h))($foreign.runEffectFn8(f2)(a)(b)(c)(d)(e)(f)(g)(h));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            });
        };
    });
};
var semigroupEffectFn7 = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(f1) {
        return function(f2) {
            return $foreign.mkEffectFn7(function(a) {
                return function(b) {
                    return function(c) {
                        return function(d) {
                            return function(e) {
                                return function(f) {
                                    return function(g) {
                                        return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn7(f1)(a)(b)(c)(d)(e)(f)(g))($foreign.runEffectFn7(f2)(a)(b)(c)(d)(e)(f)(g));
                                    };
                                };
                            };
                        };
                    };
                };
            });
        };
    });
};
var semigroupEffectFn6 = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(f1) {
        return function(f2) {
            return $foreign.mkEffectFn6(function(a) {
                return function(b) {
                    return function(c) {
                        return function(d) {
                            return function(e) {
                                return function(f) {
                                    return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn6(f1)(a)(b)(c)(d)(e)(f))($foreign.runEffectFn6(f2)(a)(b)(c)(d)(e)(f));
                                };
                            };
                        };
                    };
                };
            });
        };
    });
};
var semigroupEffectFn5 = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(f1) {
        return function(f2) {
            return $foreign.mkEffectFn5(function(a) {
                return function(b) {
                    return function(c) {
                        return function(d) {
                            return function(e) {
                                return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn5(f1)(a)(b)(c)(d)(e))($foreign.runEffectFn5(f2)(a)(b)(c)(d)(e));
                            };
                        };
                    };
                };
            });
        };
    });
};
var semigroupEffectFn4 = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(f1) {
        return function(f2) {
            return $foreign.mkEffectFn4(function(a) {
                return function(b) {
                    return function(c) {
                        return function(d) {
                            return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn4(f1)(a)(b)(c)(d))($foreign.runEffectFn4(f2)(a)(b)(c)(d));
                        };
                    };
                };
            });
        };
    });
};
var semigroupEffectFn3 = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(f1) {
        return function(f2) {
            return $foreign.mkEffectFn3(function(a) {
                return function(b) {
                    return function(c) {
                        return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn3(f1)(a)(b)(c))($foreign.runEffectFn3(f2)(a)(b)(c));
                    };
                };
            });
        };
    });
};
var semigroupEffectFn2 = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(f1) {
        return function(f2) {
            return $foreign.mkEffectFn2(function(a) {
                return function(b) {
                    return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn2(f1)(a)(b))($foreign.runEffectFn2(f2)(a)(b));
                };
            });
        };
    });
};
var semigroupEffectFn10 = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(f1) {
        return function(f2) {
            return $foreign.mkEffectFn10(function(a) {
                return function(b) {
                    return function(c) {
                        return function(d) {
                            return function(e) {
                                return function(f) {
                                    return function(g) {
                                        return function(h) {
                                            return function(i) {
                                                return function(j) {
                                                    return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn10(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j))($foreign.runEffectFn10(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            });
        };
    });
};
var semigroupEffectFn1 = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(f1) {
        return function(f2) {
            return $foreign.mkEffectFn1(function(a) {
                return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn1(f1)(a))($foreign.runEffectFn1(f2)(a));
            });
        };
    });
};
var monoidEffectFn9 = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffectFn9(dictMonoid.Semigroup0());
    }, $foreign.mkEffectFn9(function(v) {
        return function(v1) {
            return function(v2) {
                return function(v3) {
                    return function(v4) {
                        return function(v5) {
                            return function(v6) {
                                return function(v7) {
                                    return function(v8) {
                                        return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    }));
};
var monoidEffectFn8 = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffectFn8(dictMonoid.Semigroup0());
    }, $foreign.mkEffectFn8(function(v) {
        return function(v1) {
            return function(v2) {
                return function(v3) {
                    return function(v4) {
                        return function(v5) {
                            return function(v6) {
                                return function(v7) {
                                    return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                                };
                            };
                        };
                    };
                };
            };
        };
    }));
};
var monoidEffectFn7 = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffectFn7(dictMonoid.Semigroup0());
    }, $foreign.mkEffectFn7(function(v) {
        return function(v1) {
            return function(v2) {
                return function(v3) {
                    return function(v4) {
                        return function(v5) {
                            return function(v6) {
                                return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                            };
                        };
                    };
                };
            };
        };
    }));
};
var monoidEffectFn6 = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffectFn6(dictMonoid.Semigroup0());
    }, $foreign.mkEffectFn6(function(v) {
        return function(v1) {
            return function(v2) {
                return function(v3) {
                    return function(v4) {
                        return function(v5) {
                            return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                        };
                    };
                };
            };
        };
    }));
};
var monoidEffectFn5 = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffectFn5(dictMonoid.Semigroup0());
    }, $foreign.mkEffectFn5(function(v) {
        return function(v1) {
            return function(v2) {
                return function(v3) {
                    return function(v4) {
                        return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                    };
                };
            };
        };
    }));
};
var monoidEffectFn4 = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffectFn4(dictMonoid.Semigroup0());
    }, $foreign.mkEffectFn4(function(v) {
        return function(v1) {
            return function(v2) {
                return function(v3) {
                    return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                };
            };
        };
    }));
};
var monoidEffectFn3 = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffectFn3(dictMonoid.Semigroup0());
    }, $foreign.mkEffectFn3(function(v) {
        return function(v1) {
            return function(v2) {
                return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
            };
        };
    }));
};
var monoidEffectFn2 = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffectFn2(dictMonoid.Semigroup0());
    }, $foreign.mkEffectFn2(function(v) {
        return function(v1) {
            return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
        };
    }));
};
var monoidEffectFn10 = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffectFn10(dictMonoid.Semigroup0());
    }, $foreign.mkEffectFn10(function(v) {
        return function(v1) {
            return function(v2) {
                return function(v3) {
                    return function(v4) {
                        return function(v5) {
                            return function(v6) {
                                return function(v7) {
                                    return function(v8) {
                                        return function(v9) {
                                            return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    }));
};
var monoidEffectFn1 = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEffectFn1(dictMonoid.Semigroup0());
    }, $foreign.mkEffectFn1(function(v) {
        return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
    }));
};
module.exports = {
    semigroupEffectFn1: semigroupEffectFn1,
    semigroupEffectFn2: semigroupEffectFn2,
    semigroupEffectFn3: semigroupEffectFn3,
    semigroupEffectFn4: semigroupEffectFn4,
    semigroupEffectFn5: semigroupEffectFn5,
    semigroupEffectFn6: semigroupEffectFn6,
    semigroupEffectFn7: semigroupEffectFn7,
    semigroupEffectFn8: semigroupEffectFn8,
    semigroupEffectFn9: semigroupEffectFn9,
    semigroupEffectFn10: semigroupEffectFn10,
    monoidEffectFn1: monoidEffectFn1,
    monoidEffectFn2: monoidEffectFn2,
    monoidEffectFn3: monoidEffectFn3,
    monoidEffectFn4: monoidEffectFn4,
    monoidEffectFn5: monoidEffectFn5,
    monoidEffectFn6: monoidEffectFn6,
    monoidEffectFn7: monoidEffectFn7,
    monoidEffectFn8: monoidEffectFn8,
    monoidEffectFn9: monoidEffectFn9,
    monoidEffectFn10: monoidEffectFn10,
    mkEffectFn1: $foreign.mkEffectFn1,
    mkEffectFn2: $foreign.mkEffectFn2,
    mkEffectFn3: $foreign.mkEffectFn3,
    mkEffectFn4: $foreign.mkEffectFn4,
    mkEffectFn5: $foreign.mkEffectFn5,
    mkEffectFn6: $foreign.mkEffectFn6,
    mkEffectFn7: $foreign.mkEffectFn7,
    mkEffectFn8: $foreign.mkEffectFn8,
    mkEffectFn9: $foreign.mkEffectFn9,
    mkEffectFn10: $foreign.mkEffectFn10,
    runEffectFn1: $foreign.runEffectFn1,
    runEffectFn2: $foreign.runEffectFn2,
    runEffectFn3: $foreign.runEffectFn3,
    runEffectFn4: $foreign.runEffectFn4,
    runEffectFn5: $foreign.runEffectFn5,
    runEffectFn6: $foreign.runEffectFn6,
    runEffectFn7: $foreign.runEffectFn7,
    runEffectFn8: $foreign.runEffectFn8,
    runEffectFn9: $foreign.runEffectFn9,
    runEffectFn10: $foreign.runEffectFn10
};

},{"./foreign.js":"6pHDC","../Data.Monoid/index.js":"94fxC","../Data.Semigroup/index.js":"4sNah","../Effect/index.js":"bKbtZ"}],"6pHDC":[function(require,module,exports) {
"use strict";
exports.mkEffectFn1 = function mkEffectFn1(fn) {
    return function(x) {
        return fn(x)();
    };
};
exports.mkEffectFn2 = function mkEffectFn2(fn) {
    return function(a, b) {
        return fn(a)(b)();
    };
};
exports.mkEffectFn3 = function mkEffectFn3(fn) {
    return function(a, b, c) {
        return fn(a)(b)(c)();
    };
};
exports.mkEffectFn4 = function mkEffectFn4(fn) {
    return function(a, b, c, d) {
        return fn(a)(b)(c)(d)();
    };
};
exports.mkEffectFn5 = function mkEffectFn5(fn) {
    return function(a, b, c, d, e) {
        return fn(a)(b)(c)(d)(e)();
    };
};
exports.mkEffectFn6 = function mkEffectFn6(fn) {
    return function(a, b, c, d, e, f) {
        return fn(a)(b)(c)(d)(e)(f)();
    };
};
exports.mkEffectFn7 = function mkEffectFn7(fn) {
    return function(a, b, c, d, e, f, g) {
        return fn(a)(b)(c)(d)(e)(f)(g)();
    };
};
exports.mkEffectFn8 = function mkEffectFn8(fn) {
    return function(a, b, c, d, e, f, g, h) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)();
    };
};
exports.mkEffectFn9 = function mkEffectFn9(fn) {
    return function(a, b, c, d, e, f, g, h, i) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();
    };
};
exports.mkEffectFn10 = function mkEffectFn10(fn) {
    return function(a, b, c, d, e, f, g, h, i, j) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();
    };
};
exports.runEffectFn1 = function runEffectFn1(fn) {
    return function(a) {
        return function() {
            return fn(a);
        };
    };
};
exports.runEffectFn2 = function runEffectFn2(fn) {
    return function(a) {
        return function(b) {
            return function() {
                return fn(a, b);
            };
        };
    };
};
exports.runEffectFn3 = function runEffectFn3(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function() {
                    return fn(a, b, c);
                };
            };
        };
    };
};
exports.runEffectFn4 = function runEffectFn4(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function() {
                        return fn(a, b, c, d);
                    };
                };
            };
        };
    };
};
exports.runEffectFn5 = function runEffectFn5(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function() {
                            return fn(a, b, c, d, e);
                        };
                    };
                };
            };
        };
    };
};
exports.runEffectFn6 = function runEffectFn6(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function() {
                                return fn(a, b, c, d, e, f);
                            };
                        };
                    };
                };
            };
        };
    };
};
exports.runEffectFn7 = function runEffectFn7(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function() {
                                    return fn(a, b, c, d, e, f, g);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
exports.runEffectFn8 = function runEffectFn8(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function() {
                                        return fn(a, b, c, d, e, f, g, h);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
exports.runEffectFn9 = function runEffectFn9(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function() {
                                            return fn(a, b, c, d, e, f, g, h, i);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
exports.runEffectFn10 = function runEffectFn10(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function(j) {
                                            return function() {
                                                return fn(a, b, c, d, e, f, g, h, i, j);
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

},{}],"bgHoZ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Anonymous = function() {
    function Anonymous1() {
    }
    Anonymous1.value = new Anonymous1();
    return Anonymous1;
}();
var UseCredentials = function() {
    function UseCredentials1() {
    }
    UseCredentials1.value = new UseCredentials1();
    return UseCredentials1;
}();
var showDecodingHint = new Data_Show.Show(function(v) {
    if (v instanceof Anonymous) return "Anonymous";
    if (v instanceof UseCredentials) return "UseCredentials";
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 18, column 10 - line 20, column 39): " + [
        v.constructor.name
    ]);
});
var print = function(v) {
    if (v instanceof Anonymous) return "anonymous";
    if (v instanceof UseCredentials) return "use-credentials";
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 30, column 9 - line 32, column 38): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "") return new Data_Maybe.Just(Anonymous.value);
    if (v === "anonymous") return new Data_Maybe.Just(Anonymous.value);
    if (v === "use-credentials") return new Data_Maybe.Just(UseCredentials.value);
    return Data_Maybe.Nothing.value;
};
var eqCORSMode = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof Anonymous && y instanceof Anonymous) return true;
        if (x instanceof UseCredentials && y instanceof UseCredentials) return true;
        return false;
    };
});
var ordCORSMode = new Data_Ord.Ord(function() {
    return eqCORSMode;
}, function(x) {
    return function(y) {
        if (x instanceof Anonymous && y instanceof Anonymous) return Data_Ordering.EQ.value;
        if (x instanceof Anonymous) return Data_Ordering.LT.value;
        if (y instanceof Anonymous) return Data_Ordering.GT.value;
        if (x instanceof UseCredentials && y instanceof UseCredentials) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 15, column 1 - line 15, column 44): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
module.exports = {
    Anonymous: Anonymous,
    UseCredentials: UseCredentials,
    parse: parse,
    print: print,
    eqCORSMode: eqCORSMode,
    ordCORSMode: ordCORSMode,
    showDecodingHint: showDecodingHint
};

},{"../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW"}],"gBbMR":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Sync = function() {
    function Sync1() {
    }
    Sync1.value = new Sync1();
    return Sync1;
}();
var Async = function() {
    function Async1() {
    }
    Async1.value = new Async1();
    return Async1;
}();
var Auto = function() {
    function Auto1() {
    }
    Auto1.value = new Auto1();
    return Auto1;
}();
var showDecodingHint = new Data_Show.Show(function(v) {
    if (v instanceof Sync) return "Sync";
    if (v instanceof Async) return "Async";
    if (v instanceof Auto) return "Auto";
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 19, column 10 - line 22, column 19): " + [
        v.constructor.name
    ]);
});
var print = function(v) {
    if (v instanceof Sync) return "sync";
    if (v instanceof Async) return "async";
    if (v instanceof Auto) return "auto";
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 33, column 9 - line 36, column 17): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "") return new Data_Maybe.Just(Auto.value);
    if (v === "sync") return new Data_Maybe.Just(Sync.value);
    if (v === "async") return new Data_Maybe.Just(Async.value);
    if (v === "auto") return new Data_Maybe.Just(Auto.value);
    return Data_Maybe.Nothing.value;
};
var eqDecodingHint = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof Sync && y instanceof Sync) return true;
        if (x instanceof Async && y instanceof Async) return true;
        if (x instanceof Auto && y instanceof Auto) return true;
        return false;
    };
});
var ordDecodingHint = new Data_Ord.Ord(function() {
    return eqDecodingHint;
}, function(x) {
    return function(y) {
        if (x instanceof Sync && y instanceof Sync) return Data_Ordering.EQ.value;
        if (x instanceof Sync) return Data_Ordering.LT.value;
        if (y instanceof Sync) return Data_Ordering.GT.value;
        if (x instanceof Async && y instanceof Async) return Data_Ordering.EQ.value;
        if (x instanceof Async) return Data_Ordering.LT.value;
        if (y instanceof Async) return Data_Ordering.GT.value;
        if (x instanceof Auto && y instanceof Auto) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 16, column 1 - line 16, column 52): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
module.exports = {
    Sync: Sync,
    Async: Async,
    Auto: Auto,
    parse: parse,
    print: print,
    eqDecodingHint: eqDecodingHint,
    ordDecodingHint: ordDecodingHint,
    showDecodingHint: showDecodingHint
};

},{"../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW"}],"fZ5Dq":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Eager = function() {
    function Eager1() {
    }
    Eager1.value = new Eager1();
    return Eager1;
}();
var Lazy = function() {
    function Lazy1() {
    }
    Lazy1.value = new Lazy1();
    return Lazy1;
}();
var showDecodingHint = new Data_Show.Show(function(v) {
    if (v instanceof Eager) return "Eager";
    if (v instanceof Lazy) return "Lazy";
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 18, column 10 - line 20, column 19): " + [
        v.constructor.name
    ]);
});
var print = function(v) {
    if (v instanceof Eager) return "eager";
    if (v instanceof Lazy) return "lazy";
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 31, column 9 - line 33, column 17): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "") return new Data_Maybe.Just(Eager.value);
    if (v === "eager") return new Data_Maybe.Just(Eager.value);
    if (v === "lazy") return new Data_Maybe.Just(Lazy.value);
    return Data_Maybe.Nothing.value;
};
var eqDecodingHint = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof Eager && y instanceof Eager) return true;
        if (x instanceof Lazy && y instanceof Lazy) return true;
        return false;
    };
});
var ordDecodingHint = new Data_Ord.Ord(function() {
    return eqDecodingHint;
}, function(x) {
    return function(y) {
        if (x instanceof Eager && y instanceof Eager) return Data_Ordering.EQ.value;
        if (x instanceof Eager) return Data_Ordering.LT.value;
        if (y instanceof Eager) return Data_Ordering.GT.value;
        if (x instanceof Lazy && y instanceof Lazy) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 15, column 1 - line 15, column 48): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
module.exports = {
    Eager: Eager,
    Lazy: Lazy,
    parse: parse,
    print: print,
    eqDecodingHint: eqDecodingHint,
    ordDecodingHint: ordDecodingHint,
    showDecodingHint: showDecodingHint
};

},{"../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW"}],"Bjhju":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var stepUp$prime = $foreign.stepUpBy;
var stepUp = stepUp$prime(1);
var stepDown$prime = $foreign.stepDownBy;
var stepDown = stepDown$prime(1);
var setRangeText$prime = function(rpl) {
    return function(s) {
        return function(e) {
            return function(mode) {
                return function(area) {
                    return function() {
                        return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
                    };
                };
            };
        };
    };
};
var list = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_list"]($1));
    };
}();
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var form = function() {
    var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($3) {
        return $2($foreign["_form"]($3));
    };
}();
var files = function() {
    var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($5) {
        return $4($foreign["_files"]($5));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    files: files,
    list: list,
    stepUp: stepUp,
    "stepUp'": stepUp$prime,
    stepDown: stepDown,
    "stepDown'": stepDown$prime,
    "setRangeText'": setRangeText$prime,
    accept: $foreign.accept,
    setAccept: $foreign.setAccept,
    alt: $foreign.alt,
    setAlt: $foreign.setAlt,
    autocomplete: $foreign.autocomplete,
    setAutocomplete: $foreign.setAutocomplete,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    defaultChecked: $foreign.defaultChecked,
    setDefaultChecked: $foreign.setDefaultChecked,
    checked: $foreign.checked,
    setChecked: $foreign.setChecked,
    dirName: $foreign.dirName,
    setDirName: $foreign.setDirName,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    formAction: $foreign.formAction,
    setFormAction: $foreign.setFormAction,
    formEnctype: $foreign.formEnctype,
    setFormEnctype: $foreign.setFormEnctype,
    formMethod: $foreign.formMethod,
    setFormMethod: $foreign.setFormMethod,
    formNoValidate: $foreign.formNoValidate,
    setFormNoValidate: $foreign.setFormNoValidate,
    formTarget: $foreign.formTarget,
    setFormTarget: $foreign.setFormTarget,
    height: $foreign.height,
    setHeight: $foreign.setHeight,
    indeterminate: $foreign.indeterminate,
    setIndeterminate: $foreign.setIndeterminate,
    max: $foreign.max,
    setMax: $foreign.setMax,
    maxLength: $foreign.maxLength,
    setMaxLength: $foreign.setMaxLength,
    min: $foreign.min,
    setMin: $foreign.setMin,
    minLength: $foreign.minLength,
    setMinLength: $foreign.setMinLength,
    multiple: $foreign.multiple,
    setMultiple: $foreign.setMultiple,
    name: $foreign.name,
    setName: $foreign.setName,
    pattern: $foreign.pattern,
    setPattern: $foreign.setPattern,
    placeholder: $foreign.placeholder,
    setPlaceholder: $foreign.setPlaceholder,
    readOnly: $foreign.readOnly,
    setReadOnly: $foreign.setReadOnly,
    required: $foreign.required,
    setRequired: $foreign.setRequired,
    size: $foreign.size,
    setSize: $foreign.setSize,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    step: $foreign.step,
    setStep: $foreign.setStep,
    type_: $foreign.type_,
    setType: $foreign.setType,
    defaultValue: $foreign.defaultValue,
    setDefaultValue: $foreign.setDefaultValue,
    value: $foreign.value,
    setValue: $foreign.setValue,
    valueAsDate: $foreign.valueAsDate,
    setValueAsDate: $foreign.setValueAsDate,
    valueAsNumber: $foreign.valueAsNumber,
    setValueAsNumber: $foreign.setValueAsNumber,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    reportValidity: $foreign.reportValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels,
    select: $foreign.select,
    selectionStart: $foreign.selectionStart,
    setSelectionStart: $foreign.setSelectionStart,
    selectionEnd: $foreign.selectionEnd,
    setSelectionEnd: $foreign.setSelectionEnd,
    selectionDirection: $foreign.selectionDirection,
    setSelectionDirection: $foreign.setSelectionDirection,
    setRangeText: $foreign.setRangeText,
    setSelectionRange: $foreign.setSelectionRange
};

},{"./foreign.js":"hfAsN","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.HTML.SelectionMode/index.js":"5PLTO","../Web.Internal.FFI/index.js":"1vIWP"}],"hfAsN":[function(require,module,exports) {
"use strict";
exports.accept = function(input) {
    return function() {
        return input.accept;
    };
};
exports.setAccept = function(accept) {
    return function(input) {
        return function() {
            input.accept = accept;
        };
    };
};
// ----------------------------------------------------------------------------
exports.alt = function(input) {
    return function() {
        return input.alt;
    };
};
exports.setAlt = function(alt) {
    return function(input) {
        return function() {
            input.alt = alt;
        };
    };
};
// ----------------------------------------------------------------------------
exports.autocomplete = function(input) {
    return function() {
        return input.autocomplete;
    };
};
exports.setAutocomplete = function(autocomplete) {
    return function(input) {
        return function() {
            input.autocomplete = autocomplete;
        };
    };
};
// ----------------------------------------------------------------------------
exports.autofocus = function(input) {
    return function() {
        return input.autofocus;
    };
};
exports.setAutofocus = function(autofocus) {
    return function(input) {
        return function() {
            input.autofocus = autofocus;
        };
    };
};
// ----------------------------------------------------------------------------
exports.defaultChecked = function(input) {
    return function() {
        return input.defaultChecked;
    };
};
exports.setDefaultChecked = function(defaultChecked) {
    return function(input) {
        return function() {
            input.defaultChecked = defaultChecked;
        };
    };
};
// ----------------------------------------------------------------------------
exports.checked = function(input) {
    return function() {
        return input.checked;
    };
};
exports.setChecked = function(checked) {
    return function(input) {
        return function() {
            input.checked = checked;
        };
    };
};
// ----------------------------------------------------------------------------
exports.dirName = function(input) {
    return function() {
        return input.dirName;
    };
};
exports.setDirName = function(dirName) {
    return function(input) {
        return function() {
            input.dirName = dirName;
        };
    };
};
// ----------------------------------------------------------------------------
exports.disabled = function(input) {
    return function() {
        return input.disabled;
    };
};
exports.setDisabled = function(disabled) {
    return function(input) {
        return function() {
            input.disabled = disabled;
        };
    };
};
// ----------------------------------------------------------------------------
exports._form = function(input) {
    return function() {
        return input.form;
    };
};
// ----------------------------------------------------------------------------
exports._files = function(input) {
    return function() {
        return input.files;
    };
};
// ----------------------------------------------------------------------------
exports.formAction = function(input) {
    return function() {
        return input.formAction;
    };
};
exports.setFormAction = function(formAction) {
    return function(input) {
        return function() {
            input.formAction = formAction;
        };
    };
};
// ----------------------------------------------------------------------------
exports.formEnctype = function(input) {
    return function() {
        return input.formEnctype;
    };
};
exports.setFormEnctype = function(formEnctype) {
    return function(input) {
        return function() {
            input.formEnctype = formEnctype;
        };
    };
};
// ----------------------------------------------------------------------------
exports.formMethod = function(input) {
    return function() {
        return input.formMethod;
    };
};
exports.setFormMethod = function(formMethod) {
    return function(input) {
        return function() {
            input.formMethod = formMethod;
        };
    };
};
// ----------------------------------------------------------------------------
exports.formNoValidate = function(input) {
    return function() {
        return input.formNoValidate;
    };
};
exports.setFormNoValidate = function(formNoValidate) {
    return function(input) {
        return function() {
            input.formNoValidate = formNoValidate;
        };
    };
};
// ----------------------------------------------------------------------------
exports.formTarget = function(input) {
    return function() {
        return input.formTarget;
    };
};
exports.setFormTarget = function(formTarget) {
    return function(input) {
        return function() {
            input.formTarget = formTarget;
        };
    };
};
// ----------------------------------------------------------------------------
exports.height = function(input) {
    return function() {
        return input.height;
    };
};
exports.setHeight = function(height) {
    return function(input) {
        return function() {
            input.height = height;
        };
    };
};
// ----------------------------------------------------------------------------
exports.indeterminate = function(input) {
    return function() {
        return input.indeterminate;
    };
};
exports.setIndeterminate = function(indeterminate) {
    return function(input) {
        return function() {
            input.indeterminate = indeterminate;
        };
    };
};
// ----------------------------------------------------------------------------
exports._list = function(input) {
    return function() {
        return input.list;
    };
};
// ----------------------------------------------------------------------------
exports.max = function(input) {
    return function() {
        return input.max;
    };
};
exports.setMax = function(max) {
    return function(input) {
        return function() {
            input.max = max;
        };
    };
};
// ----------------------------------------------------------------------------
exports.maxLength = function(input) {
    return function() {
        return input.maxLength;
    };
};
exports.setMaxLength = function(maxLength) {
    return function(input) {
        return function() {
            input.maxLength = maxLength;
        };
    };
};
// ----------------------------------------------------------------------------
exports.min = function(input) {
    return function() {
        return input.min;
    };
};
exports.setMin = function(min) {
    return function(input) {
        return function() {
            input.min = min;
        };
    };
};
// ----------------------------------------------------------------------------
exports.minLength = function(input) {
    return function() {
        return input.minLength;
    };
};
exports.setMinLength = function(minLength) {
    return function(input) {
        return function() {
            input.minLength = minLength;
        };
    };
};
// ----------------------------------------------------------------------------
exports.multiple = function(input) {
    return function() {
        return input.multiple;
    };
};
exports.setMultiple = function(multiple) {
    return function(input) {
        return function() {
            input.multiple = multiple;
        };
    };
};
// ----------------------------------------------------------------------------
exports.name = function(input) {
    return function() {
        return input.name;
    };
};
exports.setName = function(name) {
    return function(input) {
        return function() {
            input.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.pattern = function(input) {
    return function() {
        return input.pattern;
    };
};
exports.setPattern = function(pattern) {
    return function(input) {
        return function() {
            input.pattern = pattern;
        };
    };
};
// ----------------------------------------------------------------------------
exports.placeholder = function(input) {
    return function() {
        return input.placeholder;
    };
};
exports.setPlaceholder = function(placeholder) {
    return function(input) {
        return function() {
            input.placeholder = placeholder;
        };
    };
};
// ----------------------------------------------------------------------------
exports.readOnly = function(input) {
    return function() {
        return input.readOnly;
    };
};
exports.setReadOnly = function(readOnly) {
    return function(input) {
        return function() {
            input.readOnly = readOnly;
        };
    };
};
// ----------------------------------------------------------------------------
exports.required = function(input) {
    return function() {
        return input.required;
    };
};
exports.setRequired = function(required) {
    return function(input) {
        return function() {
            input.required = required;
        };
    };
};
// ----------------------------------------------------------------------------
exports.size = function(input) {
    return function() {
        return input.size;
    };
};
exports.setSize = function(size) {
    return function(input) {
        return function() {
            input.size = size;
        };
    };
};
// ----------------------------------------------------------------------------
exports.src = function(input) {
    return function() {
        return input.src;
    };
};
exports.setSrc = function(src) {
    return function(input) {
        return function() {
            input.src = src;
        };
    };
};
// ----------------------------------------------------------------------------
exports.step = function(input) {
    return function() {
        return input.step;
    };
};
exports.setStep = function(step) {
    return function(input) {
        return function() {
            input.step = step;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(input) {
    return function() {
        return input.type;
    };
};
exports.setType = function(type) {
    return function(input) {
        return function() {
            input.type = type;
        };
    };
};
// ----------------------------------------------------------------------------
exports.defaultValue = function(input) {
    return function() {
        return input.defaultValue;
    };
};
exports.setDefaultValue = function(defaultValue) {
    return function(input) {
        return function() {
            input.defaultValue = defaultValue;
        };
    };
};
// ----------------------------------------------------------------------------
exports.value = function(input) {
    return function() {
        return input.value;
    };
};
exports.setValue = function(value) {
    return function(input) {
        return function() {
            input.value = value;
        };
    };
};
// ----------------------------------------------------------------------------
exports.valueAsDate = function(input) {
    return function() {
        return input.valueAsDate;
    };
};
exports.setValueAsDate = function(valueAsDate) {
    return function(input) {
        return function() {
            input.valueAsDate = valueAsDate;
        };
    };
};
// ----------------------------------------------------------------------------
exports.valueAsNumber = function(input) {
    return function() {
        return input.valueAsNumber;
    };
};
exports.setValueAsNumber = function(valueAsNumber) {
    return function(input) {
        return function() {
            input.valueAsNumber = valueAsNumber;
        };
    };
};
// ----------------------------------------------------------------------------
exports.width = function(input) {
    return function() {
        return input.width;
    };
};
exports.setWidth = function(width) {
    return function(input) {
        return function() {
            input.width = width;
        };
    };
};
// ----------------------------------------------------------------------------
exports.stepUpBy = function(n) {
    return function(input) {
        return function() {
            input.stepUp(n);
        };
    };
};
// ----------------------------------------------------------------------------
exports.stepDownBy = function(n) {
    return function(input) {
        return function() {
            input.stepDown(n);
        };
    };
};
// ----------------------------------------------------------------------------
exports.willValidate = function(input) {
    return function() {
        return input.willValidate;
    };
};
// ----------------------------------------------------------------------------
exports.validity = function(input) {
    return function() {
        return input.validity;
    };
};
// ----------------------------------------------------------------------------
exports.validationMessage = function(input) {
    return function() {
        return input.validationMessage;
    };
};
// ----------------------------------------------------------------------------
exports.checkValidity = function(input) {
    return function() {
        return input.checkValidity();
    };
};
// ----------------------------------------------------------------------------
exports.reportValidity = function(input) {
    return function() {
        return input.reportValidity();
    };
};
// ----------------------------------------------------------------------------
exports.setCustomValidity = function(value) {
    return function(input) {
        return function() {
            input.setCustomValidity(value);
        };
    };
};
// ----------------------------------------------------------------------------
exports.labels = function(input) {
    return function() {
        return input.labels;
    };
};
// ----------------------------------------------------------------------------
exports.select = function(input) {
    return function() {
        input.select();
    };
};
// ----------------------------------------------------------------------------
exports.selectionStart = function(input) {
    return function() {
        return input.selectionStart;
    };
};
exports.setSelectionStart = function(selectionStart) {
    return function(input) {
        return function() {
            input.selectionStart = selectionStart;
        };
    };
};
// ----------------------------------------------------------------------------
exports.selectionEnd = function(input) {
    return function() {
        return input.selectionEnd;
    };
};
exports.setSelectionEnd = function(selectionEnd) {
    return function(input) {
        return function() {
            input.selectionEnd = selectionEnd;
        };
    };
};
// ----------------------------------------------------------------------------
exports.selectionDirection = function(input) {
    return function() {
        return input.selectionDirection;
    };
};
exports.setSelectionDirection = function(selectionDirection) {
    return function(input) {
        return function() {
            input.selectionDirection = selectionDirection;
        };
    };
};
// ----------------------------------------------------------------------------
exports.setRangeText = function(replacement) {
    return function(input) {
        return function() {
            input.setRangeText(replacement);
        };
    };
};
exports._setRangeText = function(replacement, start, end, selectionMode, textarea) {
    textarea.setRangeText(replacement, start, end, selectionMode);
};
// ----------------------------------------------------------------------------
exports.setSelectionRange = function(start) {
    return function(end) {
        return function(direction) {
            return function(input) {
                return function() {
                    input.setSelectionRange(start, end, direction, input);
                };
            };
        };
    };
};

},{}],"5PLTO":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Preserve = function() {
    function Preserve1() {
    }
    Preserve1.value = new Preserve1();
    return Preserve1;
}();
var Select = function() {
    function Select1() {
    }
    Select1.value = new Select1();
    return Select1;
}();
var Start = function() {
    function Start1() {
    }
    Start1.value = new Start1();
    return Start1;
}();
var End = function() {
    function End1() {
    }
    End1.value = new End1();
    return End1;
}();
var showSelectionMode = new Data_Show.Show(function(v) {
    if (v instanceof Preserve) return "Preserve";
    if (v instanceof Select) return "Select";
    if (v instanceof Start) return "Start";
    if (v instanceof End) return "End";
    throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 17, column 10 - line 21, column 17): " + [
        v.constructor.name
    ]);
});
var print = function(v) {
    if (v instanceof Preserve) return "preserve";
    if (v instanceof Select) return "select";
    if (v instanceof Start) return "start";
    if (v instanceof End) return "end";
    throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 32, column 9 - line 36, column 15): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "preserve") return new Data_Maybe.Just(Preserve.value);
    if (v === "select") return new Data_Maybe.Just(Select.value);
    if (v === "start") return new Data_Maybe.Just(Start.value);
    if (v === "end") return new Data_Maybe.Just(End.value);
    return Data_Maybe.Nothing.value;
};
var eqSelectionMode = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof Preserve && y instanceof Preserve) return true;
        if (x instanceof Select && y instanceof Select) return true;
        if (x instanceof Start && y instanceof Start) return true;
        if (x instanceof End && y instanceof End) return true;
        return false;
    };
});
var ordSelectionMode = new Data_Ord.Ord(function() {
    return eqSelectionMode;
}, function(x) {
    return function(y) {
        if (x instanceof Preserve && y instanceof Preserve) return Data_Ordering.EQ.value;
        if (x instanceof Preserve) return Data_Ordering.LT.value;
        if (y instanceof Preserve) return Data_Ordering.GT.value;
        if (x instanceof Select && y instanceof Select) return Data_Ordering.EQ.value;
        if (x instanceof Select) return Data_Ordering.LT.value;
        if (y instanceof Select) return Data_Ordering.GT.value;
        if (x instanceof Start && y instanceof Start) return Data_Ordering.EQ.value;
        if (x instanceof Start) return Data_Ordering.LT.value;
        if (y instanceof Start) return Data_Ordering.GT.value;
        if (x instanceof End && y instanceof End) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 14, column 1 - line 14, column 54): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
module.exports = {
    Preserve: Preserve,
    Select: Select,
    Start: Start,
    End: End,
    parse: parse,
    print: print,
    eqSelectionMode: eqSelectionMode,
    ordSelectionMode: ordSelectionMode,
    showSelectionMode: showSelectionMode
};

},{"../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW"}],"fJZU0":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var form = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_form"]($1));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    challenge: $foreign.challenge,
    setChallenge: $foreign.setChallenge,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    keytype: $foreign.keytype,
    setKeytype: $foreign.setKeytype,
    name: $foreign.name,
    setName: $foreign.setName,
    type_: $foreign.type_,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    reportValidity: $foreign.reportValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels
};

},{"./foreign.js":"kPe2q","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"kPe2q":[function(require,module,exports) {
"use strict";
exports.autofocus = function(keygen) {
    return function() {
        return keygen.autofocus;
    };
};
exports.setAutofocus = function(autofocus) {
    return function(keygen) {
        return function() {
            keygen.autofocus = autofocus;
        };
    };
};
// ----------------------------------------------------------------------------
exports.challenge = function(keygen) {
    return function() {
        return keygen.challenge;
    };
};
exports.setChallenge = function(challenge) {
    return function(keygen) {
        return function() {
            keygen.challenge = challenge;
        };
    };
};
// ----------------------------------------------------------------------------
exports.disabled = function(keygen) {
    return function() {
        return keygen.disabled;
    };
};
exports.setDisabled = function(disabled) {
    return function(keygen) {
        return function() {
            keygen.disabled = disabled;
        };
    };
};
// ----------------------------------------------------------------------------
exports._form = function(keygen) {
    return function() {
        return keygen.form;
    };
};
// ----------------------------------------------------------------------------
exports.keytype = function(keygen) {
    return function() {
        return keygen.keytype;
    };
};
exports.setKeytype = function(keytype) {
    return function(keygen) {
        return function() {
            keygen.keytype = keytype;
        };
    };
};
// ----------------------------------------------------------------------------
exports.name = function(keygen) {
    return function() {
        return keygen.name;
    };
};
exports.setName = function(name) {
    return function(keygen) {
        return function() {
            keygen.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(keygen) {
    return function() {
        return keygen.type;
    };
};
// ----------------------------------------------------------------------------
exports.willValidate = function(keygen) {
    return function() {
        return keygen.willValidate;
    };
};
// ----------------------------------------------------------------------------
exports.validity = function(keygen) {
    return function() {
        return keygen.validity;
    };
};
// ----------------------------------------------------------------------------
exports.validationMessage = function(keygen) {
    return function() {
        return keygen.validationMessage;
    };
};
// ----------------------------------------------------------------------------
exports.checkValidity = function(keygen) {
    return function() {
        return keygen.checkValidity();
    };
};
// ----------------------------------------------------------------------------
exports.reportValidity = function(keygen) {
    return function() {
        return keygen.reportValidity();
    };
};
// ----------------------------------------------------------------------------
exports.setCustomValidity = function(value) {
    return function(keygen) {
        return function() {
            keygen.setCustomValidity(value);
        };
    };
};
// ----------------------------------------------------------------------------
exports.labels = function(keygen) {
    return function() {
        return keygen.labels;
    };
};

},{}],"6eWUI":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    value: $foreign.value,
    setValue: $foreign.setValue
};

},{"./foreign.js":"kSsNU","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"kSsNU":[function(require,module,exports) {
"use strict";
exports.value = function(li) {
    return function() {
        return li.value;
    };
};
exports.setValue = function(value) {
    return function(li) {
        return function() {
            li.value = value;
        };
    };
};

},{}],"685Kl":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var form = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_form"]($1));
    };
}();
var control = function() {
    var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($3) {
        return $2($foreign["_control"]($3));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    control: control,
    htmlFor: $foreign.htmlFor,
    setHtmlFor: $foreign.setHtmlFor
};

},{"./foreign.js":"jXnOz","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"jXnOz":[function(require,module,exports) {
"use strict";
exports._form = function(label) {
    return function() {
        return label.form;
    };
};
// ----------------------------------------------------------------------------
exports.htmlFor = function(label) {
    return function() {
        return label.htmlFor;
    };
};
exports.setHtmlFor = function(htmlFor) {
    return function(label) {
        return function() {
            label.htmlFor = htmlFor;
        };
    };
};
// ----------------------------------------------------------------------------
exports._control = function(label) {
    return function() {
        return label.control;
    };
};

},{}],"8d0nT":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var form = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_form"]($1));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form
};

},{"./foreign.js":"dgUwP","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"dgUwP":[function(require,module,exports) {
"use strict";
exports._form = function(le) {
    return function() {
        return le.form;
    };
};

},{}],"ecbYq":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    href: $foreign.href,
    setHref: $foreign.setHref,
    crossOrigin: $foreign.crossOrigin,
    setCrossOrigin: $foreign.setCrossOrigin,
    rel: $foreign.rel,
    setRel: $foreign.setRel,
    rev: $foreign.rev,
    setRev: $foreign.setRev,
    relList: $foreign.relList,
    media: $foreign.media,
    setMedia: $foreign.setMedia,
    hreflang: $foreign.hreflang,
    setHreflang: $foreign.setHreflang,
    type_: $foreign.type_,
    setType: $foreign.setType
};

},{"./foreign.js":"gklNY","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"gklNY":[function(require,module,exports) {
"use strict";
exports.disabled = function(link) {
    return function() {
        return link.disabled;
    };
};
exports.setDisabled = function(disabled) {
    return function(link) {
        return function() {
            link.disabled = disabled;
        };
    };
};
// ----------------------------------------------------------------------------
exports.href = function(link) {
    return function() {
        return link.href;
    };
};
exports.setHref = function(href) {
    return function(link) {
        return function() {
            link.href = href;
        };
    };
};
// ----------------------------------------------------------------------------
exports.crossOrigin = function(link) {
    return function() {
        return link.crossOrigin;
    };
};
exports.setCrossOrigin = function(crossOrigin) {
    return function(link) {
        return function() {
            link.crossOrigin = crossOrigin;
        };
    };
};
// ----------------------------------------------------------------------------
exports.rel = function(link) {
    return function() {
        return link.rel;
    };
};
exports.setRel = function(rel) {
    return function(link) {
        return function() {
            link.rel = rel;
        };
    };
};
// ----------------------------------------------------------------------------
exports.rev = function(link) {
    return function() {
        return link.rev;
    };
};
exports.setRev = function(rev) {
    return function(link) {
        return function() {
            link.rev = rev;
        };
    };
};
// ----------------------------------------------------------------------------
exports.relList = function(link) {
    return function() {
        return link.relList;
    };
};
// ----------------------------------------------------------------------------
exports.media = function(link) {
    return function() {
        return link.media;
    };
};
exports.setMedia = function(media) {
    return function(link) {
        return function() {
            link.media = media;
        };
    };
};
// ----------------------------------------------------------------------------
exports.hreflang = function(link) {
    return function() {
        return link.hreflang;
    };
};
exports.setHreflang = function(hreflang) {
    return function(link) {
        return function() {
            link.hreflang = hreflang;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(link) {
    return function() {
        return link.type;
    };
};
exports.setType = function(type) {
    return function(link) {
        return function() {
            link.type = type;
        };
    };
};

},{}],"fLEsU":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    name: $foreign.name,
    setName: $foreign.setName,
    areas: $foreign.areas,
    images: $foreign.images
};

},{"./foreign.js":"a7O9o","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"a7O9o":[function(require,module,exports) {
"use strict";
exports.name = function(map) {
    return function() {
        return map.name;
    };
};
exports.setName = function(name) {
    return function(map) {
        return function() {
            map.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.areas = function(map) {
    return function() {
        return map.areas;
    };
};
// ----------------------------------------------------------------------------
exports.images = function(map) {
    return function() {
        return map.images;
    };
};

},{}],"ecVRM":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_HTML_HTMLMediaElement_CanPlayType = require("../Web.HTML.HTMLMediaElement.CanPlayType/index.js");
var Web_HTML_HTMLMediaElement_NetworkState = require("../Web.HTML.HTMLMediaElement.NetworkState/index.js");
var Web_HTML_HTMLMediaElement_ReadyState = require("../Web.HTML.HTMLMediaElement.ReadyState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var readyState = function(el) {
    return Data_Functor.map(Effect.functorEffect)(function() {
        var $0 = Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_ReadyState.HaveNothing.value);
        var $1 = Data_Enum.toEnum(Web_HTML_HTMLMediaElement_ReadyState.boundedEnumReadyState);
        return function($2) {
            return $0($1($2));
        };
    }())(function() {
        return $foreign["_readyState"](el);
    });
};
var networkState = function(el) {
    return Data_Functor.map(Effect.functorEffect)(function() {
        var $3 = Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_NetworkState.Empty.value);
        var $4 = Data_Enum.toEnum(Web_HTML_HTMLMediaElement_NetworkState.boundedEnumNetworkState);
        return function($5) {
            return $3($4($5));
        };
    }())(function() {
        return $foreign["_networkState"](el);
    });
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var canPlayType = function(ty) {
    return function(el) {
        return Data_Functor.map(Effect.functorEffect)(function() {
            var $6 = Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_CanPlayType.Unspecified.value);
            return function($7) {
                return $6(Web_HTML_HTMLMediaElement_CanPlayType.parse($7));
            };
        }())(function() {
            return $foreign["_canPlayType"](ty, el);
        });
    };
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    networkState: networkState,
    canPlayType: canPlayType,
    readyState: readyState,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    currentSrc: $foreign.currentSrc,
    crossOrigin: $foreign.crossOrigin,
    setCrossOrigin: $foreign.setCrossOrigin,
    preload: $foreign.preload,
    setPreload: $foreign.setPreload,
    load: $foreign.load,
    seeking: $foreign.seeking,
    currentTime: $foreign.currentTime,
    setCurrentTime: $foreign.setCurrentTime,
    duration: $foreign.duration,
    getStartDate: $foreign.getStartDate,
    paused: $foreign.paused,
    defaultPlaybackRate: $foreign.defaultPlaybackRate,
    setDefaultPlaybackRate: $foreign.setDefaultPlaybackRate,
    playbackRate: $foreign.playbackRate,
    setPlaybackRate: $foreign.setPlaybackRate,
    ended: $foreign.ended,
    autoplay: $foreign.autoplay,
    setAutoplay: $foreign.setAutoplay,
    loop: $foreign.loop,
    setLoop: $foreign.setLoop,
    play: $foreign.play,
    pause: $foreign.pause,
    mediaGroup: $foreign.mediaGroup,
    setMediaGroup: $foreign.setMediaGroup,
    controls: $foreign.controls,
    setControls: $foreign.setControls,
    volume: $foreign.volume,
    setVolume: $foreign.setVolume,
    muted: $foreign.muted,
    setMuted: $foreign.setMuted,
    defaultMuted: $foreign.defaultMuted,
    setDefaultMuted: $foreign.setDefaultMuted
};

},{"./foreign.js":"bZmGr","../Data.Enum/index.js":"1zIX3","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.HTML.HTMLMediaElement.CanPlayType/index.js":"8fQKb","../Web.HTML.HTMLMediaElement.NetworkState/index.js":"hsIFN","../Web.HTML.HTMLMediaElement.ReadyState/index.js":"1Ty8f","../Web.Internal.FFI/index.js":"1vIWP"}],"bZmGr":[function(require,module,exports) {
"use strict";
exports.src = function(media) {
    return function() {
        return media.src;
    };
};
exports.setSrc = function(src) {
    return function(media) {
        return function() {
            media.src = src;
        };
    };
};
// ----------------------------------------------------------------------------
exports.currentSrc = function(media) {
    return function() {
        return media.currentSrc;
    };
};
// ----------------------------------------------------------------------------
exports.crossOrigin = function(media) {
    return function() {
        return media.crossOrigin;
    };
};
exports.setCrossOrigin = function(crossOrigin) {
    return function(media) {
        return function() {
            media.crossOrigin = crossOrigin;
        };
    };
};
// ----------------------------------------------------------------------------
exports._networkState = function(media) {
    return media.networkState;
};
// ----------------------------------------------------------------------------
exports.preload = function(media) {
    return function() {
        return media.preload;
    };
};
exports.setPreload = function(preload) {
    return function(media) {
        return function() {
            media.preload = preload;
        };
    };
};
// ----------------------------------------------------------------------------
exports.load = function(media) {
    return function() {
        return media.load();
    };
};
// ----------------------------------------------------------------------------
exports._canPlayType = function(type, media) {
    return media.canPlayType(type);
};
// ----------------------------------------------------------------------------
exports._readyState = function(media) {
    return media.readyState;
};
// ----------------------------------------------------------------------------
exports.seeking = function(media) {
    return function() {
        return media.seeking;
    };
};
// ----------------------------------------------------------------------------
exports.currentTime = function(media) {
    return function() {
        return media.currentTime;
    };
};
exports.setCurrentTime = function(currentTime) {
    return function(media) {
        return function() {
            media.currentTime = currentTime;
        };
    };
};
// ----------------------------------------------------------------------------
exports.duration = function(media) {
    return function() {
        return media.duration;
    };
};
// ----------------------------------------------------------------------------
exports.getStartDate = function(media) {
    return function() {
        return media.getStartDate();
    };
};
// ----------------------------------------------------------------------------
exports.paused = function(media) {
    return function() {
        return media.paused;
    };
};
// ----------------------------------------------------------------------------
exports.defaultPlaybackRate = function(media) {
    return function() {
        return media.defaultPlaybackRate;
    };
};
exports.setDefaultPlaybackRate = function(defaultPlaybackRate) {
    return function(media) {
        return function() {
            media.defaultPlaybackRate = defaultPlaybackRate;
        };
    };
};
// ----------------------------------------------------------------------------
exports.playbackRate = function(media) {
    return function() {
        return media.playbackRate;
    };
};
exports.setPlaybackRate = function(playbackRate) {
    return function(media) {
        return function() {
            media.playbackRate = playbackRate;
        };
    };
};
// ----------------------------------------------------------------------------
exports.ended = function(media) {
    return function() {
        return media.ended;
    };
};
// ----------------------------------------------------------------------------
exports.autoplay = function(media) {
    return function() {
        return media.autoplay;
    };
};
exports.setAutoplay = function(autoplay) {
    return function(media) {
        return function() {
            media.autoplay = autoplay;
        };
    };
};
// ----------------------------------------------------------------------------
exports.loop = function(media) {
    return function() {
        return media.loop;
    };
};
exports.setLoop = function(loop) {
    return function(media) {
        return function() {
            media.loop = loop;
        };
    };
};
// ----------------------------------------------------------------------------
exports.play = function(media) {
    return function() {
        media.play();
    };
};
// ----------------------------------------------------------------------------
exports.pause = function(media) {
    return function() {
        media.pause();
    };
};
// ----------------------------------------------------------------------------
exports.mediaGroup = function(media) {
    return function() {
        return media.mediaGroup;
    };
};
exports.setMediaGroup = function(mediaGroup) {
    return function(media) {
        return function() {
            media.mediaGroup = mediaGroup;
        };
    };
};
// ----------------------------------------------------------------------------
exports.controls = function(media) {
    return function() {
        return media.controls;
    };
};
exports.setControls = function(controls) {
    return function(media) {
        return function() {
            media.controls = controls;
        };
    };
};
// ----------------------------------------------------------------------------
exports.volume = function(media) {
    return function() {
        return media.volume;
    };
};
exports.setVolume = function(volume) {
    return function(media) {
        return function() {
            media.volume = volume;
        };
    };
};
// ----------------------------------------------------------------------------
exports.muted = function(media) {
    return function() {
        return media.muted;
    };
};
exports.setMuted = function(muted) {
    return function(media) {
        return function() {
            media.muted = muted;
        };
    };
};
// ----------------------------------------------------------------------------
exports.defaultMuted = function(media) {
    return function() {
        return media.defaultMuted;
    };
};
exports.setDefaultMuted = function(defaultMuted) {
    return function(media) {
        return function() {
            media.defaultMuted = defaultMuted;
        };
    };
};

},{}],"1zIX3":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Enum = function(Ord0, pred, succ) {
    this.Ord0 = Ord0;
    this.pred = pred;
    this.succ = succ;
};
var Cardinality = function(x) {
    return x;
};
var BoundedEnum = function(Bounded0, Enum1, cardinality, fromEnum, toEnum) {
    this.Bounded0 = Bounded0;
    this.Enum1 = Enum1;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.toEnum = toEnum;
};
var toEnum = function(dict) {
    return dict.toEnum;
};
var succ = function(dict) {
    return dict.succ;
};
var upFromIncluding = function(dictEnum) {
    return function(dictUnfoldable1) {
        return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(succ(dictEnum)));
    };
};
var showCardinality = new Data_Show.Show(function(v) {
    return "(Cardinality " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var pred = function(dict) {
    return dict.pred;
};
var ordCardinality = Data_Ord.ordInt;
var newtypeCardinality = new Data_Newtype.Newtype(function() {
    return undefined;
});
var fromEnum = function(dict) {
    return dict.fromEnum;
};
var toEnumWithDefaults = function(dictBoundedEnum) {
    return function(low) {
        return function(high) {
            return function(x) {
                var v = toEnum(dictBoundedEnum)(x);
                if (v instanceof Data_Maybe.Just) return v.value0;
                if (v instanceof Data_Maybe.Nothing) {
                    var $51 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                    if ($51) return low;
                    return high;
                }
                throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [
                    v.constructor.name
                ]);
            };
        };
    };
};
var eqCardinality = Data_Eq.eqInt;
var enumUnit = new Enum(function() {
    return Data_Ord.ordUnit;
}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));
var enumTuple = function(dictEnum) {
    return function(dictBoundedEnum) {
        return new Enum(function() {
            return Data_Tuple.ordTuple(dictEnum.Ord0())(dictBoundedEnum.Enum1().Ord0());
        }, function(v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum.Bounded0())))(pred(dictEnum)(v.value0)))(function() {
                var $93 = Data_Tuple.Tuple.create(v.value0);
                return function($94) {
                    return Data_Maybe.Just.create($93($94));
                };
            }())(pred(dictBoundedEnum.Enum1())(v.value1));
        }, function(v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(succ(dictEnum)(v.value0)))(function() {
                var $95 = Data_Tuple.Tuple.create(v.value0);
                return function($96) {
                    return Data_Maybe.Just.create($95($96));
                };
            }())(succ(dictBoundedEnum.Enum1())(v.value1));
        });
    };
};
var enumOrdering = new Enum(function() {
    return Data_Ord.ordOrdering;
}, function(v) {
    if (v instanceof Data_Ordering.LT) return Data_Maybe.Nothing.value;
    if (v instanceof Data_Ordering.EQ) return new Data_Maybe.Just(Data_Ordering.LT.value);
    if (v instanceof Data_Ordering.GT) return new Data_Maybe.Just(Data_Ordering.EQ.value);
    throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [
        v.constructor.name
    ]);
}, function(v) {
    if (v instanceof Data_Ordering.LT) return new Data_Maybe.Just(Data_Ordering.EQ.value);
    if (v instanceof Data_Ordering.EQ) return new Data_Maybe.Just(Data_Ordering.GT.value);
    if (v instanceof Data_Ordering.GT) return Data_Maybe.Nothing.value;
    throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [
        v.constructor.name
    ]);
});
var enumMaybe = function(dictBoundedEnum) {
    return new Enum(function() {
        return Data_Maybe.ordMaybe(dictBoundedEnum.Enum1().Ord0());
    }, function(v) {
        if (v instanceof Data_Maybe.Nothing) return Data_Maybe.Nothing.value;
        if (v instanceof Data_Maybe.Just) return new Data_Maybe.Just(pred(dictBoundedEnum.Enum1())(v.value0));
        throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [
            v.constructor.name
        ]);
    }, function(v) {
        if (v instanceof Data_Maybe.Nothing) return new Data_Maybe.Just(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum.Bounded0())));
        if (v instanceof Data_Maybe.Just) return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum.Enum1())(v.value0));
        throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [
            v.constructor.name
        ]);
    });
};
var enumInt = new Enum(function() {
    return Data_Ord.ordInt;
}, function(n) {
    var $64 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);
    if ($64) return new Data_Maybe.Just(n - 1 | 0);
    return Data_Maybe.Nothing.value;
}, function(n) {
    var $65 = n < Data_Bounded.top(Data_Bounded.boundedInt);
    if ($65) return new Data_Maybe.Just(n + 1 | 0);
    return Data_Maybe.Nothing.value;
});
var enumFromTo = function(dictEnum) {
    return function(dictUnfoldable1) {
        var go = function(step) {
            return function(op) {
                return function(to) {
                    return function(a) {
                        return new Data_Tuple.Tuple(a, Control_Bind.bind(Data_Maybe.bindMaybe)(step(a))(function(a$prime) {
                            return Data_Functor.voidLeft(Data_Maybe.functorMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(op(a$prime)(to)))(a$prime);
                        }));
                    };
                };
            };
        };
        return function(v) {
            return function(v1) {
                if (Data_Eq.eq(dictEnum.Ord0().Eq0())(v)(v1)) return Data_Unfoldable1.singleton(dictUnfoldable1)(v);
                if (Data_Ord.lessThan(dictEnum.Ord0())(v)(v1)) return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(succ(dictEnum))(Data_Ord.lessThanOrEq(dictEnum.Ord0()))(v1))(v);
                if (Data_Boolean.otherwise) return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(pred(dictEnum))(Data_Ord.greaterThanOrEq(dictEnum.Ord0()))(v1))(v);
                throw new Error("Failed pattern match at Data.Enum (line 186, column 14 - line 190, column 51): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    };
};
var enumFromThenTo = function(dictUnfoldable) {
    return function(dictFunctor) {
        return function(dictBoundedEnum) {
            var go = function(step) {
                return function(to) {
                    return function(e) {
                        if (e <= to) return new Data_Maybe.Just(new Data_Tuple.Tuple(e, e + step | 0));
                        if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
                        throw new Error("Failed pattern match at Data.Enum (line 217, column 5 - line 219, column 28): " + [
                            step.constructor.name,
                            to.constructor.name,
                            e.constructor.name
                        ]);
                    };
                };
            };
            return function(a) {
                return function(b) {
                    return function(c) {
                        var c$prime = fromEnum(dictBoundedEnum)(c);
                        var b$prime = fromEnum(dictBoundedEnum)(b);
                        var a$prime = fromEnum(dictBoundedEnum)(a);
                        return Data_Functor.map(dictFunctor)(function() {
                            var $97 = Data_Maybe.fromJust();
                            var $98 = toEnum(dictBoundedEnum);
                            return function($99) {
                                return $97($98($99));
                            };
                        }())(Data_Unfoldable.unfoldr(dictUnfoldable)(go(b$prime - a$prime | 0)(c$prime))(a$prime));
                    };
                };
            };
        };
    };
};
var enumEither = function(dictBoundedEnum) {
    return function(dictBoundedEnum1) {
        return new Enum(function() {
            return Data_Either.ordEither(dictBoundedEnum.Enum1().Ord0())(dictBoundedEnum1.Enum1().Ord0());
        }, function(v) {
            if (v instanceof Data_Either.Left) return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function($100) {
                return Data_Maybe.Just.create(Data_Either.Left.create($100));
            })(pred(dictBoundedEnum.Enum1())(v.value0));
            if (v instanceof Data_Either.Right) return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function($101) {
                return Data_Maybe.Just.create(Data_Either.Right.create($101));
            })(pred(dictBoundedEnum1.Enum1())(v.value0));
            throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [
                v.constructor.name
            ]);
        }, function(v) {
            if (v instanceof Data_Either.Left) return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1.Bounded0()))))(function($102) {
                return Data_Maybe.Just.create(Data_Either.Left.create($102));
            })(succ(dictBoundedEnum.Enum1())(v.value0));
            if (v instanceof Data_Either.Right) return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function($103) {
                return Data_Maybe.Just.create(Data_Either.Right.create($103));
            })(succ(dictBoundedEnum1.Enum1())(v.value0));
            throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [
                v.constructor.name
            ]);
        });
    };
};
var enumBoolean = new Enum(function() {
    return Data_Ord.ordBoolean;
}, function(v) {
    if (v) return new Data_Maybe.Just(false);
    return Data_Maybe.Nothing.value;
}, function(v) {
    if (!v) return new Data_Maybe.Just(true);
    return Data_Maybe.Nothing.value;
});
var downFromIncluding = function(dictEnum) {
    return function(dictUnfoldable1) {
        return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(pred(dictEnum)));
    };
};
var diag = function(a) {
    return new Data_Tuple.Tuple(a, a);
};
var downFrom = function(dictEnum) {
    return function(dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function() {
            var $104 = Data_Functor.map(Data_Maybe.functorMaybe)(diag);
            var $105 = pred(dictEnum);
            return function($106) {
                return $104($105($106));
            };
        }());
    };
};
var upFrom = function(dictEnum) {
    return function(dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function() {
            var $107 = Data_Functor.map(Data_Maybe.functorMaybe)(diag);
            var $108 = succ(dictEnum);
            return function($109) {
                return $107($108($109));
            };
        }());
    };
};
var defaultToEnum = function(dictBounded) {
    return function(dictEnum) {
        return function(i$prime) {
            var go = function($copy_i) {
                return function($copy_x) {
                    var $tco_var_i = $copy_i;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(i, x) {
                        var $79 = i === 0;
                        if ($79) {
                            $tco_done = true;
                            return new Data_Maybe.Just(x);
                        }
                        var v = succ(dictEnum)(x);
                        if (v instanceof Data_Maybe.Just) {
                            $tco_var_i = i - 1 | 0;
                            $copy_x = v.value0;
                            return;
                        }
                        if (v instanceof Data_Maybe.Nothing) {
                            $tco_done = true;
                            return Data_Maybe.Nothing.value;
                        }
                        throw new Error("Failed pattern match at Data.Enum (line 296, column 12 - line 298, column 33): " + [
                            v.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_i, $copy_x);
                    return $tco_result;
                };
            };
            var $82 = i$prime < 0;
            if ($82) return Data_Maybe.Nothing.value;
            return go(i$prime)(Data_Bounded.bottom(dictBounded));
        };
    };
};
var defaultSucc = function(toEnum$prime) {
    return function(fromEnum$prime) {
        return function(a) {
            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
        };
    };
};
var defaultPred = function(toEnum$prime) {
    return function(fromEnum$prime) {
        return function(a) {
            return toEnum$prime(fromEnum$prime(a) - 1 | 0);
        };
    };
};
var defaultFromEnum = function(dictEnum) {
    var go = function($copy_i) {
        return function($copy_x) {
            var $tco_var_i = $copy_i;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i, x) {
                var v = pred(dictEnum)(x);
                if (v instanceof Data_Maybe.Just) {
                    $tco_var_i = i + 1 | 0;
                    $copy_x = v.value0;
                    return;
                }
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return i;
                }
                throw new Error("Failed pattern match at Data.Enum (line 309, column 5 - line 311, column 19): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_i, $copy_x);
            return $tco_result;
        };
    };
    return go(0);
};
var defaultCardinality = function(dictBounded) {
    return function(dictEnum) {
        var go = function($copy_i) {
            return function($copy_x) {
                var $tco_var_i = $copy_i;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(i, x) {
                    var v = succ(dictEnum)(x);
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_i = i + 1 | 0;
                        $copy_x = v.value0;
                        return;
                    }
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return i;
                    }
                    throw new Error("Failed pattern match at Data.Enum (line 276, column 5 - line 278, column 19): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_i, $copy_x);
                return $tco_result;
            };
        };
        return Cardinality(go(1)(Data_Bounded.bottom(dictBounded)));
    };
};
var charToEnum = function(v) {
    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) return new Data_Maybe.Just($foreign.fromCharCode(v));
    return Data_Maybe.Nothing.value;
};
var enumChar = new Enum(function() {
    return Data_Ord.ordChar;
}, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
var cardinality = function(dict) {
    return dict.cardinality;
};
var boundedEnumUnit = new BoundedEnum(function() {
    return Data_Bounded.boundedUnit;
}, function() {
    return enumUnit;
}, 1, Data_Function["const"](0), function(v) {
    if (v === 0) return new Data_Maybe.Just(Data_Unit.unit);
    return Data_Maybe.Nothing.value;
});
var boundedEnumOrdering = new BoundedEnum(function() {
    return Data_Bounded.boundedOrdering;
}, function() {
    return enumOrdering;
}, 3, function(v) {
    if (v instanceof Data_Ordering.LT) return 0;
    if (v instanceof Data_Ordering.EQ) return 1;
    if (v instanceof Data_Ordering.GT) return 2;
    throw new Error("Failed pattern match at Data.Enum (line 137, column 1 - line 145, column 18): " + [
        v.constructor.name
    ]);
}, function(v) {
    if (v === 0) return new Data_Maybe.Just(Data_Ordering.LT.value);
    if (v === 1) return new Data_Maybe.Just(Data_Ordering.EQ.value);
    if (v === 2) return new Data_Maybe.Just(Data_Ordering.GT.value);
    return Data_Maybe.Nothing.value;
});
var boundedEnumChar = new BoundedEnum(function() {
    return Data_Bounded.boundedChar;
}, function() {
    return enumChar;
}, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
var boundedEnumBoolean = new BoundedEnum(function() {
    return Data_Bounded.boundedBoolean;
}, function() {
    return enumBoolean;
}, 2, function(v) {
    if (!v) return 0;
    if (v) return 1;
    throw new Error("Failed pattern match at Data.Enum (line 118, column 1 - line 124, column 20): " + [
        v.constructor.name
    ]);
}, function(v) {
    if (v === 0) return new Data_Maybe.Just(false);
    if (v === 1) return new Data_Maybe.Just(true);
    return Data_Maybe.Nothing.value;
});
module.exports = {
    Enum: Enum,
    succ: succ,
    pred: pred,
    BoundedEnum: BoundedEnum,
    cardinality: cardinality,
    toEnum: toEnum,
    fromEnum: fromEnum,
    toEnumWithDefaults: toEnumWithDefaults,
    Cardinality: Cardinality,
    enumFromTo: enumFromTo,
    enumFromThenTo: enumFromThenTo,
    upFrom: upFrom,
    upFromIncluding: upFromIncluding,
    downFrom: downFrom,
    downFromIncluding: downFromIncluding,
    defaultSucc: defaultSucc,
    defaultPred: defaultPred,
    defaultCardinality: defaultCardinality,
    defaultToEnum: defaultToEnum,
    defaultFromEnum: defaultFromEnum,
    enumBoolean: enumBoolean,
    enumInt: enumInt,
    enumChar: enumChar,
    enumUnit: enumUnit,
    enumOrdering: enumOrdering,
    enumMaybe: enumMaybe,
    enumEither: enumEither,
    enumTuple: enumTuple,
    boundedEnumBoolean: boundedEnumBoolean,
    boundedEnumChar: boundedEnumChar,
    boundedEnumUnit: boundedEnumUnit,
    boundedEnumOrdering: boundedEnumOrdering,
    newtypeCardinality: newtypeCardinality,
    eqCardinality: eqCardinality,
    ordCardinality: ordCardinality,
    showCardinality: showCardinality
};

},{"./foreign.js":"jsWlJ","../Control.Alternative/index.js":"bgcOZ","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Data.Boolean/index.js":"lv1qw","../Data.Bounded/index.js":"jzt4h","../Data.Either/index.js":"3WZha","../Data.Eq/index.js":"c3b8F","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk","../Data.Unfoldable1/index.js":"Daf7x","../Data.Unit/index.js":"d7oKp"}],"jsWlJ":[function(require,module,exports) {
"use strict";
exports.toCharCode = function(c) {
    return c.charCodeAt(0);
};
exports.fromCharCode = function(c) {
    return String.fromCharCode(c);
};

},{}],"5NUrk":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Unfoldable = function(Unfoldable10, unfoldr) {
    this.Unfoldable10 = Unfoldable10;
    this.unfoldr = unfoldr;
};
var unfoldr = function(dict) {
    return dict.unfoldr;
};
var unfoldableMaybe = new Unfoldable(function() {
    return Data_Unfoldable1.unfoldable1Maybe;
}, function(f) {
    return function(b) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst)(f(b));
    };
});
var unfoldableArray = new Unfoldable(function() {
    return Data_Unfoldable1.unfoldable1Array;
}, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
var replicate = function(dictUnfoldable) {
    return function(n) {
        return function(v) {
            var step = function(i) {
                var $7 = i <= 0;
                if ($7) return Data_Maybe.Nothing.value;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
            };
            return unfoldr(dictUnfoldable)(step)(n);
        };
    };
};
var replicateA = function(dictApplicative) {
    return function(dictUnfoldable) {
        return function(dictTraversable) {
            return function(n) {
                return function(m) {
                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                };
            };
        };
    };
};
var none = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};
var fromMaybe = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function(b) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
    });
};
module.exports = {
    Unfoldable: Unfoldable,
    unfoldr: unfoldr,
    replicate: replicate,
    replicateA: replicateA,
    none: none,
    fromMaybe: fromMaybe,
    unfoldableArray: unfoldableArray,
    unfoldableMaybe: unfoldableMaybe,
    Unfoldable1: Data_Unfoldable1.Unfoldable1,
    range: Data_Unfoldable1.range,
    replicate1: Data_Unfoldable1.replicate1,
    replicate1A: Data_Unfoldable1.replicate1A,
    singleton: Data_Unfoldable1.singleton,
    unfoldr1: Data_Unfoldable1.unfoldr1
};

},{"./foreign.js":"kKqNB","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Traversable/index.js":"i5Kon","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable1/index.js":"Daf7x","../Data.Unit/index.js":"d7oKp"}],"kKqNB":[function(require,module,exports) {
"use strict";
exports.unfoldrArrayImpl = function(isNothing) {
    return function(fromJust) {
        return function(fst) {
            return function(snd) {
                return function(f) {
                    return function(b) {
                        var result = [];
                        var value = b;
                        while(true){
                            var maybe = f(value);
                            if (isNothing(maybe)) return result;
                            var tuple = fromJust(maybe);
                            result.push(fst(tuple));
                            value = snd(tuple);
                        }
                    };
                };
            };
        };
    };
};

},{}],"Daf7x":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Unfoldable1 = function(unfoldr1) {
    this.unfoldr1 = unfoldr1;
};
var unfoldr1 = function(dict) {
    return dict.unfoldr1;
};
var unfoldable1Maybe = new Unfoldable1(function(f) {
    return function(b) {
        return new Data_Maybe.Just(Data_Tuple.fst(f(b)));
    };
});
var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
var replicate1 = function(dictUnfoldable1) {
    return function(n) {
        return function(v) {
            var step = function(i) {
                if (i <= 0) return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);
                if (Data_Boolean.otherwise) return new Data_Tuple.Tuple(v, new Data_Maybe.Just(i - 1 | 0));
                throw new Error("Failed pattern match at Data.Unfoldable1 (line 67, column 5 - line 67, column 39): " + [
                    i.constructor.name
                ]);
            };
            return unfoldr1(dictUnfoldable1)(step)(n - 1 | 0);
        };
    };
};
var replicate1A = function(dictApply) {
    return function(dictUnfoldable1) {
        return function(dictTraversable1) {
            return function(n) {
                return function(m) {
                    return Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(replicate1(dictUnfoldable1)(n)(m));
                };
            };
        };
    };
};
var singleton = function(dictUnfoldable1) {
    return replicate1(dictUnfoldable1)(1);
};
var range = function(dictUnfoldable1) {
    return function(start) {
        return function(end) {
            var go = function(delta) {
                return function(i) {
                    var i$prime = i + delta | 0;
                    return new Data_Tuple.Tuple(i, function() {
                        var $8 = i === end;
                        if ($8) return Data_Maybe.Nothing.value;
                        return new Data_Maybe.Just(i$prime);
                    }());
                };
            };
            var delta = function() {
                var $9 = end >= start;
                if ($9) return 1;
                return -1;
            }();
            return unfoldr1(dictUnfoldable1)(go(delta))(start);
        };
    };
};
module.exports = {
    Unfoldable1: Unfoldable1,
    unfoldr1: unfoldr1,
    replicate1: replicate1,
    replicate1A: replicate1A,
    singleton: singleton,
    range: range,
    unfoldable1Array: unfoldable1Array,
    unfoldable1Maybe: unfoldable1Maybe
};

},{"./foreign.js":"6M6Cy","../Data.Boolean/index.js":"lv1qw","../Data.Maybe/index.js":"ePH81","../Data.Semigroup.Traversable/index.js":"kPmtP","../Data.Tuple/index.js":"eOBbM"}],"6M6Cy":[function(require,module,exports) {
"use strict";
exports.unfoldr1ArrayImpl = function(isNothing) {
    return function(fromJust) {
        return function(fst) {
            return function(snd) {
                return function(f) {
                    return function(b) {
                        var result = [];
                        var value = b;
                        while(true){
                            var tuple = f(value);
                            result.push(fst(tuple));
                            var maybe = snd(tuple);
                            if (isNothing(maybe)) return result;
                            value = fromJust(maybe);
                        }
                    };
                };
            };
        };
    };
};

},{}],"kPmtP":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Traversable1 = function(Foldable10, Traversable11, sequence1, traverse1) {
    this.Foldable10 = Foldable10;
    this.Traversable1 = Traversable11;
    this.sequence1 = sequence1;
    this.traverse1 = traverse1;
};
var traverse1 = function(dict) {
    return dict.traverse1;
};
var traversableTuple = new Traversable1(function() {
    return Data_Semigroup_Foldable.foldableTuple;
}, function() {
    return Data_Traversable.traversableTuple;
}, function(dictApply) {
    return function(v) {
        return Data_Functor.map(dictApply.Functor0())(Data_Tuple.Tuple.create(v.value0))(v.value1);
    };
}, function(dictApply) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApply.Functor0())(Data_Tuple.Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var traversableIdentity = new Traversable1(function() {
    return Data_Semigroup_Foldable.foldableIdentity;
}, function() {
    return Data_Traversable.traversableIdentity;
}, function(dictApply) {
    return function(v) {
        return Data_Functor.map(dictApply.Functor0())(Data_Identity.Identity)(v);
    };
}, function(dictApply) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApply.Functor0())(Data_Identity.Identity)(f(v));
        };
    };
});
var sequence1Default = function(dictTraversable1) {
    return function(dictApply) {
        return traverse1(dictTraversable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var traversableDual = new Traversable1(function() {
    return Data_Semigroup_Foldable.foldableDual;
}, function() {
    return Data_Traversable.traversableDual;
}, function(dictApply) {
    return sequence1Default(traversableDual)(dictApply);
}, function(dictApply) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableMultiplicative = new Traversable1(function() {
    return Data_Semigroup_Foldable.foldableMultiplicative;
}, function() {
    return Data_Traversable.traversableMultiplicative;
}, function(dictApply) {
    return sequence1Default(traversableMultiplicative)(dictApply);
}, function(dictApply) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var sequence1 = function(dict) {
    return dict.sequence1;
};
var traverse1Default = function(dictTraversable1) {
    return function(dictApply) {
        return function(f) {
            return function(ta) {
                return sequence1(dictTraversable1)(dictApply)(Data_Functor.map(dictTraversable1.Traversable1().Functor0())(f)(ta));
            };
        };
    };
};
module.exports = {
    sequence1: sequence1,
    traverse1: traverse1,
    Traversable1: Traversable1,
    traverse1Default: traverse1Default,
    sequence1Default: sequence1Default,
    traversableDual: traversableDual,
    traversableMultiplicative: traversableMultiplicative,
    traversableTuple: traversableTuple,
    traversableIdentity: traversableIdentity
};

},{"../Control.Category/index.js":"dfcPK","../Data.Functor/index.js":"iy1jO","../Data.Identity/index.js":"3qeSN","../Data.Monoid.Dual/index.js":"9K8EM","../Data.Monoid.Multiplicative/index.js":"ks234","../Data.Semigroup.Foldable/index.js":"lM4gt","../Data.Traversable/index.js":"i5Kon","../Data.Tuple/index.js":"eOBbM"}],"lM4gt":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord_Max = require("../Data.Ord.Max/index.js");
var Data_Ord_Min = require("../Data.Ord.Min/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var JoinWith = function(x) {
    return x;
};
var Foldable1 = function(Foldable0, foldMap1, foldl1, foldr1) {
    this.Foldable0 = Foldable0;
    this.foldMap1 = foldMap1;
    this.foldl1 = foldl1;
    this.foldr1 = foldr1;
};
var FoldRight1 = function() {
    function FoldRight11(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    FoldRight11.create = function(value0) {
        return function(value1) {
            return new FoldRight11(value0, value1);
        };
    };
    return FoldRight11;
}();
var Act = function(x) {
    return x;
};
var semigroupJoinWith = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return JoinWith(function(j) {
                return Data_Semigroup.append(dictSemigroup)(v(j))(Data_Semigroup.append(dictSemigroup)(j)(v1(j)));
            });
        };
    });
};
var semigroupAct = function(dictApply) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return Control_Apply.applySecond(dictApply)(v)(v1);
        };
    });
};
var runFoldRight1 = function(v) {
    return v.value0(v.value1);
};
var mkFoldRight1 = FoldRight1.create(Data_Function["const"]);
var joinee = function(v) {
    return v;
};
var getAct = function(v) {
    return v;
};
var foldr1 = function(dict) {
    return dict.foldr1;
};
var foldl1 = function(dict) {
    return dict.foldl1;
};
var maximumBy = function(dictFoldable1) {
    return function(cmp) {
        return foldl1(dictFoldable1)(function(x) {
            return function(y) {
                var $74 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
                if ($74) return x;
                return y;
            };
        });
    };
};
var minimumBy = function(dictFoldable1) {
    return function(cmp) {
        return foldl1(dictFoldable1)(function(x) {
            return function(y) {
                var $75 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.LT.value);
                if ($75) return x;
                return y;
            };
        });
    };
};
var foldableTuple = new Foldable1(function() {
    return Data_Foldable.foldableTuple;
}, function(dictSemigroup) {
    return function(f) {
        return function(v) {
            return f(v.value1);
        };
    };
}, function(v) {
    return function(v1) {
        return v1.value1;
    };
}, function(v) {
    return function(v1) {
        return v1.value1;
    };
});
var foldableMultiplicative = new Foldable1(function() {
    return Data_Foldable.foldableMultiplicative;
}, function(dictSemigroup) {
    return function(f) {
        return function(v) {
            return f(v);
        };
    };
}, function(v) {
    return function(v1) {
        return v1;
    };
}, function(v) {
    return function(v1) {
        return v1;
    };
});
var foldableIdentity = new Foldable1(function() {
    return Data_Foldable.foldableIdentity;
}, function(dictSemigroup) {
    return function(f) {
        return function(v) {
            return f(v);
        };
    };
}, function(v) {
    return function(v1) {
        return v1;
    };
}, function(v) {
    return function(v1) {
        return v1;
    };
});
var foldableDual = new Foldable1(function() {
    return Data_Foldable.foldableDual;
}, function(dictSemigroup) {
    return function(f) {
        return function(v) {
            return f(v);
        };
    };
}, function(v) {
    return function(v1) {
        return v1;
    };
}, function(v) {
    return function(v1) {
        return v1;
    };
});
var foldRight1Semigroup = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        return new FoldRight1(function(a) {
            return function(f) {
                return v.value0(f(v.value1)(v1.value0(a)(f)))(f);
            };
        }, v1.value1);
    };
});
var foldMap1DefaultR = function(dictFoldable1) {
    return function(dictFunctor) {
        return function(dictSemigroup) {
            return function(f) {
                var $112 = foldr1(dictFoldable1)(Data_Semigroup.append(dictSemigroup));
                var $113 = Data_Functor.map(dictFunctor)(f);
                return function($114) {
                    return $112($113($114));
                };
            };
        };
    };
};
var foldMap1DefaultL = function(dictFoldable1) {
    return function(dictFunctor) {
        return function(dictSemigroup) {
            return function(f) {
                var $115 = foldl1(dictFoldable1)(Data_Semigroup.append(dictSemigroup));
                var $116 = Data_Functor.map(dictFunctor)(f);
                return function($117) {
                    return $115($116($117));
                };
            };
        };
    };
};
var foldMap1Default = function(dictWarn) {
    return function(dictFoldable1) {
        return function(dictFunctor) {
            return function(dictSemigroup) {
                return foldMap1DefaultL(dictFoldable1)(dictFunctor)(dictSemigroup);
            };
        };
    };
};
var foldMap1 = function(dict) {
    return dict.foldMap1;
};
var foldl1Default = function(dictFoldable1) {
    var $118 = Data_Function.flip(function() {
        var $120 = Data_Newtype.alaF()()()()(Data_Monoid_Dual.Dual)(foldMap1(dictFoldable1)(Data_Monoid_Dual.semigroupDual(foldRight1Semigroup)))(mkFoldRight1);
        return function($121) {
            return runFoldRight1($120($121));
        };
    }());
    return function($119) {
        return $118(Data_Function.flip($119));
    };
};
var foldr1Default = function(dictFoldable1) {
    return Data_Function.flip(function() {
        var $122 = foldMap1(dictFoldable1)(foldRight1Semigroup)(mkFoldRight1);
        return function($123) {
            return runFoldRight1($122($123));
        };
    }());
};
var intercalateMap = function(dictFoldable1) {
    return function(dictSemigroup) {
        return function(j) {
            return function(f) {
                return function(foldable) {
                    return joinee(foldMap1(dictFoldable1)(semigroupJoinWith(dictSemigroup))(function($124) {
                        return JoinWith(Data_Function["const"](f($124)));
                    })(foldable))(j);
                };
            };
        };
    };
};
var intercalate = function(dictFoldable1) {
    return function(dictSemigroup) {
        return Data_Function.flip(intercalateMap(dictFoldable1)(dictSemigroup))(Control_Category.identity(Control_Category.categoryFn));
    };
};
var maximum = function(dictOrd) {
    return function(dictFoldable1) {
        return Data_Newtype.ala()()()(Data_Ord_Max.Max)(foldMap1(dictFoldable1)(Data_Ord_Max.semigroupMax(dictOrd)));
    };
};
var minimum = function(dictOrd) {
    return function(dictFoldable1) {
        return Data_Newtype.ala()()()(Data_Ord_Min.Min)(foldMap1(dictFoldable1)(Data_Ord_Min.semigroupMin(dictOrd)));
    };
};
var traverse1_ = function(dictFoldable1) {
    return function(dictApply) {
        return function(f) {
            return function(t) {
                return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function($125) {
                    return Act(f($125));
                })(t)));
            };
        };
    };
};
var for1_ = function(dictFoldable1) {
    return function(dictApply) {
        return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
    };
};
var sequence1_ = function(dictFoldable1) {
    return function(dictApply) {
        return traverse1_(dictFoldable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var fold1 = function(dictFoldable1) {
    return function(dictSemigroup) {
        return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.identity(Control_Category.categoryFn));
    };
};
module.exports = {
    Foldable1: Foldable1,
    foldMap1: foldMap1,
    fold1: fold1,
    foldr1: foldr1,
    foldl1: foldl1,
    traverse1_: traverse1_,
    for1_: for1_,
    sequence1_: sequence1_,
    foldr1Default: foldr1Default,
    foldl1Default: foldl1Default,
    foldMap1DefaultR: foldMap1DefaultR,
    foldMap1DefaultL: foldMap1DefaultL,
    foldMap1Default: foldMap1Default,
    intercalate: intercalate,
    intercalateMap: intercalateMap,
    maximum: maximum,
    maximumBy: maximumBy,
    minimum: minimum,
    minimumBy: minimumBy,
    foldableDual: foldableDual,
    foldableMultiplicative: foldableMultiplicative,
    foldableTuple: foldableTuple,
    foldableIdentity: foldableIdentity
};

},{"../Control.Apply/index.js":"cnlqg","../Control.Category/index.js":"dfcPK","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Monoid.Dual/index.js":"9K8EM","../Data.Newtype/index.js":"czJbt","../Data.Ord.Max/index.js":"4OJD6","../Data.Ord.Min/index.js":"bYnWj","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Unit/index.js":"d7oKp"}],"4OJD6":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Max = function(x) {
    return x;
};
var showMax = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Max " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMax = function(dictOrd) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return Data_Ord.max(dictOrd)(v)(v1);
        };
    });
};
var newtypeMax = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monoidMax = function(dictBounded) {
    return new Data_Monoid.Monoid(function() {
        return semigroupMax(dictBounded.Ord0());
    }, Data_Bounded.bottom(dictBounded));
};
var eqMax = function(dictEq) {
    return dictEq;
};
var ordMax = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqMax(dictOrd.Eq0());
    }, function(v) {
        return function(v1) {
            return Data_Ord.compare(dictOrd)(v)(v1);
        };
    });
};
module.exports = {
    Max: Max,
    newtypeMax: newtypeMax,
    eqMax: eqMax,
    ordMax: ordMax,
    semigroupMax: semigroupMax,
    monoidMax: monoidMax,
    showMax: showMax
};

},{"../Data.Bounded/index.js":"jzt4h","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW"}],"bYnWj":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Min = function(x) {
    return x;
};
var showMin = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Min " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMin = function(dictOrd) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return Data_Ord.min(dictOrd)(v)(v1);
        };
    });
};
var newtypeMin = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monoidMin = function(dictBounded) {
    return new Data_Monoid.Monoid(function() {
        return semigroupMin(dictBounded.Ord0());
    }, Data_Bounded.top(dictBounded));
};
var eqMin = function(dictEq) {
    return dictEq;
};
var ordMin = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqMin(dictOrd.Eq0());
    }, function(v) {
        return function(v1) {
            return Data_Ord.compare(dictOrd)(v)(v1);
        };
    });
};
module.exports = {
    Min: Min,
    newtypeMin: newtypeMin,
    eqMin: eqMin,
    ordMin: ordMin,
    semigroupMin: semigroupMin,
    monoidMin: monoidMin,
    showMin: showMin
};

},{"../Data.Bounded/index.js":"jzt4h","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW"}],"8fQKb":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Unspecified = function() {
    function Unspecified1() {
    }
    Unspecified1.value = new Unspecified1();
    return Unspecified1;
}();
var Maybe = function() {
    function Maybe1() {
    }
    Maybe1.value = new Maybe1();
    return Maybe1;
}();
var Probably = function() {
    function Probably1() {
    }
    Probably1.value = new Probably1();
    return Probably1;
}();
var showCanPlayType = new Data_Show.Show(function(v) {
    if (v instanceof Unspecified) return "Unspecified";
    if (v instanceof Maybe) return "Maybe";
    if (v instanceof Probably) return "Probably";
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 16, column 10 - line 19, column 27): " + [
        v.constructor.name
    ]);
});
var print = function(v) {
    if (v instanceof Unspecified) return "";
    if (v instanceof Maybe) return "maybe";
    if (v instanceof Probably) return "probably";
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 29, column 9 - line 32, column 25): " + [
        v.constructor.name
    ]);
};
var parse = function(v) {
    if (v === "") return new Data_Maybe.Just(Unspecified.value);
    if (v === "maybe") return new Data_Maybe.Just(Maybe.value);
    if (v === "probably") return new Data_Maybe.Just(Probably.value);
    return Data_Maybe.Nothing.value;
};
var eqCanPlayType = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof Unspecified && y instanceof Unspecified) return true;
        if (x instanceof Maybe && y instanceof Maybe) return true;
        if (x instanceof Probably && y instanceof Probably) return true;
        return false;
    };
});
var ordCanPlayType = new Data_Ord.Ord(function() {
    return eqCanPlayType;
}, function(x) {
    return function(y) {
        if (x instanceof Unspecified && y instanceof Unspecified) return Data_Ordering.EQ.value;
        if (x instanceof Unspecified) return Data_Ordering.LT.value;
        if (y instanceof Unspecified) return Data_Ordering.GT.value;
        if (x instanceof Maybe && y instanceof Maybe) return Data_Ordering.EQ.value;
        if (x instanceof Maybe) return Data_Ordering.LT.value;
        if (y instanceof Maybe) return Data_Ordering.GT.value;
        if (x instanceof Probably && y instanceof Probably) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 13, column 1 - line 13, column 50): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
module.exports = {
    Unspecified: Unspecified,
    Maybe: Maybe,
    Probably: Probably,
    parse: parse,
    print: print,
    eqCanPlayType: eqCanPlayType,
    ordCanPlayType: ordCanPlayType,
    showCanPlayType: showCanPlayType
};

},{"../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW"}],"hsIFN":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Empty = function() {
    function Empty1() {
    }
    Empty1.value = new Empty1();
    return Empty1;
}();
var Idle = function() {
    function Idle1() {
    }
    Idle1.value = new Idle1();
    return Idle1;
}();
var Loading = function() {
    function Loading1() {
    }
    Loading1.value = new Loading1();
    return Loading1;
}();
var NoSource = function() {
    function NoSource1() {
    }
    NoSource1.value = new NoSource1();
    return NoSource1;
}();
var toEnumNetworkState = function(v) {
    if (v === 0) return new Data_Maybe.Just(Empty.value);
    if (v === 1) return new Data_Maybe.Just(Idle.value);
    if (v === 2) return new Data_Maybe.Just(Loading.value);
    if (v === 3) return new Data_Maybe.Just(NoSource.value);
    return Data_Maybe.Nothing.value;
};
var showNetworkState = new Data_Show.Show(function(v) {
    if (v instanceof Empty) return "Empty";
    if (v instanceof Idle) return "Idle";
    if (v instanceof Loading) return "Loading";
    if (v instanceof NoSource) return "NoSource";
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 29, column 1 - line 33, column 29): " + [
        v.constructor.name
    ]);
});
var fromEnumNetworkState = function(v) {
    if (v instanceof Empty) return 0;
    if (v instanceof Idle) return 1;
    if (v instanceof Loading) return 2;
    if (v instanceof NoSource) return 3;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 46, column 3 - line 50, column 18): " + [
        v.constructor.name
    ]);
};
var eqNetworkState = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof Empty && y instanceof Empty) return true;
        if (x instanceof Idle && y instanceof Idle) return true;
        if (x instanceof Loading && y instanceof Loading) return true;
        if (x instanceof NoSource && y instanceof NoSource) return true;
        return false;
    };
});
var ordNetworkState = new Data_Ord.Ord(function() {
    return eqNetworkState;
}, function(x) {
    return function(y) {
        if (x instanceof Empty && y instanceof Empty) return Data_Ordering.EQ.value;
        if (x instanceof Empty) return Data_Ordering.LT.value;
        if (y instanceof Empty) return Data_Ordering.GT.value;
        if (x instanceof Idle && y instanceof Idle) return Data_Ordering.EQ.value;
        if (x instanceof Idle) return Data_Ordering.LT.value;
        if (y instanceof Idle) return Data_Ordering.GT.value;
        if (x instanceof Loading && y instanceof Loading) return Data_Ordering.EQ.value;
        if (x instanceof Loading) return Data_Ordering.LT.value;
        if (y instanceof Loading) return Data_Ordering.GT.value;
        if (x instanceof NoSource && y instanceof NoSource) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 14, column 1 - line 14, column 52): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
var enumNetworkState = new Data_Enum.Enum(function() {
    return ordNetworkState;
}, Data_Enum.defaultPred(toEnumNetworkState)(fromEnumNetworkState), Data_Enum.defaultSucc(toEnumNetworkState)(fromEnumNetworkState));
var boundedNetworkState = new Data_Bounded.Bounded(function() {
    return ordNetworkState;
}, Empty.value, NoSource.value);
var boundedEnumNetworkState = new Data_Enum.BoundedEnum(function() {
    return boundedNetworkState;
}, function() {
    return enumNetworkState;
}, 4, fromEnumNetworkState, toEnumNetworkState);
module.exports = {
    Empty: Empty,
    Idle: Idle,
    Loading: Loading,
    NoSource: NoSource,
    eqNetworkState: eqNetworkState,
    ordNetworkState: ordNetworkState,
    boundedNetworkState: boundedNetworkState,
    enumNetworkState: enumNetworkState,
    boundedEnumNetworkState: boundedEnumNetworkState,
    showNetworkState: showNetworkState
};

},{"../Data.Bounded/index.js":"jzt4h","../Data.Enum/index.js":"1zIX3","../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW"}],"1Ty8f":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var HaveNothing = function() {
    function HaveNothing1() {
    }
    HaveNothing1.value = new HaveNothing1();
    return HaveNothing1;
}();
var HaveMetadata = function() {
    function HaveMetadata1() {
    }
    HaveMetadata1.value = new HaveMetadata1();
    return HaveMetadata1;
}();
var HaveCurrentData = function() {
    function HaveCurrentData1() {
    }
    HaveCurrentData1.value = new HaveCurrentData1();
    return HaveCurrentData1;
}();
var HaveFutureData = function() {
    function HaveFutureData1() {
    }
    HaveFutureData1.value = new HaveFutureData1();
    return HaveFutureData1;
}();
var HaveEnoughData = function() {
    function HaveEnoughData1() {
    }
    HaveEnoughData1.value = new HaveEnoughData1();
    return HaveEnoughData1;
}();
var toEnumReadyState = function(v) {
    if (v === 0) return new Data_Maybe.Just(HaveNothing.value);
    if (v === 1) return new Data_Maybe.Just(HaveMetadata.value);
    if (v === 2) return new Data_Maybe.Just(HaveCurrentData.value);
    if (v === 3) return new Data_Maybe.Just(HaveFutureData.value);
    if (v === 4) return new Data_Maybe.Just(HaveEnoughData.value);
    return Data_Maybe.Nothing.value;
};
var showReadyState = new Data_Show.Show(function(v) {
    if (v instanceof HaveNothing) return "HaveNothing";
    if (v instanceof HaveMetadata) return "HaveMetadata";
    if (v instanceof HaveCurrentData) return "HaveCurrentData";
    if (v instanceof HaveFutureData) return "HaveFutureData";
    if (v instanceof HaveEnoughData) return "HaveEnoughData";
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 30, column 1 - line 35, column 41): " + [
        v.constructor.name
    ]);
});
var fromEnumReadyState = function(v) {
    if (v instanceof HaveNothing) return 0;
    if (v instanceof HaveMetadata) return 1;
    if (v instanceof HaveCurrentData) return 2;
    if (v instanceof HaveFutureData) return 3;
    if (v instanceof HaveEnoughData) return 4;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 49, column 3 - line 54, column 24): " + [
        v.constructor.name
    ]);
};
var eqReadyState = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof HaveNothing && y instanceof HaveNothing) return true;
        if (x instanceof HaveMetadata && y instanceof HaveMetadata) return true;
        if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) return true;
        if (x instanceof HaveFutureData && y instanceof HaveFutureData) return true;
        if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) return true;
        return false;
    };
});
var ordReadyState = new Data_Ord.Ord(function() {
    return eqReadyState;
}, function(x) {
    return function(y) {
        if (x instanceof HaveNothing && y instanceof HaveNothing) return Data_Ordering.EQ.value;
        if (x instanceof HaveNothing) return Data_Ordering.LT.value;
        if (y instanceof HaveNothing) return Data_Ordering.GT.value;
        if (x instanceof HaveMetadata && y instanceof HaveMetadata) return Data_Ordering.EQ.value;
        if (x instanceof HaveMetadata) return Data_Ordering.LT.value;
        if (y instanceof HaveMetadata) return Data_Ordering.GT.value;
        if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) return Data_Ordering.EQ.value;
        if (x instanceof HaveCurrentData) return Data_Ordering.LT.value;
        if (y instanceof HaveCurrentData) return Data_Ordering.GT.value;
        if (x instanceof HaveFutureData && y instanceof HaveFutureData) return Data_Ordering.EQ.value;
        if (x instanceof HaveFutureData) return Data_Ordering.LT.value;
        if (y instanceof HaveFutureData) return Data_Ordering.GT.value;
        if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 15, column 1 - line 15, column 48): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
var enumReadyState = new Data_Enum.Enum(function() {
    return ordReadyState;
}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
var boundedReadyState = new Data_Bounded.Bounded(function() {
    return ordReadyState;
}, HaveNothing.value, HaveEnoughData.value);
var boundedEnumReadyState = new Data_Enum.BoundedEnum(function() {
    return boundedReadyState;
}, function() {
    return enumReadyState;
}, 5, fromEnumReadyState, toEnumReadyState);
module.exports = {
    HaveNothing: HaveNothing,
    HaveMetadata: HaveMetadata,
    HaveCurrentData: HaveCurrentData,
    HaveFutureData: HaveFutureData,
    HaveEnoughData: HaveEnoughData,
    eqReadyState: eqReadyState,
    ordReadyState: ordReadyState,
    boundedReadyState: boundedReadyState,
    enumReadyState: enumReadyState,
    boundedEnumReadyState: boundedEnumReadyState,
    showReadyState: showReadyState
};

},{"../Data.Bounded/index.js":"jzt4h","../Data.Enum/index.js":"1zIX3","../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW"}],"2fDGQ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    name: $foreign.name,
    setName: $foreign.setName,
    httpEquiv: $foreign.httpEquiv,
    setHttpEquiv: $foreign.setHttpEquiv,
    content: $foreign.content,
    setContent: $foreign.setContent
};

},{"./foreign.js":"hcpya","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"hcpya":[function(require,module,exports) {
"use strict";
exports.name = function(meta) {
    return function() {
        return meta.name;
    };
};
exports.setName = function(name) {
    return function(meta) {
        return function() {
            meta.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.httpEquiv = function(meta) {
    return function() {
        return meta.httpEquiv;
    };
};
exports.setHttpEquiv = function(httpEquiv) {
    return function(meta) {
        return function() {
            meta.httpEquiv = httpEquiv;
        };
    };
};
// ----------------------------------------------------------------------------
exports.content = function(meta) {
    return function() {
        return meta.content;
    };
};
exports.setContent = function(content) {
    return function(meta) {
        return function() {
            meta.content = content;
        };
    };
};

},{}],"jKPoW":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    value: $foreign.value,
    setValue: $foreign.setValue,
    min: $foreign.min,
    setMin: $foreign.setMin,
    max: $foreign.max,
    setMax: $foreign.setMax,
    low: $foreign.low,
    setLow: $foreign.setLow,
    high: $foreign.high,
    setHigh: $foreign.setHigh,
    optimum: $foreign.optimum,
    setOptimum: $foreign.setOptimum,
    labels: $foreign.labels
};

},{"./foreign.js":"atVHy","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"atVHy":[function(require,module,exports) {
"use strict";
exports.value = function(meter) {
    return function() {
        return meter.value;
    };
};
exports.setValue = function(value) {
    return function(meter) {
        return function() {
            meter.value = value;
        };
    };
};
// ----------------------------------------------------------------------------
exports.min = function(meter) {
    return function() {
        return meter.min;
    };
};
exports.setMin = function(min) {
    return function(meter) {
        return function() {
            meter.min = min;
        };
    };
};
// ----------------------------------------------------------------------------
exports.max = function(meter) {
    return function() {
        return meter.max;
    };
};
exports.setMax = function(max) {
    return function(meter) {
        return function() {
            meter.max = max;
        };
    };
};
// ----------------------------------------------------------------------------
exports.low = function(meter) {
    return function() {
        return meter.low;
    };
};
exports.setLow = function(low) {
    return function(meter) {
        return function() {
            meter.low = low;
        };
    };
};
// ----------------------------------------------------------------------------
exports.high = function(meter) {
    return function() {
        return meter.high;
    };
};
exports.setHigh = function(high) {
    return function(meter) {
        return function() {
            meter.high = high;
        };
    };
};
// ----------------------------------------------------------------------------
exports.optimum = function(meter) {
    return function() {
        return meter.optimum;
    };
};
exports.setOptimum = function(optimum) {
    return function(meter) {
        return function() {
            meter.optimum = optimum;
        };
    };
};
// ----------------------------------------------------------------------------
exports.labels = function(meter) {
    return function() {
        return meter.labels;
    };
};

},{}],"8g4Ei":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    cite: $foreign.cite,
    setCite: $foreign.setCite,
    dateTime: $foreign.dateTime,
    setDateTime: $foreign.setDateTime
};

},{"./foreign.js":"by4uX","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"by4uX":[function(require,module,exports) {
"use strict";
exports.cite = function(mod) {
    return function() {
        return mod.cite;
    };
};
exports.setCite = function(cite) {
    return function(mod) {
        return function() {
            mod.cite = cite;
        };
    };
};
// ----------------------------------------------------------------------------
exports.dateTime = function(mod) {
    return function() {
        return mod.dateTime;
    };
};
exports.setDateTime = function(dateTime) {
    return function(mod) {
        return function() {
            mod.dateTime = dateTime;
        };
    };
};

},{}],"2Kcjk":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    reversed: $foreign.reversed,
    setReversed: $foreign.setReversed,
    start: $foreign.start,
    setStart: $foreign.setStart,
    type_: $foreign.type_,
    setType: $foreign.setType
};

},{"./foreign.js":"1xH8u","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"1xH8u":[function(require,module,exports) {
"use strict";
exports.reversed = function(ol) {
    return function() {
        return ol.reversed;
    };
};
exports.setReversed = function(reversed) {
    return function(ol) {
        return function() {
            ol.reversed = reversed;
        };
    };
};
// ----------------------------------------------------------------------------
exports.start = function(ol) {
    return function() {
        return ol.start;
    };
};
exports.setStart = function(start) {
    return function(ol) {
        return function() {
            ol.start = start;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(ol) {
    return function() {
        return ol.type;
    };
};
exports.setType = function(type) {
    return function(ol) {
        return function() {
            ol.type = type;
        };
    };
};

},{}],"16oGE":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var form = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_form"]($1));
    };
}();
var contentDocument = function() {
    var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($3) {
        return $2($foreign["_contentDocument"]($3));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    contentDocument: contentDocument,
    data_: $foreign.data_,
    setData: $foreign.setData,
    type_: $foreign.type_,
    setType: $foreign.setType,
    typeMustMatch: $foreign.typeMustMatch,
    name: $foreign.name,
    setName: $foreign.setName,
    useMap: $foreign.useMap,
    setUseMap: $foreign.setUseMap,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    reportValidity: $foreign.reportValidity,
    setCustomValidity: $foreign.setCustomValidity
};

},{"./foreign.js":"a8pEB","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"a8pEB":[function(require,module,exports) {
"use strict";
exports.data_ = function(object) {
    return function() {
        return object.data;
    };
};
exports.setData = function(data) {
    return function(object) {
        return function() {
            object.data = data;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(object) {
    return function() {
        return object.type;
    };
};
exports.setType = function(type) {
    return function(object) {
        return function() {
            object.type = type;
        };
    };
};
// ----------------------------------------------------------------------------
exports.typeMustMatch = function(object) {
    return function() {
        return object.typeMustMatch;
    };
};
// ----------------------------------------------------------------------------
exports.name = function(object) {
    return function() {
        return object.name;
    };
};
exports.setName = function(name) {
    return function(object) {
        return function() {
            object.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.useMap = function(object) {
    return function() {
        return object.useMap;
    };
};
exports.setUseMap = function(useMap) {
    return function(object) {
        return function() {
            object.useMap = useMap;
        };
    };
};
// ----------------------------------------------------------------------------
exports._form = function(object) {
    return function() {
        return object.form;
    };
};
// ----------------------------------------------------------------------------
exports.width = function(object) {
    return function() {
        return object.width;
    };
};
exports.setWidth = function(width) {
    return function(object) {
        return function() {
            object.width = width;
        };
    };
};
// ----------------------------------------------------------------------------
exports.height = function(object) {
    return function() {
        return object.height;
    };
};
exports.setHeight = function(height) {
    return function(object) {
        return function() {
            object.height = height;
        };
    };
};
// ----------------------------------------------------------------------------
exports._contentDocument = function(object) {
    return function() {
        return object.contentDocument;
    };
};
// ----------------------------------------------------------------------------
exports.willValidate = function(object) {
    return function() {
        return object.willValidate;
    };
};
// ----------------------------------------------------------------------------
exports.validity = function(object) {
    return function() {
        return object.validity;
    };
};
// ----------------------------------------------------------------------------
exports.validationMessage = function(object) {
    return function() {
        return object.validationMessage;
    };
};
// ----------------------------------------------------------------------------
exports.checkValidity = function(object) {
    return function() {
        return object.checkValidity();
    };
};
// ----------------------------------------------------------------------------
exports.reportValidity = function(object) {
    return function() {
        return object.reportValidity();
    };
};
// ----------------------------------------------------------------------------
exports.setCustomValidity = function(value) {
    return function(object) {
        return function() {
            object.setCustomValidity(value);
        };
    };
};

},{}],"1lU57":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    label: $foreign.label,
    setLabel: $foreign.setLabel
};

},{"./foreign.js":"lFAJW","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"lFAJW":[function(require,module,exports) {
"use strict";
exports.disabled = function(optgroup) {
    return function() {
        return optgroup.disabled;
    };
};
exports.setDisabled = function(disabled) {
    return function(optgroup) {
        return function() {
            optgroup.disabled = disabled;
        };
    };
};
// ----------------------------------------------------------------------------
exports.label = function(optgroup) {
    return function() {
        return optgroup.label;
    };
};
exports.setLabel = function(label) {
    return function(optgroup) {
        return function() {
            optgroup.label = label;
        };
    };
};

},{}],"jqtvY":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var form = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_form"]($1));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    label: $foreign.label,
    setLabel: $foreign.setLabel,
    defaultSelected: $foreign.defaultSelected,
    setDefaultSelected: $foreign.setDefaultSelected,
    selected: $foreign.selected,
    setSelected: $foreign.setSelected,
    value: $foreign.value,
    setValue: $foreign.setValue,
    text: $foreign.text,
    setText: $foreign.setText,
    index: $foreign.index
};

},{"./foreign.js":"8rEkx","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"8rEkx":[function(require,module,exports) {
"use strict";
exports.disabled = function(option) {
    return function() {
        return option.disabled;
    };
};
exports.setDisabled = function(disabled) {
    return function(option) {
        return function() {
            option.disabled = disabled;
        };
    };
};
// ----------------------------------------------------------------------------
exports._form = function(option) {
    return function() {
        return option.form;
    };
};
// ----------------------------------------------------------------------------
exports.label = function(option) {
    return function() {
        return option.label;
    };
};
exports.setLabel = function(label) {
    return function(option) {
        return function() {
            option.label = label;
        };
    };
};
// ----------------------------------------------------------------------------
exports.defaultSelected = function(option) {
    return function() {
        return option.defaultSelected;
    };
};
exports.setDefaultSelected = function(defaultSelected) {
    return function(option) {
        return function() {
            option.defaultSelected = defaultSelected;
        };
    };
};
// ----------------------------------------------------------------------------
exports.selected = function(option) {
    return function() {
        return option.selected;
    };
};
exports.setSelected = function(selected) {
    return function(option) {
        return function() {
            option.selected = selected;
        };
    };
};
// ----------------------------------------------------------------------------
exports.value = function(option) {
    return function() {
        return option.value;
    };
};
exports.setValue = function(value) {
    return function(option) {
        return function() {
            option.value = value;
        };
    };
};
// ----------------------------------------------------------------------------
exports.text = function(option) {
    return function() {
        return option.text;
    };
};
exports.setText = function(text) {
    return function(option) {
        return function() {
            option.text = text;
        };
    };
};
// ----------------------------------------------------------------------------
exports.index = function(option) {
    return function() {
        return option.index;
    };
};

},{}],"9GxH3":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var form = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_form"]($1));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    name: $foreign.name,
    setName: $foreign.setName,
    type_: $foreign.type_,
    defaultValue: $foreign.defaultValue,
    setDefaultValue: $foreign.setDefaultValue,
    value: $foreign.value,
    setValue: $foreign.setValue,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    reportValidity: $foreign.reportValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels
};

},{"./foreign.js":"5W1xV","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"5W1xV":[function(require,module,exports) {
"use strict";
exports._form = function(output) {
    return function() {
        return output.form;
    };
};
// ----------------------------------------------------------------------------
exports.name = function(output) {
    return function() {
        return output.name;
    };
};
exports.setName = function(name) {
    return function(output) {
        return function() {
            output.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(output) {
    return function() {
        return output.type;
    };
};
// ----------------------------------------------------------------------------
exports.defaultValue = function(output) {
    return function() {
        return output.defaultValue;
    };
};
exports.setDefaultValue = function(defaultValue) {
    return function(output) {
        return function() {
            output.defaultValue = defaultValue;
        };
    };
};
// ----------------------------------------------------------------------------
exports.value = function(output) {
    return function() {
        return output.value;
    };
};
exports.setValue = function(value) {
    return function(output) {
        return function() {
            output.value = value;
        };
    };
};
// ----------------------------------------------------------------------------
exports.willValidate = function(output) {
    return function() {
        return output.willValidate;
    };
};
// ----------------------------------------------------------------------------
exports.validity = function(output) {
    return function() {
        return output.validity;
    };
};
// ----------------------------------------------------------------------------
exports.validationMessage = function(output) {
    return function() {
        return output.validationMessage;
    };
};
// ----------------------------------------------------------------------------
exports.checkValidity = function(output) {
    return function() {
        return output.checkValidity();
    };
};
// ----------------------------------------------------------------------------
exports.reportValidity = function(output) {
    return function() {
        return output.reportValidity();
    };
};
// ----------------------------------------------------------------------------
exports.setCustomValidity = function(value) {
    return function(output) {
        return function() {
            output.setCustomValidity(value);
        };
    };
};
// ----------------------------------------------------------------------------
exports.labels = function(output) {
    return function() {
        return output.labels;
    };
};

},{}],"dZrCO":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"3Rag3":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    name: $foreign.name,
    setName: $foreign.setName,
    value: $foreign.value,
    setValue: $foreign.setValue
};

},{"./foreign.js":"58slo","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"58slo":[function(require,module,exports) {
"use strict";
exports.name = function(param) {
    return function() {
        return param.name;
    };
};
exports.setName = function(name) {
    return function(param) {
        return function() {
            param.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.value = function(param) {
    return function() {
        return param.value;
    };
};
exports.setValue = function(value) {
    return function(param) {
        return function() {
            param.value = value;
        };
    };
};

},{}],"ayV8r":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"e7tIa":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    value: $foreign.value,
    setValue: $foreign.setValue,
    max: $foreign.max,
    setMax: $foreign.setMax,
    position: $foreign.position,
    labels: $foreign.labels
};

},{"./foreign.js":"lLU4s","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"lLU4s":[function(require,module,exports) {
"use strict";
exports.value = function(progress) {
    return function() {
        return progress.value;
    };
};
exports.setValue = function(value) {
    return function(progress) {
        return function() {
            progress.value = value;
        };
    };
};
// ----------------------------------------------------------------------------
exports.max = function(progress) {
    return function() {
        return progress.max;
    };
};
exports.setMax = function(max) {
    return function(progress) {
        return function() {
            progress.max = max;
        };
    };
};
// ----------------------------------------------------------------------------
exports.position = function(progress) {
    return function() {
        return progress.position;
    };
};
// ----------------------------------------------------------------------------
exports.labels = function(progress) {
    return function() {
        return progress.labels;
    };
};

},{}],"chA4R":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    cite: $foreign.cite,
    setCite: $foreign.setCite
};

},{"./foreign.js":"ef3Wq","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"ef3Wq":[function(require,module,exports) {
"use strict";
exports.cite = function(quote) {
    return function() {
        return quote.cite;
    };
};
exports.setCite = function(cite) {
    return function(quote) {
        return function() {
            quote.cite = cite;
        };
    };
};

},{}],"jEBOw":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    type_: $foreign.type_,
    setType: $foreign.setType,
    charset: $foreign.charset,
    setCharset: $foreign.setCharset,
    async: $foreign.async,
    setAsync: $foreign.setAsync,
    defer: $foreign.defer,
    setDefer: $foreign.setDefer,
    crossOrigin: $foreign.crossOrigin,
    setCrossOrigin: $foreign.setCrossOrigin,
    text: $foreign.text,
    setText: $foreign.setText
};

},{"./foreign.js":"hOa2y","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"hOa2y":[function(require,module,exports) {
"use strict";
exports.src = function(script) {
    return function() {
        return script.src;
    };
};
exports.setSrc = function(src) {
    return function(script) {
        return function() {
            script.src = src;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(script) {
    return function() {
        return script.type;
    };
};
exports.setType = function(type) {
    return function(script) {
        return function() {
            script.type = type;
        };
    };
};
// ----------------------------------------------------------------------------
exports.charset = function(script) {
    return function() {
        return script.charset;
    };
};
exports.setCharset = function(charset) {
    return function(script) {
        return function() {
            script.charset = charset;
        };
    };
};
// ----------------------------------------------------------------------------
exports.async = function(script) {
    return function() {
        return script.async;
    };
};
exports.setAsync = function(async) {
    return function(script) {
        return function() {
            script.async = async;
        };
    };
};
// ----------------------------------------------------------------------------
exports.defer = function(script) {
    return function() {
        return script.defer;
    };
};
exports.setDefer = function(defer) {
    return function(script) {
        return function() {
            script.defer = defer;
        };
    };
};
// ----------------------------------------------------------------------------
exports.crossOrigin = function(script) {
    return function() {
        return script.crossOrigin;
    };
};
exports.setCrossOrigin = function(crossOrigin) {
    return function(script) {
        return function() {
            script.crossOrigin = crossOrigin;
        };
    };
};
// ----------------------------------------------------------------------------
exports.text = function(script) {
    return function() {
        return script.text;
    };
};
exports.setText = function(text) {
    return function(script) {
        return function() {
            script.text = text;
        };
    };
};

},{}],"9sf62":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var form = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_form"]($1));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    multiple: $foreign.multiple,
    setMultiple: $foreign.setMultiple,
    name: $foreign.name,
    setName: $foreign.setName,
    required: $foreign.required,
    setRequired: $foreign.setRequired,
    size: $foreign.size,
    setSize: $foreign.setSize,
    type_: $foreign.type_,
    length: $foreign.length,
    setLength: $foreign.setLength,
    selectedOptions: $foreign.selectedOptions,
    selectedIndex: $foreign.selectedIndex,
    setSelectedIndex: $foreign.setSelectedIndex,
    value: $foreign.value,
    setValue: $foreign.setValue,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    reportValidity: $foreign.reportValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels
};

},{"./foreign.js":"ee3ff","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"ee3ff":[function(require,module,exports) {
"use strict";
exports.autofocus = function(select) {
    return function() {
        return select.autofocus;
    };
};
exports.setAutofocus = function(autofocus) {
    return function(select) {
        return function() {
            select.autofocus = autofocus;
        };
    };
};
// ----------------------------------------------------------------------------
exports.disabled = function(select) {
    return function() {
        return select.disabled;
    };
};
exports.setDisabled = function(disabled) {
    return function(select) {
        return function() {
            select.disabled = disabled;
        };
    };
};
// ----------------------------------------------------------------------------
exports.multiple = function(select) {
    return function() {
        return select.multiple;
    };
};
exports.setMultiple = function(multiple) {
    return function(select) {
        return function() {
            select.multiple = multiple;
        };
    };
};
// ----------------------------------------------------------------------------
exports._form = function(select) {
    return function() {
        return select.form;
    };
};
// ----------------------------------------------------------------------------
exports.name = function(select) {
    return function() {
        return select.name;
    };
};
exports.setName = function(name) {
    return function(select) {
        return function() {
            select.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.required = function(select) {
    return function() {
        return select.required;
    };
};
exports.setRequired = function(required) {
    return function(select) {
        return function() {
            select.required = required;
        };
    };
};
// ----------------------------------------------------------------------------
exports.size = function(select) {
    return function() {
        return select.size;
    };
};
exports.setSize = function(size) {
    return function(select) {
        return function() {
            select.size = size;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(select) {
    return function() {
        return select.type;
    };
};
// ----------------------------------------------------------------------------
exports.length = function(select) {
    return function() {
        return select.length;
    };
};
exports.setLength = function(length) {
    return function(select) {
        return function() {
            select.length = length;
        };
    };
};
// ----------------------------------------------------------------------------
exports.selectedOptions = function(select) {
    return function() {
        return select.selectedOptions;
    };
};
// ----------------------------------------------------------------------------
exports.selectedIndex = function(select) {
    return function() {
        return select.selectedIndex;
    };
};
exports.setSelectedIndex = function(selectedIndex) {
    return function(select) {
        return function() {
            select.selectedIndex = selectedIndex;
        };
    };
};
// ----------------------------------------------------------------------------
exports.value = function(select) {
    return function() {
        return select.value;
    };
};
exports.setValue = function(value) {
    return function(select) {
        return function() {
            select.value = value;
        };
    };
};
// ----------------------------------------------------------------------------
exports.willValidate = function(select) {
    return function() {
        return select.willValidate;
    };
};
// ----------------------------------------------------------------------------
exports.validity = function(select) {
    return function() {
        return select.validity;
    };
};
// ----------------------------------------------------------------------------
exports.validationMessage = function(select) {
    return function() {
        return select.validationMessage;
    };
};
// ----------------------------------------------------------------------------
exports.checkValidity = function(select) {
    return function() {
        return select.checkValidity();
    };
};
// ----------------------------------------------------------------------------
exports.reportValidity = function(select) {
    return function() {
        return select.reportValidity();
    };
};
// ----------------------------------------------------------------------------
exports.setCustomValidity = function(value) {
    return function(select) {
        return function() {
            select.setCustomValidity(value);
        };
    };
};
// ----------------------------------------------------------------------------
exports.labels = function(select) {
    return function() {
        return select.labels;
    };
};

},{}],"56V2k":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    type_: $foreign.type_,
    setType: $foreign.setType,
    media: $foreign.media,
    setMedia: $foreign.setMedia
};

},{"./foreign.js":"3kQUX","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"3kQUX":[function(require,module,exports) {
"use strict";
exports.src = function(source) {
    return function() {
        return source.src;
    };
};
exports.setSrc = function(src) {
    return function(source) {
        return function() {
            source.src = src;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(source) {
    return function() {
        return source.type;
    };
};
exports.setType = function(type) {
    return function(source) {
        return function() {
            source.type = type;
        };
    };
};
// ----------------------------------------------------------------------------
exports.media = function(source) {
    return function() {
        return source.media;
    };
};
exports.setMedia = function(media) {
    return function(source) {
        return function() {
            source.media = media;
        };
    };
};

},{}],"2jL9G":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"9Ut5o":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    media: $foreign.media,
    setMedia: $foreign.setMedia,
    type_: $foreign.type_,
    setType: $foreign.setType
};

},{"./foreign.js":"iMZXa","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"iMZXa":[function(require,module,exports) {
"use strict";
exports.media = function(style) {
    return function() {
        return style.media;
    };
};
exports.setMedia = function(media) {
    return function(style) {
        return function() {
            style.media = media;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(style) {
    return function() {
        return style.type;
    };
};
exports.setType = function(type) {
    return function(style) {
        return function() {
            style.type = type;
        };
    };
};

},{}],"hKgS6":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"hKXya":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    colSpan: $foreign.colSpan,
    setColSpan: $foreign.setColSpan,
    rowSpan: $foreign.rowSpan,
    setRowSpan: $foreign.setRowSpan,
    cellIndex: $foreign.cellIndex
};

},{"./foreign.js":"kmyX6","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"kmyX6":[function(require,module,exports) {
"use strict";
exports.colSpan = function(cell) {
    return function() {
        return cell.colSpan;
    };
};
exports.setColSpan = function(colSpan) {
    return function(cell) {
        return function() {
            cell.colSpan = colSpan;
        };
    };
};
// ----------------------------------------------------------------------------
exports.rowSpan = function(cell) {
    return function() {
        return cell.rowSpan;
    };
};
exports.setRowSpan = function(rowSpan) {
    return function(cell) {
        return function() {
            cell.rowSpan = rowSpan;
        };
    };
};
// ----------------------------------------------------------------------------
exports.cellIndex = function(cell) {
    return function() {
        return cell.cellIndex;
    };
};

},{}],"hNsh0":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    span: $foreign.span,
    setSpan: $foreign.setSpan
};

},{"./foreign.js":"4M94K","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"4M94K":[function(require,module,exports) {
"use strict";
exports.span = function(col) {
    return function() {
        return col.span;
    };
};
exports.setSpan = function(span) {
    return function(col) {
        return function() {
            col.span = span;
        };
    };
};

},{}],"bzY8K":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLTableCellElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
module.exports = {
    fromHTMLTableCellElement: fromHTMLTableCellElement,
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLTableCellElement: toHTMLTableCellElement,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"cnlxN":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var tHead = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_tHead"]($1));
    };
}();
var tFoot = function() {
    var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($3) {
        return $2($foreign["_tFoot"]($3));
    };
}();
var setTHead = function($4) {
    return $foreign["_setTHead"](Data_Nullable.toNullable($4));
};
var setTFoot = function($5) {
    return $foreign["_setTFoot"](Data_Nullable.toNullable($5));
};
var setCaption = function($6) {
    return $foreign["_setCaption"](Data_Nullable.toNullable($6));
};
var insertRow$prime = $foreign.insertRowAt;
var insertRow = insertRow$prime(-1);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var caption = function() {
    var $7 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($8) {
        return $7($foreign["_caption"]($8));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    caption: caption,
    setCaption: setCaption,
    tHead: tHead,
    setTHead: setTHead,
    tFoot: tFoot,
    setTFoot: setTFoot,
    insertRow: insertRow,
    "insertRow'": insertRow$prime,
    createCaption: $foreign.createCaption,
    deleteCaption: $foreign.deleteCaption,
    createTHead: $foreign.createTHead,
    deleteTHead: $foreign.deleteTHead,
    createTFoot: $foreign.createTFoot,
    deleteTFoot: $foreign.deleteTFoot,
    tBodies: $foreign.tBodies,
    createTBody: $foreign.createTBody,
    rows: $foreign.rows,
    deleteRow: $foreign.deleteRow,
    border: $foreign.border,
    setBorder: $foreign.setBorder
};

},{"./foreign.js":"2k3pq","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"2k3pq":[function(require,module,exports) {
"use strict";
exports._caption = function(table) {
    return function() {
        return table.caption;
    };
};
exports._setCaption = function(caption) {
    return function(table) {
        return function() {
            table.caption = caption;
        };
    };
};
// ----------------------------------------------------------------------------
exports.createCaption = function(table) {
    return function() {
        return table.createCaption();
    };
};
// ----------------------------------------------------------------------------
exports.deleteCaption = function(table) {
    return function() {
        table.deleteCaption();
    };
};
// ----------------------------------------------------------------------------
exports._tHead = function(table) {
    return function() {
        return table.tHead;
    };
};
exports._setTHead = function(tHead) {
    return function(table) {
        return function() {
            table.tHead = tHead;
        };
    };
};
// ----------------------------------------------------------------------------
exports.createTHead = function(table) {
    return function() {
        return table.createTHead();
    };
};
// ----------------------------------------------------------------------------
exports.deleteTHead = function(table) {
    return function() {
        table.deleteTHead();
    };
};
// ----------------------------------------------------------------------------
exports._tFoot = function(table) {
    return function() {
        return table.tFoot;
    };
};
exports._setTFoot = function(tFoot) {
    return function(table) {
        return function() {
            table.tFoot = tFoot;
        };
    };
};
// ----------------------------------------------------------------------------
exports.createTFoot = function(table) {
    return function() {
        return table.createTFoot();
    };
};
// ----------------------------------------------------------------------------
exports.deleteTFoot = function(table) {
    return function() {
        table.deleteTFoot();
    };
};
// ----------------------------------------------------------------------------
exports.tBodies = function(table) {
    return function() {
        return table.tBodies;
    };
};
// ----------------------------------------------------------------------------
exports.createTBody = function(table) {
    return function() {
        return table.createTBody();
    };
};
// ----------------------------------------------------------------------------
exports.rows = function(table) {
    return function() {
        return table.rows;
    };
};
// ----------------------------------------------------------------------------
exports.insertRowAt = function(index) {
    return function(table) {
        return function() {
            return table.insertRow(index);
        };
    };
};
// ----------------------------------------------------------------------------
exports.deleteRow = function(index) {
    return function(table) {
        return function() {
            table.deleteRow(index);
        };
    };
};
// ----------------------------------------------------------------------------
exports.border = function(table) {
    return function() {
        return table.border;
    };
};
exports.setBorder = function(border) {
    return function(table) {
        return function() {
            table.border = border;
        };
    };
};

},{}],"30gPk":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLTableCellElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
module.exports = {
    fromHTMLTableCellElement: fromHTMLTableCellElement,
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLTableCellElement: toHTMLTableCellElement,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    scope: $foreign.scope,
    setScope: $foreign.setScope,
    abbr: $foreign.abbr,
    setAbbr: $foreign.setAbbr
};

},{"./foreign.js":"k0rjk","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"k0rjk":[function(require,module,exports) {
"use strict";
exports.scope = function(cell) {
    return function() {
        return cell.scope;
    };
};
exports.setScope = function(scope) {
    return function(cell) {
        return function() {
            cell.scope = scope;
        };
    };
};
// ----------------------------------------------------------------------------
exports.abbr = function(cell) {
    return function() {
        return cell.abbr;
    };
};
exports.setAbbr = function(abbr) {
    return function(cell) {
        return function() {
            cell.abbr = abbr;
        };
    };
};

},{}],"18flM":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var insertCell$prime = $foreign.insertCellAt;
var insertCell = insertCell$prime(-1);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    insertCell: insertCell,
    "insertCell'": insertCell$prime,
    rowIndex: $foreign.rowIndex,
    sectionRowIndex: $foreign.sectionRowIndex,
    cells: $foreign.cells,
    deleteCell: $foreign.deleteCell
};

},{"./foreign.js":"1GA2m","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"1GA2m":[function(require,module,exports) {
"use strict";
exports.rowIndex = function(row) {
    return function() {
        return row.rowIndex;
    };
};
// ----------------------------------------------------------------------------
exports.sectionRowIndex = function(row) {
    return function() {
        return row.sectionRowIndex;
    };
};
// ----------------------------------------------------------------------------
exports.cells = function(row) {
    return function() {
        return row.cells;
    };
};
// ----------------------------------------------------------------------------
exports.cells = function(row) {
    return function() {
        return row.cells;
    };
};
// ----------------------------------------------------------------------------
exports.insertCellAt = function(index) {
    return function(row) {
        return function() {
            return row.insertCell(index);
        };
    };
};
// ----------------------------------------------------------------------------
exports.deleteCell = function(index) {
    return function(row) {
        return function() {
            row.deleteCell(index);
        };
    };
};

},{}],"9Qlvn":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var insertRow$prime = $foreign.insertRowAt;
var insertRow = insertRow$prime(-1);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    insertRow: insertRow,
    "insertRow'": insertRow$prime,
    rows: $foreign.rows,
    deleteRow: $foreign.deleteRow
};

},{"./foreign.js":"r7ZMg","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"r7ZMg":[function(require,module,exports) {
"use strict";
exports.rows = function(section) {
    return function() {
        return section.rows;
    };
};
// ----------------------------------------------------------------------------
exports.insertRowAt = function(index) {
    return function(section) {
        return function() {
            return section.insertRow(index);
        };
    };
};
// ----------------------------------------------------------------------------
exports.deleteRow = function(index) {
    return function(section) {
        return function() {
            section.deleteRow(index);
        };
    };
};

},{}],"ch7hf":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    content: $foreign.content
};

},{"./foreign.js":"6ItfH","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"6ItfH":[function(require,module,exports) {
"use strict";
exports.content = function(template) {
    return function() {
        return template.content;
    };
};

},{}],"8SJlL":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var setRangeText$prime = function(rpl) {
    return function(s) {
        return function(e) {
            return function(mode) {
                return function(area) {
                    return function() {
                        return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
                    };
                };
            };
        };
    };
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var form = function() {
    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($1) {
        return $0($foreign["_form"]($1));
    };
}();
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    "setRangeText'": setRangeText$prime,
    autocomplete: $foreign.autocomplete,
    setAutocomplete: $foreign.setAutocomplete,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    cols: $foreign.cols,
    setCols: $foreign.setCols,
    dirName: $foreign.dirName,
    setDirName: $foreign.setDirName,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    maxLength: $foreign.maxLength,
    setMaxLength: $foreign.setMaxLength,
    minLength: $foreign.minLength,
    setMinLength: $foreign.setMinLength,
    name: $foreign.name,
    setName: $foreign.setName,
    placeholder: $foreign.placeholder,
    setPlaceholder: $foreign.setPlaceholder,
    readOnly: $foreign.readOnly,
    setReadOnly: $foreign.setReadOnly,
    required: $foreign.required,
    setRequired: $foreign.setRequired,
    rows: $foreign.rows,
    setRows: $foreign.setRows,
    wrap: $foreign.wrap,
    setWrap: $foreign.setWrap,
    type_: $foreign.type_,
    defaultValue: $foreign.defaultValue,
    setDefaultValue: $foreign.setDefaultValue,
    value: $foreign.value,
    setValue: $foreign.setValue,
    textLength: $foreign.textLength,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    reportValidity: $foreign.reportValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels,
    select: $foreign.select,
    selectionStart: $foreign.selectionStart,
    setSelectionStart: $foreign.setSelectionStart,
    selectionEnd: $foreign.selectionEnd,
    setSelectionEnd: $foreign.setSelectionEnd,
    selectionDirection: $foreign.selectionDirection,
    setSelectionDirection: $foreign.setSelectionDirection,
    setRangeText: $foreign.setRangeText,
    setSelectionRange: $foreign.setSelectionRange
};

},{"./foreign.js":"GdQPI","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.HTML.SelectionMode/index.js":"5PLTO","../Web.Internal.FFI/index.js":"1vIWP"}],"GdQPI":[function(require,module,exports) {
"use strict";
exports.autocomplete = function(textarea) {
    return function() {
        return textarea.autocomplete;
    };
};
exports.setAutocomplete = function(autocomplete) {
    return function(textarea) {
        return function() {
            textarea.autocomplete = autocomplete;
        };
    };
};
// ----------------------------------------------------------------------------
exports.autofocus = function(textarea) {
    return function() {
        return textarea.autofocus;
    };
};
exports.setAutofocus = function(autofocus) {
    return function(textarea) {
        return function() {
            textarea.autofocus = autofocus;
        };
    };
};
// ----------------------------------------------------------------------------
exports.cols = function(textarea) {
    return function() {
        return textarea.cols;
    };
};
exports.setCols = function(cols) {
    return function(textarea) {
        return function() {
            textarea.cols = cols;
        };
    };
};
// ----------------------------------------------------------------------------
exports.dirName = function(textarea) {
    return function() {
        return textarea.dirName;
    };
};
exports.setDirName = function(dirName) {
    return function(textarea) {
        return function() {
            textarea.dirName = dirName;
        };
    };
};
// ----------------------------------------------------------------------------
exports.disabled = function(textarea) {
    return function() {
        return textarea.disabled;
    };
};
exports.setDisabled = function(disabled) {
    return function(textarea) {
        return function() {
            textarea.disabled = disabled;
        };
    };
};
// ----------------------------------------------------------------------------
exports._form = function(textarea) {
    return function() {
        return textarea.form;
    };
};
// ----------------------------------------------------------------------------
exports.maxLength = function(textarea) {
    return function() {
        return textarea.maxLength;
    };
};
exports.setMaxLength = function(maxLength) {
    return function(textarea) {
        return function() {
            textarea.maxLength = maxLength;
        };
    };
};
// ----------------------------------------------------------------------------
exports.minLength = function(textarea) {
    return function() {
        return textarea.minLength;
    };
};
exports.setMinLength = function(minLength) {
    return function(textarea) {
        return function() {
            textarea.minLength = minLength;
        };
    };
};
// ----------------------------------------------------------------------------
exports.name = function(textarea) {
    return function() {
        return textarea.name;
    };
};
exports.setName = function(name) {
    return function(textarea) {
        return function() {
            textarea.name = name;
        };
    };
};
// ----------------------------------------------------------------------------
exports.placeholder = function(textarea) {
    return function() {
        return textarea.placeholder;
    };
};
exports.setPlaceholder = function(placeholder) {
    return function(textarea) {
        return function() {
            textarea.placeholder = placeholder;
        };
    };
};
// ----------------------------------------------------------------------------
exports.readOnly = function(textarea) {
    return function() {
        return textarea.readOnly;
    };
};
exports.setReadOnly = function(readOnly) {
    return function(textarea) {
        return function() {
            textarea.readOnly = readOnly;
        };
    };
};
// ----------------------------------------------------------------------------
exports.required = function(textarea) {
    return function() {
        return textarea.required;
    };
};
exports.setRequired = function(required) {
    return function(textarea) {
        return function() {
            textarea.required = required;
        };
    };
};
// ----------------------------------------------------------------------------
exports.rows = function(textarea) {
    return function() {
        return textarea.rows;
    };
};
exports.setRows = function(rows) {
    return function(textarea) {
        return function() {
            textarea.rows = rows;
        };
    };
};
// ----------------------------------------------------------------------------
exports.wrap = function(textarea) {
    return function() {
        return textarea.wrap;
    };
};
exports.setWrap = function(wrap) {
    return function(textarea) {
        return function() {
            textarea.wrap = wrap;
        };
    };
};
// ----------------------------------------------------------------------------
exports.type_ = function(textarea) {
    return function() {
        return textarea.type;
    };
};
// ----------------------------------------------------------------------------
exports.defaultValue = function(textarea) {
    return function() {
        return textarea.defaultValue;
    };
};
exports.setDefaultValue = function(defaultValue) {
    return function(textarea) {
        return function() {
            textarea.defaultValue = defaultValue;
        };
    };
};
// ----------------------------------------------------------------------------
exports.value = function(textarea) {
    return function() {
        return textarea.value;
    };
};
exports.setValue = function(value) {
    return function(textarea) {
        return function() {
            textarea.value = value;
        };
    };
};
// ----------------------------------------------------------------------------
exports.textLength = function(textarea) {
    return function() {
        return textarea.textLength;
    };
};
// ----------------------------------------------------------------------------
exports.willValidate = function(textarea) {
    return function() {
        return textarea.willValidate;
    };
};
// ----------------------------------------------------------------------------
exports.validity = function(textarea) {
    return function() {
        return textarea.validity;
    };
};
// ----------------------------------------------------------------------------
exports.validationMessage = function(textarea) {
    return function() {
        return textarea.validationMessage;
    };
};
// ----------------------------------------------------------------------------
exports.checkValidity = function(textarea) {
    return function() {
        return textarea.checkValidity();
    };
};
// ----------------------------------------------------------------------------
exports.reportValidity = function(textarea) {
    return function() {
        return textarea.reportValidity();
    };
};
// ----------------------------------------------------------------------------
exports.setCustomValidity = function(value) {
    return function(textarea) {
        return function() {
            textarea.setCustomValidity(value);
        };
    };
};
// ----------------------------------------------------------------------------
exports.labels = function(textarea) {
    return function() {
        return textarea.labels;
    };
};
// ----------------------------------------------------------------------------
exports.select = function(textarea) {
    return function() {
        textarea.select();
    };
};
// ----------------------------------------------------------------------------
exports.selectionStart = function(textarea) {
    return function() {
        return textarea.selectionStart;
    };
};
exports.setSelectionStart = function(selectionStart) {
    return function(textarea) {
        return function() {
            textarea.selectionStart = selectionStart;
        };
    };
};
// ----------------------------------------------------------------------------
exports.selectionEnd = function(textarea) {
    return function() {
        return textarea.selectionEnd;
    };
};
exports.setSelectionEnd = function(selectionEnd) {
    return function(textarea) {
        return function() {
            textarea.selectionEnd = selectionEnd;
        };
    };
};
// ----------------------------------------------------------------------------
exports.selectionDirection = function(textarea) {
    return function() {
        return textarea.selectionDirection;
    };
};
exports.setSelectionDirection = function(selectionDirection) {
    return function(textarea) {
        return function() {
            textarea.selectionDirection = selectionDirection;
        };
    };
};
// ----------------------------------------------------------------------------
exports.setRangeText = function(replacement) {
    return function(textarea) {
        return function() {
            textarea.setRangeText(replacement);
        };
    };
};
exports._setRangeText = function(replacement, start, end, selectionMode, textarea) {
    textarea.setRangeText(replacement, start, end, selectionMode);
};
// ----------------------------------------------------------------------------
exports.setSelectionRange = function(start) {
    return function(end) {
        return function(direction) {
            return function(textarea) {
                return function() {
                    textarea.setSelectionRange(start, end, direction);
                };
            };
        };
    };
};

},{}],"2Pq2s":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    dateTime: $foreign.dateTime,
    setDateTime: $foreign.setDateTime
};

},{"./foreign.js":"g81Ka","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"g81Ka":[function(require,module,exports) {
"use strict";
exports.dateTime = function(time) {
    return function() {
        return time.dateTime;
    };
};
exports.setDateTime = function(dateTime) {
    return function(time) {
        return function() {
            time.dateTime = dateTime;
        };
    };
};

},{}],"lJtFB":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    text: $foreign.text,
    setText: $foreign.setText
};

},{"./foreign.js":"3zVtW","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"3zVtW":[function(require,module,exports) {
"use strict";
exports.text = function(title) {
    return function() {
        return title.text;
    };
};
exports.setText = function(text) {
    return function(title) {
        return function() {
            title.text = text;
        };
    };
};

},{}],"69ol5":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_HTML_HTMLTrackElement_ReadyState = require("../Web.HTML.HTMLTrackElement.ReadyState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var readyState = function(el) {
    return Data_Functor.map(Effect.functorEffect)(function() {
        var $0 = Data_Maybe.fromMaybe(Web_HTML_HTMLTrackElement_ReadyState.None.value);
        var $1 = Data_Enum.toEnum(Web_HTML_HTMLTrackElement_ReadyState.boundedEnumReadyState);
        return function($2) {
            return $0($1($2));
        };
    }())(function() {
        return $foreign["_readyState"](el);
    });
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    readyState: readyState,
    kind: $foreign.kind,
    setKind: $foreign.setKind,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    srclang: $foreign.srclang,
    setSrclang: $foreign.setSrclang,
    label: $foreign.label,
    setLabel: $foreign.setLabel,
    "default": $foreign["default"],
    setDefault: $foreign.setDefault
};

},{"./foreign.js":"56d4y","../Data.Enum/index.js":"1zIX3","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.HTML.HTMLTrackElement.ReadyState/index.js":"6Z26m","../Web.Internal.FFI/index.js":"1vIWP"}],"56d4y":[function(require,module,exports) {
"use strict";
exports.kind = function(track) {
    return function() {
        return track.kind;
    };
};
exports.setKind = function(kind) {
    return function(track) {
        return function() {
            track.kind = kind;
        };
    };
};
// ----------------------------------------------------------------------------
exports.src = function(track) {
    return function() {
        return track.src;
    };
};
exports.setSrc = function(src) {
    return function(track) {
        return function() {
            track.src = src;
        };
    };
};
// ----------------------------------------------------------------------------
exports.srclang = function(track) {
    return function() {
        return track.srclang;
    };
};
exports.setSrclang = function(srclang) {
    return function(track) {
        return function() {
            track.srclang = srclang;
        };
    };
};
// ----------------------------------------------------------------------------
exports.label = function(track) {
    return function() {
        return track.label;
    };
};
exports.setLabel = function(label) {
    return function(track) {
        return function() {
            track.label = label;
        };
    };
};
// ----------------------------------------------------------------------------
exports["default"] = function(track) {
    return function() {
        return track["default"];
    };
};
exports.setDefault = function(def) {
    return function(track) {
        return function() {
            track["default"] = def;
        };
    };
};
// ----------------------------------------------------------------------------
exports._readyState = function(track) {
    return track.readyState;
};

},{}],"6Z26m":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var None = function() {
    function None1() {
    }
    None1.value = new None1();
    return None1;
}();
var Loading = function() {
    function Loading1() {
    }
    Loading1.value = new Loading1();
    return Loading1;
}();
var Loaded = function() {
    function Loaded1() {
    }
    Loaded1.value = new Loaded1();
    return Loaded1;
}();
var $$Error = function() {
    function $$Error1() {
    }
    $$Error1.value = new $$Error1();
    return $$Error1;
}();
var toEnumReadyState = function(v) {
    if (v === 0) return new Data_Maybe.Just(None.value);
    if (v === 1) return new Data_Maybe.Just(Loading.value);
    if (v === 2) return new Data_Maybe.Just(Loaded.value);
    if (v === 3) return new Data_Maybe.Just($$Error.value);
    return Data_Maybe.Nothing.value;
};
var showReadyState = new Data_Show.Show(function(v) {
    if (v instanceof None) return "None";
    if (v instanceof Loading) return "Loading";
    if (v instanceof Loaded) return "Loaded";
    if (v instanceof $$Error) return "Error";
    throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 29, column 1 - line 33, column 23): " + [
        v.constructor.name
    ]);
});
var fromEnumReadyState = function(v) {
    if (v instanceof None) return 0;
    if (v instanceof Loading) return 1;
    if (v instanceof Loaded) return 2;
    if (v instanceof $$Error) return 3;
    throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 46, column 3 - line 50, column 15): " + [
        v.constructor.name
    ]);
};
var eqReadyState = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof None && y instanceof None) return true;
        if (x instanceof Loading && y instanceof Loading) return true;
        if (x instanceof Loaded && y instanceof Loaded) return true;
        if (x instanceof $$Error && y instanceof $$Error) return true;
        return false;
    };
});
var ordReadyState = new Data_Ord.Ord(function() {
    return eqReadyState;
}, function(x) {
    return function(y) {
        if (x instanceof None && y instanceof None) return Data_Ordering.EQ.value;
        if (x instanceof None) return Data_Ordering.LT.value;
        if (y instanceof None) return Data_Ordering.GT.value;
        if (x instanceof Loading && y instanceof Loading) return Data_Ordering.EQ.value;
        if (x instanceof Loading) return Data_Ordering.LT.value;
        if (y instanceof Loading) return Data_Ordering.GT.value;
        if (x instanceof Loaded && y instanceof Loaded) return Data_Ordering.EQ.value;
        if (x instanceof Loaded) return Data_Ordering.LT.value;
        if (y instanceof Loaded) return Data_Ordering.GT.value;
        if (x instanceof $$Error && y instanceof $$Error) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 14, column 1 - line 14, column 48): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
var enumReadyState = new Data_Enum.Enum(function() {
    return ordReadyState;
}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
var boundedReadyState = new Data_Bounded.Bounded(function() {
    return ordReadyState;
}, None.value, $$Error.value);
var boundedEnumReadyState = new Data_Enum.BoundedEnum(function() {
    return boundedReadyState;
}, function() {
    return enumReadyState;
}, 4, fromEnumReadyState, toEnumReadyState);
module.exports = {
    None: None,
    Loading: Loading,
    Loaded: Loaded,
    "Error": $$Error,
    toEnumReadyState: toEnumReadyState,
    fromEnumReadyState: fromEnumReadyState,
    eqReadyState: eqReadyState,
    ordReadyState: ordReadyState,
    boundedReadyState: boundedReadyState,
    enumReadyState: enumReadyState,
    boundedEnumReadyState: boundedEnumReadyState,
    showReadyState: showReadyState
};

},{"../Data.Bounded/index.js":"jzt4h","../Data.Enum/index.js":"1zIX3","../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW"}],"1YdOZ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"4mVrA":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLMediaElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
module.exports = {
    fromHTMLMediaElement: fromHTMLMediaElement,
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLMediaElement: toHTMLMediaElement,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight,
    videoWidth: $foreign.videoWidth,
    videoHeight: $foreign.videoHeight,
    poster: $foreign.poster,
    setPoster: $foreign.setPoster
};

},{"./foreign.js":"gpPVe","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"gpPVe":[function(require,module,exports) {
"use strict";
// ----------------------------------------------------------------------------
exports.width = function(video) {
    return function() {
        return video.width;
    };
};
exports.setWidth = function(width) {
    return function(video) {
        return function() {
            video.width = width;
        };
    };
};
// ----------------------------------------------------------------------------
exports.height = function(video) {
    return function() {
        return video.height;
    };
};
exports.setHeight = function(height) {
    return function(video) {
        return function() {
            video.height = height;
        };
    };
};
// ----------------------------------------------------------------------------
exports.videoWidth = function(video) {
    return function() {
        return video.videoWidth;
    };
};
// ----------------------------------------------------------------------------
exports.videoHeight = function(video) {
    return function() {
        return video.videoHeight;
    };
};
// ----------------------------------------------------------------------------
exports.poster = function(video) {
    return function() {
        return video.poster;
    };
};
exports.setPoster = function(poster) {
    return function(video) {
        return function() {
            video.poster = poster;
        };
    };
};

},{}],"ikHmg":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var URL1 = function(x) {
    return x;
};
var DocumentTitle = function(x) {
    return x;
};
var Delta = function(x) {
    return x;
};
var newtypeURL = new Data_Newtype.Newtype(function() {
    return undefined;
});
var newtypeDocumentTitle = new Data_Newtype.Newtype(function() {
    return undefined;
});
var newtypeDelta = new Data_Newtype.Newtype(function() {
    return undefined;
});
var eqURL = new Data_Eq.Eq(function(x) {
    return function(y) {
        return x === y;
    };
});
var ordURL = new Data_Ord.Ord(function() {
    return eqURL;
}, function(x) {
    return function(y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var eqDocumentTitle = new Data_Eq.Eq(function(x) {
    return function(y) {
        return x === y;
    };
});
var ordDocumentTitle = new Data_Ord.Ord(function() {
    return eqDocumentTitle;
}, function(x) {
    return function(y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var eqDelta = new Data_Eq.Eq(function(x) {
    return function(y) {
        return x === y;
    };
});
var ordDelta = new Data_Ord.Ord(function() {
    return eqDelta;
}, function(x) {
    return function(y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
module.exports = {
    DocumentTitle: DocumentTitle,
    Delta: Delta,
    URL: URL1,
    eqDocumentTitle: eqDocumentTitle,
    ordDocumentTitle: ordDocumentTitle,
    newtypeDocumentTitle: newtypeDocumentTitle,
    eqDelta: eqDelta,
    ordDelta: ordDelta,
    newtypeDelta: newtypeDelta,
    eqURL: eqURL,
    ordURL: ordURL,
    newtypeURL: newtypeURL,
    back: $foreign.back,
    forward: $foreign.forward,
    go: $foreign.go,
    pushState: $foreign.pushState,
    replaceState: $foreign.replaceState,
    state: $foreign.state
};

},{"./foreign.js":"dqbws","../Data.Eq/index.js":"c3b8F","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh"}],"dqbws":[function(require,module,exports) {
"use strict";
exports.back = function(history) {
    return function() {
        return history.back();
    };
};
exports.forward = function(history) {
    return function() {
        return history.forward();
    };
};
exports.go = function(delta) {
    return function(history) {
        return function() {
            return history.go(delta);
        };
    };
};
exports.pushState = function(a) {
    return function(docTitle) {
        return function(url) {
            return function(history) {
                return function() {
                    return history.pushState(a, docTitle, url);
                };
            };
        };
    };
};
exports.replaceState = function(a) {
    return function(docTitle) {
        return function(url) {
            return function(history) {
                return function() {
                    return history.replaceState(a, docTitle, url);
                };
            };
        };
    };
};
exports.state = function(history) {
    return function() {
        return history.state;
    };
};

},{}],"fPPuY":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    hash: $foreign.hash,
    setHash: $foreign.setHash,
    host: $foreign.host,
    setHost: $foreign.setHost,
    hostname: $foreign.hostname,
    setHostname: $foreign.setHostname,
    href: $foreign.href,
    setHref: $foreign.setHref,
    origin: $foreign.origin,
    setOrigin: $foreign.setOrigin,
    pathname: $foreign.pathname,
    setPathname: $foreign.setPathname,
    port: $foreign.port,
    setPort: $foreign.setPort,
    protocol: $foreign.protocol,
    setProtocol: $foreign.setProtocol,
    search: $foreign.search,
    setSearch: $foreign.setSearch,
    assign: $foreign.assign,
    replace: $foreign.replace,
    reload: $foreign.reload
};

},{"./foreign.js":"6DCfY"}],"6DCfY":[function(require,module,exports) {
"use strict";
exports.hash = function(location) {
    return function() {
        return location.hash;
    };
};
exports.setHash = function(hash) {
    return function(location) {
        return function() {
            location.hash = hash;
        };
    };
};
// ----------------------------------------------------------------------------
exports.host = function(location) {
    return function() {
        return location.host;
    };
};
exports.setHost = function(host) {
    return function(location) {
        return function() {
            location.host = host;
        };
    };
};
// ----------------------------------------------------------------------------
exports.hostname = function(location) {
    return function() {
        return location.hostname;
    };
};
exports.setHostname = function(hostname) {
    return function(location) {
        return function() {
            location.hostname = hostname;
        };
    };
};
// ----------------------------------------------------------------------------
exports.href = function(location) {
    return function() {
        return location.href;
    };
};
exports.setHref = function(href) {
    return function(location) {
        return function() {
            location.href = href;
        };
    };
};
// ----------------------------------------------------------------------------
exports.origin = function(location) {
    return function() {
        return location.origin;
    };
};
exports.setOrigin = function(origin) {
    return function(location) {
        return function() {
            location.origin = origin;
        };
    };
};
// ----------------------------------------------------------------------------
exports.pathname = function(location) {
    return function() {
        return location.pathname;
    };
};
exports.setPathname = function(pathname) {
    return function(location) {
        return function() {
            location.pathname = pathname;
        };
    };
};
// ----------------------------------------------------------------------------
exports.port = function(location) {
    return function() {
        return location.port;
    };
};
exports.setPort = function(port) {
    return function(location) {
        return function() {
            location.port = port;
        };
    };
};
// ----------------------------------------------------------------------------
exports.protocol = function(location) {
    return function() {
        return location.protocol;
    };
};
exports.setProtocol = function(protocol) {
    return function(location) {
        return function() {
            location.protocol = protocol;
        };
    };
};
// ----------------------------------------------------------------------------
exports.search = function(location) {
    return function() {
        return location.search;
    };
};
exports.setSearch = function(search) {
    return function(location) {
        return function() {
            location.search = search;
        };
    };
};
// ----------------------------------------------------------------------------
exports.assign = function(url) {
    return function(location) {
        return function() {
            location.assign(url);
        };
    };
};
// ----------------------------------------------------------------------------
exports.replace = function(url) {
    return function(location) {
        return function() {
            location.replace(url);
        };
    };
};
// ----------------------------------------------------------------------------
exports.reload = function(location) {
    return function() {
        location.reload();
    };
};

},{}],"hSYPo":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    language: $foreign.language,
    platform: $foreign.platform,
    userAgent: $foreign.userAgent
};

},{"./foreign.js":"jgXYA"}],"jgXYA":[function(require,module,exports) {
"use strict";
exports.language = function(navigator) {
    return function() {
        return navigator.language;
    };
};
exports.platform = function(navigator) {
    return function() {
        return navigator.platform;
    };
};
exports.userAgent = function(navigator) {
    return function() {
        return navigator.userAgent;
    };
};

},{}],"iseED":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var RequestIdleCallbackId = function(x) {
    return x;
};
var RequestAnimationFrameId = function(x) {
    return x;
};
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var promptDefault = function(msg) {
    return function(defaultText) {
        return function(window) {
            return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)(defaultText)(window));
        };
    };
};
var prompt = function(msg) {
    return function(window) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)("")(window));
    };
};
var opener = function(window) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_opener"](window));
};
var open = function(url$prime) {
    return function(name) {
        return function(features) {
            return function(window) {
                return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_open"](url$prime)(name)(features)(window));
            };
        };
    };
};
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Window");
var eqRequestIdleCallbackId = new Data_Eq.Eq(function(x) {
    return function(y) {
        return x === y;
    };
});
var ordRequestIdleCallbackId = new Data_Ord.Ord(function() {
    return eqRequestIdleCallbackId;
}, function(x) {
    return function(y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var eqRequestAnimationFrameId = new Data_Eq.Eq(function(x) {
    return function(y) {
        return x === y;
    };
});
var ordRequestAnimationFrameId = new Data_Ord.Ord(function() {
    return eqRequestAnimationFrameId;
}, function(x) {
    return function(y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
module.exports = {
    toEventTarget: toEventTarget,
    fromEventTarget: fromEventTarget,
    open: open,
    prompt: prompt,
    promptDefault: promptDefault,
    opener: opener,
    eqRequestAnimationFrameId: eqRequestAnimationFrameId,
    ordRequestAnimationFrameId: ordRequestAnimationFrameId,
    eqRequestIdleCallbackId: eqRequestIdleCallbackId,
    ordRequestIdleCallbackId: ordRequestIdleCallbackId,
    document: $foreign.document,
    navigator: $foreign.navigator,
    location: $foreign.location,
    history: $foreign.history,
    innerWidth: $foreign.innerWidth,
    innerHeight: $foreign.innerHeight,
    alert: $foreign.alert,
    confirm: $foreign.confirm,
    moveBy: $foreign.moveBy,
    moveTo: $foreign.moveTo,
    outerHeight: $foreign.outerHeight,
    outerWidth: $foreign.outerWidth,
    print: $foreign.print,
    resizeBy: $foreign.resizeBy,
    resizeTo: $foreign.resizeTo,
    screenX: $foreign.screenX,
    screenY: $foreign.screenY,
    scroll: $foreign.scroll,
    scrollBy: $foreign.scrollBy,
    scrollX: $foreign.scrollX,
    scrollY: $foreign.scrollY,
    localStorage: $foreign.localStorage,
    sessionStorage: $foreign.sessionStorage,
    requestAnimationFrame: $foreign.requestAnimationFrame,
    cancelAnimationFrame: $foreign.cancelAnimationFrame,
    requestIdleCallback: $foreign.requestIdleCallback,
    cancelIdleCallback: $foreign.cancelIdleCallback,
    parent: $foreign.parent
};

},{"./foreign.js":"h6327","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Data.Ord/index.js":"f14nh","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.Internal.FFI/index.js":"1vIWP"}],"h6327":[function(require,module,exports) {
"use strict";
exports.document = function(window) {
    return function() {
        return window.document;
    };
};
exports.navigator = function(window) {
    return function() {
        return window.navigator;
    };
};
exports.location = function(window) {
    return function() {
        return window.location;
    };
};
exports.history = function(window) {
    return function() {
        return window.history;
    };
};
exports.innerWidth = function(window) {
    return function() {
        return window.innerWidth;
    };
};
exports.innerHeight = function(window) {
    return function() {
        return window.innerHeight;
    };
};
exports.alert = function(str) {
    return function(window) {
        return function() {
            window.alert(str);
        };
    };
};
exports.confirm = function(str) {
    return function(window) {
        return function() {
            return window.confirm(str);
        };
    };
};
exports.moveBy = function(xDelta) {
    return function(yDelta) {
        return function(window) {
            return function() {
                window.moveBy(xDelta, yDelta);
            };
        };
    };
};
exports.moveTo = function(width) {
    return function(height) {
        return function(window) {
            return function() {
                window.moveTo(width, height);
            };
        };
    };
};
exports._open = function(url) {
    return function(name) {
        return function(features) {
            return function(window) {
                return function() {
                    return window.open(url, name, features);
                };
            };
        };
    };
};
exports.outerHeight = function(window) {
    return function() {
        return window.outerHeight;
    };
};
exports.outerWidth = function(window) {
    return function() {
        return window.outerWidth;
    };
};
exports.print = function(window) {
    return function() {
        window.print();
    };
};
exports._prompt = function(str) {
    return function(defaultText) {
        return function(window) {
            return function() {
                return window.prompt(str, defaultText);
            };
        };
    };
};
exports.resizeBy = function(xDelta) {
    return function(yDelta) {
        return function(window) {
            return function() {
                window.resizeBy(xDelta, yDelta);
            };
        };
    };
};
exports.resizeTo = function(width) {
    return function(height) {
        return function(window) {
            return function() {
                window.resizeTo(width, height);
            };
        };
    };
};
exports.screenX = function(window) {
    return function() {
        return window.screenX;
    };
};
exports.screenY = function(window) {
    return function() {
        return window.screenY;
    };
};
exports.scroll = function(xCoord) {
    return function(yCoord) {
        return function(window) {
            return function() {
                window.scroll(xCoord, yCoord);
            };
        };
    };
};
exports.scrollBy = function(xCoord) {
    return function(yCoord) {
        return function(window) {
            return function() {
                window.scrollBy(xCoord, yCoord);
            };
        };
    };
};
exports.scrollX = function(window) {
    return function() {
        return window.scrollX;
    };
};
exports.scrollY = function(window) {
    return function() {
        return window.scrollY;
    };
};
exports.localStorage = function(window) {
    return function() {
        return window.localStorage;
    };
};
exports.sessionStorage = function(window) {
    return function() {
        return window.sessionStorage;
    };
};
exports.requestAnimationFrame = function(fn) {
    return function(window) {
        return function() {
            return window.requestAnimationFrame(fn);
        };
    };
};
exports.cancelAnimationFrame = function(id) {
    return function(window) {
        return function() {
            return window.cancelAnimationFrame(id);
        };
    };
};
exports.requestIdleCallback = function(opts) {
    return function(fn) {
        return function(window) {
            return function() {
                return window.requestIdleCallback(fn, opts);
            };
        };
    };
};
exports.cancelIdleCallback = function(id) {
    return function(window) {
        return function() {
            return window.cancelIdleCallback(id);
        };
    };
};
exports.parent = function(window) {
    return function() {
        return window.parent;
    };
};
exports._opener = function(window) {
    return function() {
        return window.opener;
    };
};

},{}],"6J0bq":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var unload = "unload";
var toggle = "toggle";
var submit = "submit";
var storage = "storage";
var select = "select";
var reset = "reset";
var readystatechange = "readystatechange";
var progress = "progress";
var paste = "paste";
var online = "online";
var offline = "offline";
var message = "message";
var loadstart = "loadstart";
var loadend = "loadend";
var load = "load";
var languagechange = "languagechange";
var invalid = "invalid";
var input = "input";
var focus = "focus";
var error = "error";
var domcontentloaded = "DOMContentLoaded";
var cut = "cut";
var copy = "copy";
var close = "close";
var click = "click";
var change = "change";
var cancel = "cancel";
var blur = "blur";
var beforescriptexecute = "beforescriptexecute";
var beforeprint = "beforeprint";
var afterscriptexecute = "afterscriptexecute";
var afterprint = "afterprint";
var abort = "abort";
module.exports = {
    abort: abort,
    afterprint: afterprint,
    afterscriptexecute: afterscriptexecute,
    beforeprint: beforeprint,
    beforescriptexecute: beforescriptexecute,
    blur: blur,
    cancel: cancel,
    change: change,
    click: click,
    close: close,
    copy: copy,
    cut: cut,
    domcontentloaded: domcontentloaded,
    error: error,
    focus: focus,
    input: input,
    invalid: invalid,
    languagechange: languagechange,
    load: load,
    loadend: loadend,
    loadstart: loadstart,
    message: message,
    offline: offline,
    online: online,
    paste: paste,
    progress: progress,
    readystatechange: readystatechange,
    reset: reset,
    select: select,
    storage: storage,
    submit: submit,
    toggle: toggle,
    unload: unload
};

},{}],"2KBrj":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Coyoneda = require("../Data.Coyoneda/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Halogen_Data_Slot = require("../Halogen.Data.Slot/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Halogen_Query_HalogenQ = require("../Halogen.Query.HalogenQ/index.js");
var Halogen_VDom_Thunk = require("../Halogen.VDom.Thunk/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var ComponentSlot = function() {
    function ComponentSlot1(value0) {
        this.value0 = value0;
    }
    ComponentSlot1.create = function(value0) {
        return new ComponentSlot1(value0);
    };
    return ComponentSlot1;
}();
var ThunkSlot = function() {
    function ThunkSlot1(value0) {
        this.value0 = value0;
    }
    ThunkSlot1.create = function(value0) {
        return new ThunkSlot1(value0);
    };
    return ThunkSlot1;
}();
var unComponentSlot = Unsafe_Coerce.unsafeCoerce;
var unComponent = Unsafe_Coerce.unsafeCoerce;
var mkEval = function(args) {
    return function(v) {
        if (v instanceof Halogen_Query_HalogenQ.Initialize) return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.initialize))(v.value0);
        if (v instanceof Halogen_Query_HalogenQ.Finalize) return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.finalize))(v.value0);
        if (v instanceof Halogen_Query_HalogenQ.Receive) return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.receive(v.value0)))(v.value1);
        if (v instanceof Halogen_Query_HalogenQ.Action) return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(args.handleAction(v.value0))(v.value1);
        if (v instanceof Halogen_Query_HalogenQ.Query) return Data_Coyoneda.unCoyoneda(function(g) {
            var $25 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));
            return function($26) {
                return $25(args.handleQuery($26));
            };
        })(v.value0);
        throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 70): " + [
            v.constructor.name
        ]);
    };
};
var mkComponentSlot = Unsafe_Coerce.unsafeCoerce;
var mkComponent = Unsafe_Coerce.unsafeCoerce;
var hoistSlot = function(dictFunctor) {
    return function(nat) {
        return function(v) {
            if (v instanceof ComponentSlot) return unComponentSlot(function(slot) {
                return ComponentSlot.create(mkComponentSlot({
                    get: slot.get,
                    pop: slot.pop,
                    set: slot.set,
                    component: hoist(dictFunctor)(nat)(slot.component),
                    input: slot.input,
                    output: slot.output
                }));
            })(v.value0);
            if (v instanceof ThunkSlot) return ThunkSlot.create(Halogen_VDom_Thunk.hoist(Data_Bifunctor.lmap(Halogen_HTML_Core.bifunctorHTML)(hoistSlot(dictFunctor)(nat)))(v.value0));
            throw new Error("Failed pattern match at Halogen.Component (line 279, column 17 - line 284, column 53): " + [
                v.constructor.name
            ]);
        };
    };
};
var hoist = function(dictFunctor) {
    return function(nat) {
        return unComponent(function(c) {
            return mkComponent({
                initialState: c.initialState,
                render: function() {
                    var $27 = Data_Bifunctor.lmap(Halogen_HTML_Core.bifunctorHTML)(hoistSlot(dictFunctor)(nat));
                    return function($28) {
                        return $27(c.render($28));
                    };
                }(),
                "eval": function() {
                    var $29 = Halogen_Query_HalogenM.hoist(dictFunctor)(nat);
                    return function($30) {
                        return $29(c["eval"]($30));
                    };
                }()
            });
        });
    };
};
var functorComponentSlotBox = new Data_Functor.Functor(function(f) {
    return unComponentSlot(function(slot) {
        return mkComponentSlot({
            get: slot.get,
            pop: slot.pop,
            set: slot.set,
            component: slot.component,
            input: slot.input,
            output: Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(slot.output)
        });
    });
});
var functorComponentSlot = new Data_Functor.Functor(function(f) {
    return function(v) {
        if (v instanceof ComponentSlot) return new ComponentSlot(Data_Functor.map(functorComponentSlotBox)(f)(v.value0));
        if (v instanceof ThunkSlot) return new ThunkSlot(Halogen_VDom_Thunk.mapThunk(Data_Bifunctor.bimap(Halogen_HTML_Core.bifunctorHTML)(Data_Functor.map(functorComponentSlot)(f))(f))(v.value0));
        throw new Error("Failed pattern match at Halogen.Component (line 209, column 11 - line 211, column 74): " + [
            v.constructor.name
        ]);
    };
});
var defaultEval = {
    handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
    handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
    receive: Data_Function["const"](Data_Maybe.Nothing.value),
    initialize: Data_Maybe.Nothing.value,
    finalize: Data_Maybe.Nothing.value
};
var componentSlot = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(label) {
                return function(p) {
                    return function(comp) {
                        return function(input) {
                            return function(output) {
                                return mkComponentSlot({
                                    get: Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p),
                                    pop: Halogen_Data_Slot.pop()(dictIsSymbol)(dictOrd)(label)(p),
                                    set: Halogen_Data_Slot.insert()(dictIsSymbol)(dictOrd)(label)(p),
                                    component: comp,
                                    input: input,
                                    output: output
                                });
                            };
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    mkComponent: mkComponent,
    unComponent: unComponent,
    hoist: hoist,
    mkEval: mkEval,
    defaultEval: defaultEval,
    ComponentSlot: ComponentSlot,
    ThunkSlot: ThunkSlot,
    componentSlot: componentSlot,
    mkComponentSlot: mkComponentSlot,
    unComponentSlot: unComponentSlot,
    hoistSlot: hoistSlot,
    functorComponentSlotBox: functorComponentSlotBox,
    functorComponentSlot: functorComponentSlot
};

},{"../Control.Applicative/index.js":"dG9TO","../Data.Bifunctor/index.js":"4aJ07","../Data.Coyoneda/index.js":"aCCay","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Unit/index.js":"d7oKp","../Halogen.Data.Slot/index.js":"elbaz","../Halogen.HTML.Core/index.js":"eONdi","../Halogen.Query.HalogenM/index.js":"7CNtl","../Halogen.Query.HalogenQ/index.js":"fSFYt","../Halogen.VDom.Thunk/index.js":"eijHo","../Unsafe.Coerce/index.js":"6gO81"}],"aCCay":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Distributive = require("../Data.Distributive/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Exists = require("../Data.Exists/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var CoyonedaF = function() {
    function CoyonedaF1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    CoyonedaF1.create = function(value0) {
        return function(value1) {
            return new CoyonedaF1(value0, value1);
        };
    };
    return CoyonedaF1;
}();
var Coyoneda = function(x) {
    return x;
};
var unCoyoneda = function(f) {
    return function(v) {
        return Data_Exists.runExists(function(v1) {
            return f(v1.value0)(v1.value1);
        })(v);
    };
};
var lowerCoyoneda = function(dictFunctor) {
    return unCoyoneda(Data_Functor.map(dictFunctor));
};
var foldableCoyoneda = function(dictFoldable) {
    return new Data_Foldable.Foldable(function(dictMonoid) {
        return function(f) {
            return unCoyoneda(function(k) {
                return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(function($79) {
                    return f(k($79));
                });
            });
        };
    }, function(f) {
        return function(z) {
            return unCoyoneda(function(k) {
                return Data_Foldable.foldl(dictFoldable)(function(x) {
                    var $80 = f(x);
                    return function($81) {
                        return $80(k($81));
                    };
                })(z);
            });
        };
    }, function(f) {
        return function(z) {
            return unCoyoneda(function(k) {
                return Data_Foldable.foldr(dictFoldable)(function($82) {
                    return f(k($82));
                })(z);
            });
        };
    });
};
var foldable1Coyoneda = function(dictFoldable1) {
    return new Data_Semigroup_Foldable.Foldable1(function() {
        return foldableCoyoneda(dictFoldable1.Foldable0());
    }, function(dictSemigroup) {
        return function(f) {
            return unCoyoneda(function(k) {
                return Data_Semigroup_Foldable.foldMap1(dictFoldable1)(dictSemigroup)(function($83) {
                    return f(k($83));
                });
            });
        };
    }, Data_Semigroup_Foldable.foldl1Default(foldable1Coyoneda(dictFoldable1)), Data_Semigroup_Foldable.foldr1Default(foldable1Coyoneda(dictFoldable1)));
};
var eqCoyoneda = function(dictFunctor) {
    return function(dictEq1) {
        return function(dictEq) {
            return new Data_Eq.Eq(function(x) {
                return function(y) {
                    return Data_Eq.eq1(dictEq1)(dictEq)(lowerCoyoneda(dictFunctor)(x))(lowerCoyoneda(dictFunctor)(y));
                };
            });
        };
    };
};
var ordCoyoneda = function(dictFunctor) {
    return function(dictOrd1) {
        return function(dictOrd) {
            return new Data_Ord.Ord(function() {
                return eqCoyoneda(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
            }, function(x) {
                return function(y) {
                    return Data_Ord.compare1(dictOrd1)(dictOrd)(lowerCoyoneda(dictFunctor)(x))(lowerCoyoneda(dictFunctor)(y));
                };
            });
        };
    };
};
var eq1Coyoneda = function(dictFunctor) {
    return function(dictEq1) {
        return new Data_Eq.Eq1(function(dictEq) {
            return Data_Eq.eq(eqCoyoneda(dictFunctor)(dictEq1)(dictEq));
        });
    };
};
var ord1Coyoneda = function(dictFunctor) {
    return function(dictOrd1) {
        return new Data_Ord.Ord1(function() {
            return eq1Coyoneda(dictFunctor)(dictOrd1.Eq10());
        }, function(dictOrd) {
            return Data_Ord.compare(ordCoyoneda(dictFunctor)(dictOrd1)(dictOrd));
        });
    };
};
var coyoneda = function(k) {
    return function(fi) {
        return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
    };
};
var functorCoyoneda = new Data_Functor.Functor(function(f) {
    return function(v) {
        return Data_Exists.runExists(function(v1) {
            return coyoneda(function($84) {
                return f(v1.value0($84));
            })(v1.value1);
        })(v);
    };
});
var invatiantCoyoneda = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCoyoneda));
var hoistCoyoneda = function(nat) {
    return function(v) {
        return Data_Exists.runExists(function(v1) {
            return coyoneda(v1.value0)(nat(v1.value1));
        })(v);
    };
};
var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));
var distributiveCoyoneda = function(dictDistributive) {
    return new Data_Distributive.Distributive(function() {
        return functorCoyoneda;
    }, function(dictFunctor) {
        return function(f) {
            var $85 = Data_Distributive.collect(dictDistributive)(dictFunctor)(function() {
                var $87 = lowerCoyoneda(dictDistributive.Functor0());
                return function($88) {
                    return $87(f($88));
                };
            }());
            return function($86) {
                return liftCoyoneda($85($86));
            };
        };
    }, function(dictFunctor) {
        var $89 = Data_Distributive.collect(dictDistributive)(dictFunctor)(lowerCoyoneda(dictDistributive.Functor0()));
        return function($90) {
            return liftCoyoneda($89($90));
        };
    });
};
var extendCoyoneda = function(dictExtend) {
    return new Control_Extend.Extend(function() {
        return functorCoyoneda;
    }, function(f) {
        return function(v) {
            return Data_Exists.runExists(function(v1) {
                return liftCoyoneda(Control_Extend.extend(dictExtend)(function() {
                    var $91 = coyoneda(v1.value0);
                    return function($92) {
                        return f($91($92));
                    };
                }())(v1.value1));
            })(v);
        };
    });
};
var monadTransCoyoneda = new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
    return liftCoyoneda;
});
var traversableCoyoneda = function(dictTraversable) {
    return new Data_Traversable.Traversable(function() {
        return foldableCoyoneda(dictTraversable.Foldable1());
    }, function() {
        return functorCoyoneda;
    }, function(dictApplicative) {
        return unCoyoneda(function(k) {
            var $93 = Data_Functor.map(dictApplicative.Apply0().Functor0())(liftCoyoneda);
            var $94 = Data_Traversable.traverse(dictTraversable)(dictApplicative)(k);
            return function($95) {
                return $93($94($95));
            };
        });
    }, function(dictApplicative) {
        return function(f) {
            return unCoyoneda(function(k) {
                var $96 = Data_Functor.map(dictApplicative.Apply0().Functor0())(liftCoyoneda);
                var $97 = Data_Traversable.traverse(dictTraversable)(dictApplicative)(function($99) {
                    return f(k($99));
                });
                return function($98) {
                    return $96($97($98));
                };
            });
        };
    });
};
var traversable1Coyoneda = function(dictTraversable1) {
    return new Data_Semigroup_Traversable.Traversable1(function() {
        return foldable1Coyoneda(dictTraversable1.Foldable10());
    }, function() {
        return traversableCoyoneda(dictTraversable1.Traversable1());
    }, function(dictApply) {
        return unCoyoneda(function(k) {
            var $100 = Data_Functor.map(dictApply.Functor0())(liftCoyoneda);
            var $101 = Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply);
            var $102 = Data_Functor.map(dictTraversable1.Traversable1().Functor0())(k);
            return function($103) {
                return $100($101($102($103)));
            };
        });
    }, function(dictApply) {
        return function(f) {
            return unCoyoneda(function(k) {
                var $104 = Data_Functor.map(dictApply.Functor0())(liftCoyoneda);
                var $105 = Data_Semigroup_Traversable.traverse1(dictTraversable1)(dictApply)(function($107) {
                    return f(k($107));
                });
                return function($106) {
                    return $104($105($106));
                };
            });
        };
    });
};
var comonadCoyoneda = function(dictComonad) {
    return new Control_Comonad.Comonad(function() {
        return extendCoyoneda(dictComonad.Extend0());
    }, function(v) {
        return Data_Exists.runExists(function(v1) {
            return v1.value0(Control_Comonad.extract(dictComonad)(v1.value1));
        })(v);
    });
};
var applyCoyoneda = function(dictApply) {
    return new Control_Apply.Apply(function() {
        return functorCoyoneda;
    }, function(f) {
        return function(g) {
            return liftCoyoneda(Control_Apply.apply(dictApply)(lowerCoyoneda(dictApply.Functor0())(f))(lowerCoyoneda(dictApply.Functor0())(g)));
        };
    });
};
var bindCoyoneda = function(dictBind) {
    return new Control_Bind.Bind(function() {
        return applyCoyoneda(dictBind.Apply0());
    }, function(v) {
        return function(f) {
            return liftCoyoneda(Data_Exists.runExists(function(v1) {
                return Control_Bind.bindFlipped(dictBind)(function() {
                    var $108 = lowerCoyoneda(dictBind.Apply0().Functor0());
                    return function($109) {
                        return $108(f(v1.value0($109)));
                    };
                }())(v1.value1);
            })(v));
        };
    });
};
var applicativeCoyoneda = function(dictApplicative) {
    return new Control_Applicative.Applicative(function() {
        return applyCoyoneda(dictApplicative.Apply0());
    }, function() {
        var $110 = Control_Applicative.pure(dictApplicative);
        return function($111) {
            return liftCoyoneda($110($111));
        };
    }());
};
var monadCoyoneda = function(dictMonad) {
    return new Control_Monad.Monad(function() {
        return applicativeCoyoneda(dictMonad.Applicative0());
    }, function() {
        return bindCoyoneda(dictMonad.Bind1());
    });
};
var altCoyoneda = function(dictAlt) {
    return new Control_Alt.Alt(function() {
        return functorCoyoneda;
    }, function(x) {
        return function(y) {
            return liftCoyoneda(Control_Alt.alt(dictAlt)(lowerCoyoneda(dictAlt.Functor0())(x))(lowerCoyoneda(dictAlt.Functor0())(y)));
        };
    });
};
var plusCoyoneda = function(dictPlus) {
    return new Control_Plus.Plus(function() {
        return altCoyoneda(dictPlus.Alt0());
    }, liftCoyoneda(Control_Plus.empty(dictPlus)));
};
var alternativeCoyoneda = function(dictAlternative) {
    return new Control_Alternative.Alternative(function() {
        return applicativeCoyoneda(dictAlternative.Applicative0());
    }, function() {
        return plusCoyoneda(dictAlternative.Plus1());
    });
};
var monadPlusCoyoneda = function(dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function() {
        return alternativeCoyoneda(dictMonadPlus.Alternative1());
    }, function() {
        return monadCoyoneda(dictMonadPlus.Monad0());
    });
};
var monadZeroCoyoneda = function(dictMonadZero) {
    return new Control_MonadZero.MonadZero(function() {
        return alternativeCoyoneda(dictMonadZero.Alternative1());
    }, function() {
        return monadCoyoneda(dictMonadZero.Monad0());
    }, function() {
        return undefined;
    });
};
module.exports = {
    Coyoneda: Coyoneda,
    coyoneda: coyoneda,
    unCoyoneda: unCoyoneda,
    liftCoyoneda: liftCoyoneda,
    lowerCoyoneda: lowerCoyoneda,
    hoistCoyoneda: hoistCoyoneda,
    eqCoyoneda: eqCoyoneda,
    eq1Coyoneda: eq1Coyoneda,
    ordCoyoneda: ordCoyoneda,
    ord1Coyoneda: ord1Coyoneda,
    functorCoyoneda: functorCoyoneda,
    invatiantCoyoneda: invatiantCoyoneda,
    applyCoyoneda: applyCoyoneda,
    applicativeCoyoneda: applicativeCoyoneda,
    altCoyoneda: altCoyoneda,
    plusCoyoneda: plusCoyoneda,
    alternativeCoyoneda: alternativeCoyoneda,
    bindCoyoneda: bindCoyoneda,
    monadCoyoneda: monadCoyoneda,
    monadTransCoyoneda: monadTransCoyoneda,
    monadZeroCoyoneda: monadZeroCoyoneda,
    monadPlusCoyoneda: monadPlusCoyoneda,
    extendCoyoneda: extendCoyoneda,
    comonadCoyoneda: comonadCoyoneda,
    foldableCoyoneda: foldableCoyoneda,
    traversableCoyoneda: traversableCoyoneda,
    foldable1Coyoneda: foldable1Coyoneda,
    traversable1Coyoneda: traversable1Coyoneda,
    distributiveCoyoneda: distributiveCoyoneda
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Comonad/index.js":"hfPua","../Control.Extend/index.js":"kAltv","../Control.Monad/index.js":"alCn2","../Control.Monad.Trans.Class/index.js":"9pz5v","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Distributive/index.js":"czVlx","../Data.Eq/index.js":"c3b8F","../Data.Exists/index.js":"9nSlL","../Data.Foldable/index.js":"jWmFN","../Data.Functor/index.js":"iy1jO","../Data.Functor.Invariant/index.js":"hYAzT","../Data.Ord/index.js":"f14nh","../Data.Semigroup.Foldable/index.js":"lM4gt","../Data.Semigroup.Traversable/index.js":"kPmtP","../Data.Traversable/index.js":"i5Kon"}],"9nSlL":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var runExists = Unsafe_Coerce.unsafeCoerce;
var mkExists = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    mkExists: mkExists,
    runExists: runExists
};

},{"../Unsafe.Coerce/index.js":"6gO81"}],"elbaz":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid_Alternate = require("../Data.Monoid.Alternate/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox/index.js");
var SlotStorage = function(x) {
    return x;
};
var slots = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(sym) {
                return function(v) {
                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(sym);
                    var go = function(v1) {
                        return function(val) {
                            if (key === v1.value0) return Data_Monoid_Alternate.Alternate(Data_Map_Internal.singleton(Halogen_Data_OrdBox.unOrdBox(v1.value1))(val));
                            if (Data_Boolean.otherwise) return Data_Map_Internal.empty;
                            throw new Error("Failed pattern match at Halogen.Data.Slot (line 121, column 3 - line 123, column 38): " + [
                                v1.constructor.name,
                                val.constructor.name
                            ]);
                        };
                    };
                    return Data_Newtype.un()(Data_Monoid_Alternate.Alternate)(Data_Map_Internal.foldSubmap(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(Data_Monoid_Alternate.monoidAlternate(Data_Map_Internal.plusMap(dictOrd)))(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(go)(v));
                };
            };
        };
    };
};
var pop = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(sym) {
                return function(key) {
                    return function(v) {
                        return Data_Map_Internal.pop(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                    };
                };
            };
        };
    };
};
var lookup = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(sym) {
                return function(key) {
                    return function(v) {
                        return Data_Map_Internal.lookup(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                    };
                };
            };
        };
    };
};
var insert = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(sym) {
                return function(key) {
                    return function(val) {
                        return function(v) {
                            return Data_Map_Internal.insert(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(val)(v);
                        };
                    };
                };
            };
        };
    };
};
var foreachSlot = function(dictApplicative) {
    return function(v) {
        return function(k) {
            return Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap)(function($37) {
                return k($37);
            })(v);
        };
    };
};
var empty = Data_Map_Internal.empty;
module.exports = {
    empty: empty,
    lookup: lookup,
    insert: insert,
    pop: pop,
    slots: slots,
    foreachSlot: foreachSlot
};

},{"../Data.Boolean/index.js":"lv1qw","../Data.Foldable/index.js":"jWmFN","../Data.Map.Internal/index.js":"iS1Sf","../Data.Maybe/index.js":"ePH81","../Data.Monoid.Alternate/index.js":"dbOf7","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Symbol/index.js":"6s2wm","../Data.Tuple/index.js":"eOBbM","../Halogen.Data.OrdBox/index.js":"dMFfc"}],"iS1Sf":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Lazy = require("../Data.List.Lazy/index.js");
var Data_List_Lazy_Types = require("../Data.List.Lazy.Types/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Leaf = function() {
    function Leaf1() {
    }
    Leaf1.value = new Leaf1();
    return Leaf1;
}();
var Two = function() {
    function Two1(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    Two1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new Two1(value0, value1, value2, value3);
                };
            };
        };
    };
    return Two1;
}();
var Three = function() {
    function Three1(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    }
    Three1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return function(value4) {
                        return function(value5) {
                            return function(value6) {
                                return new Three1(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return Three1;
}();
var TwoLeft = function() {
    function TwoLeft1(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    TwoLeft1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new TwoLeft1(value0, value1, value2);
            };
        };
    };
    return TwoLeft1;
}();
var TwoRight = function() {
    function TwoRight1(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    TwoRight1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new TwoRight1(value0, value1, value2);
            };
        };
    };
    return TwoRight1;
}();
var ThreeLeft = function() {
    function ThreeLeft1(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    }
    ThreeLeft1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return function(value4) {
                        return function(value5) {
                            return new ThreeLeft1(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeLeft1;
}();
var ThreeMiddle = function() {
    function ThreeMiddle1(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    }
    ThreeMiddle1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return function(value4) {
                        return function(value5) {
                            return new ThreeMiddle1(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeMiddle1;
}();
var ThreeRight = function() {
    function ThreeRight1(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    }
    ThreeRight1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return function(value4) {
                        return function(value5) {
                            return new ThreeRight1(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeRight1;
}();
var KickUp = function() {
    function KickUp1(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    KickUp1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new KickUp1(value0, value1, value2, value3);
                };
            };
        };
    };
    return KickUp1;
}();
var values = function(v) {
    if (v instanceof Leaf) return Data_List_Types.Nil.value;
    if (v instanceof Two) return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
    if (v instanceof Three) return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
    throw new Error("Failed pattern match at Data.Map.Internal (line 626, column 1 - line 626, column 40): " + [
        v.constructor.name
    ]);
};
var size = function(v) {
    if (v instanceof Leaf) return 0;
    if (v instanceof Two) return (1 + size(v.value0) | 0) + size(v.value3) | 0;
    if (v instanceof Three) return ((2 + size(v.value0) | 0) + size(v.value3) | 0) + size(v.value6) | 0;
    throw new Error("Failed pattern match at Data.Map.Internal (line 676, column 1 - line 676, column 35): " + [
        v.constructor.name
    ]);
};
var singleton = function(k) {
    return function(v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var toUnfoldable = function(dictUnfoldable) {
    return function(m) {
        var go = function($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                }
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof Leaf) {
                        $copy_v = v.value1;
                        return;
                    }
                    if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                    }
                    if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                    }
                    if (v.value0 instanceof Two) {
                        $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                        return;
                    }
                    if (v.value0 instanceof Three) {
                        $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                        return;
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 591, column 18 - line 600, column 71): " + [
                        v.value0.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 590, column 3 - line 590, column 19): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($copy_v);
            return $tco_result;
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
    };
};
var toAscArray = toUnfoldable(Data_Unfoldable.unfoldableArray);
var toUnfoldableUnordered = function(dictUnfoldable) {
    return function(m) {
        var go = function($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                }
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof Leaf) {
                        $copy_v = v.value1;
                        return;
                    }
                    if (v.value0 instanceof Two) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, v.value1))));
                    }
                    if (v.value0 instanceof Three) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(v.value0.value6, v.value1))))));
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 18 - line 617, column 77): " + [
                        v.value0.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 611, column 3 - line 611, column 19): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($copy_v);
            return $tco_result;
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
    };
};
var showTree = function(dictShow) {
    return function(dictShow1) {
        return function(v) {
            if (v instanceof Leaf) return "Leaf";
            if (v instanceof Two) return "Two (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + ")")))))));
            if (v instanceof Three) return "Three (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + (") (" + (Data_Show.show(dictShow)(v.value4) + (") (" + (Data_Show.show(dictShow1)(v.value5) + (") (" + (showTree(dictShow)(dictShow1)(v.value6) + ")")))))))))))));
            throw new Error("Failed pattern match at Data.Map.Internal (line 164, column 1 - line 164, column 62): " + [
                v.constructor.name
            ]);
        };
    };
};
var showMap = function(dictShow) {
    return function(dictShow1) {
        return new Data_Show.Show(function(m) {
            return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(dictShow)(dictShow1)))(toAscArray(m)) + ")");
        });
    };
};
var lookupLE = function(dictOrd) {
    return function(k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function(v) {
            if (v instanceof Leaf) return Data_Maybe.Nothing.value;
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) return new Data_Maybe.Just({
                    key: v.value1,
                    value: v.value2
                });
                if (v2 instanceof Data_Ordering.GT) return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                    key: v.value1,
                    value: v.value2
                })(go(v.value3)));
                if (v2 instanceof Data_Ordering.LT) return go(v.value0);
                throw new Error("Failed pattern match at Data.Map.Internal (line 236, column 33 - line 239, column 20): " + [
                    v2.constructor.name
                ]);
            }
            if (v instanceof Three) {
                var v3 = comp(k)(v.value4);
                if (v3 instanceof Data_Ordering.EQ) return new Data_Maybe.Just({
                    key: v.value4,
                    value: v.value5
                });
                if (v3 instanceof Data_Ordering.GT) return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                    key: v.value4,
                    value: v.value5
                })(go(v.value6)));
                if (v3 instanceof Data_Ordering.LT) return go(new Two(v.value0, v.value1, v.value2, v.value3));
                throw new Error("Failed pattern match at Data.Map.Internal (line 240, column 45 - line 243, column 36): " + [
                    v3.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 235, column 5 - line 235, column 22): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var lookupGE = function(dictOrd) {
    return function(k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function(v) {
            if (v instanceof Leaf) return Data_Maybe.Nothing.value;
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) return new Data_Maybe.Just({
                    key: v.value1,
                    value: v.value2
                });
                if (v2 instanceof Data_Ordering.LT) return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                    key: v.value1,
                    value: v.value2
                })(go(v.value0)));
                if (v2 instanceof Data_Ordering.GT) return go(v.value3);
                throw new Error("Failed pattern match at Data.Map.Internal (line 270, column 33 - line 273, column 21): " + [
                    v2.constructor.name
                ]);
            }
            if (v instanceof Three) {
                var v3 = comp(k)(v.value1);
                if (v3 instanceof Data_Ordering.EQ) return new Data_Maybe.Just({
                    key: v.value1,
                    value: v.value2
                });
                if (v3 instanceof Data_Ordering.LT) return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                    key: v.value1,
                    value: v.value2
                })(go(v.value0)));
                if (v3 instanceof Data_Ordering.GT) return go(new Two(v.value3, v.value4, v.value5, v.value6));
                throw new Error("Failed pattern match at Data.Map.Internal (line 274, column 45 - line 277, column 37): " + [
                    v3.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 269, column 5 - line 269, column 22): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var lookup = function(dictOrd) {
    return function(k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Leaf) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                }
                if (v instanceof Two) {
                    var v2 = comp(k)(v.value1);
                    if (v2 instanceof Data_Ordering.EQ) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v.value2);
                    }
                    if (v2 instanceof Data_Ordering.LT) {
                        $copy_v = v.value0;
                        return;
                    }
                    $copy_v = v.value3;
                    return;
                }
                if (v instanceof Three) {
                    var v3 = comp(k)(v.value1);
                    if (v3 instanceof Data_Ordering.EQ) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v.value2);
                    }
                    var v4 = comp(k)(v.value4);
                    if (v4 instanceof Data_Ordering.EQ) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v.value5);
                    }
                    if (v3 instanceof Data_Ordering.LT) {
                        $copy_v = v.value0;
                        return;
                    }
                    if (v4 instanceof Data_Ordering.GT) {
                        $copy_v = v.value6;
                        return;
                    }
                    $copy_v = v.value3;
                    return;
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 211, column 5 - line 211, column 22): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($copy_v);
            return $tco_result;
        };
        return go;
    };
};
var member = function(dictOrd) {
    return function(k) {
        return function(m) {
            return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
        };
    };
};
var keys = function(v) {
    if (v instanceof Leaf) return Data_List_Types.Nil.value;
    if (v instanceof Two) return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
    if (v instanceof Three) return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
    throw new Error("Failed pattern match at Data.Map.Internal (line 620, column 1 - line 620, column 38): " + [
        v.constructor.name
    ]);
};
var isSubmap = function(dictOrd) {
    return function(dictEq) {
        return function(m1) {
            return function(m2) {
                var f = function(v) {
                    return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(lookup(dictOrd)(v.value0)(m2))(new Data_Maybe.Just(v.value1));
                };
                return Data_Foldable.all(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(f)(toUnfoldable(Data_List_Lazy_Types.unfoldableList)(m1));
            };
        };
    };
};
var isEmpty = function(v) {
    if (v instanceof Leaf) return true;
    return false;
};
var functorMap = new Data_Functor.Functor(function(v) {
    return function(v1) {
        if (v1 instanceof Leaf) return Leaf.value;
        if (v1 instanceof Two) return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
        if (v1 instanceof Three) return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
        throw new Error("Failed pattern match at Data.Map.Internal (line 101, column 1 - line 104, column 110): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var functorWithIndexMap = new Data_FunctorWithIndex.FunctorWithIndex(function() {
    return functorMap;
}, function(v) {
    return function(v1) {
        if (v1 instanceof Leaf) return Leaf.value;
        if (v1 instanceof Two) return new Two(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3));
        if (v1 instanceof Three) return new Three(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3), v1.value4, v(v1.value4)(v1.value5), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value6));
        throw new Error("Failed pattern match at Data.Map.Internal (line 106, column 1 - line 109, column 152): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var fromZipper = function($copy_dictOrd) {
    return function($copy_v) {
        return function($copy_tree) {
            var $tco_var_dictOrd = $copy_dictOrd;
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(dictOrd, v, tree) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return tree;
                }
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof TwoLeft) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                        return;
                    }
                    if (v.value0 instanceof TwoRight) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                        return;
                    }
                    if (v.value0 instanceof ThreeLeft) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                        return;
                    }
                    if (v.value0 instanceof ThreeMiddle) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                        return;
                    }
                    if (v.value0 instanceof ThreeRight) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                        return;
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 432, column 3 - line 437, column 88): " + [
                        v.value0.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 429, column 1 - line 429, column 80): " + [
                    v.constructor.name,
                    tree.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
            return $tco_result;
        };
    };
};
var insert = function(dictOrd) {
    return function(k) {
        return function(v) {
            var up = function($copy_v1) {
                return function($copy_v2) {
                    var $tco_var_v1 = $copy_v1;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v1, v2) {
                        if (v1 instanceof Data_List_Types.Nil) {
                            $tco_done = true;
                            return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                        }
                        if (v1 instanceof Data_List_Types.Cons) {
                            if (v1.value0 instanceof TwoLeft) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                            }
                            if (v1.value0 instanceof TwoRight) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                            }
                            if (v1.value0 instanceof ThreeLeft) {
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                return;
                            }
                            if (v1.value0 instanceof ThreeMiddle) {
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                return;
                            }
                            if (v1.value0 instanceof ThreeRight) {
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                return;
                            }
                            throw new Error("Failed pattern match at Data.Map.Internal (line 468, column 5 - line 473, column 108): " + [
                                v1.value0.constructor.name,
                                v2.constructor.name
                            ]);
                        }
                        throw new Error("Failed pattern match at Data.Map.Internal (line 465, column 3 - line 465, column 56): " + [
                            v1.constructor.name,
                            v2.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_v1, $copy_v2);
                    return $tco_result;
                };
            };
            var comp = Data_Ord.compare(dictOrd);
            var down = function($copy_ctx) {
                return function($copy_v1) {
                    var $tco_var_ctx = $copy_ctx;
                    var $tco_done1 = false;
                    var $tco_result;
                    function $tco_loop(ctx, v1) {
                        if (v1 instanceof Leaf) {
                            $tco_done1 = true;
                            return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                        }
                        if (v1 instanceof Two) {
                            var v2 = comp(k)(v1.value1);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_done1 = true;
                                return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                            }
                            if (v2 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                $copy_v1 = v1.value0;
                                return;
                            }
                            $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                            $copy_v1 = v1.value3;
                            return;
                        }
                        if (v1 instanceof Three) {
                            var v3 = comp(k)(v1.value1);
                            if (v3 instanceof Data_Ordering.EQ) {
                                $tco_done1 = true;
                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                            }
                            var v4 = comp(k)(v1.value4);
                            if (v4 instanceof Data_Ordering.EQ) {
                                $tco_done1 = true;
                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                            }
                            if (v3 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                $copy_v1 = v1.value0;
                                return;
                            }
                            if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                $copy_v1 = v1.value3;
                                return;
                            }
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                            $copy_v1 = v1.value6;
                            return;
                        }
                        throw new Error("Failed pattern match at Data.Map.Internal (line 448, column 3 - line 448, column 55): " + [
                            ctx.constructor.name,
                            v1.constructor.name
                        ]);
                    }
                    while(!$tco_done1)$tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                    return $tco_result;
                };
            };
            return down(Data_List_Types.Nil.value);
        };
    };
};
var pop = function(dictOrd) {
    return function(k) {
        var up = function($copy_ctxs) {
            return function($copy_tree) {
                var $tco_var_ctxs = $copy_ctxs;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(ctxs, tree) {
                    if (ctxs instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return tree;
                    }
                    if (ctxs instanceof Data_List_Types.Cons) {
                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                        }
                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                        }
                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                            $tco_var_ctxs = ctxs.value1;
                            $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                            return;
                        }
                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                            $tco_var_ctxs = ctxs.value1;
                            $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                            return;
                        }
                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                        }
                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                        }
                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                        }
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                        }
                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                        }
                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        }
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        }
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                        }
                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                        }
                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        }
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        }
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                        }
                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                        }
                        throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 9 - line 542, column 136): " + [
                            ctxs.value0.constructor.name,
                            tree.constructor.name
                        ]);
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 522, column 5 - line 542, column 136): " + [
                        ctxs.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                return $tco_result;
            };
        };
        var removeMaxNode = function($copy_ctx) {
            return function($copy_m) {
                var $tco_var_ctx = $copy_ctx;
                var $tco_done1 = false;
                var $tco_result;
                function $tco_loop(ctx, m) {
                    if (m instanceof Two && m.value0 instanceof Leaf && m.value3 instanceof Leaf) {
                        $tco_done1 = true;
                        return up(ctx)(Leaf.value);
                    }
                    if (m instanceof Two) {
                        $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                        $copy_m = m.value3;
                        return;
                    }
                    if (m instanceof Three && m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
                        $tco_done1 = true;
                        return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                    }
                    if (m instanceof Three) {
                        $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                        $copy_m = m.value6;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 554, column 5 - line 558, column 107): " + [
                        m.constructor.name
                    ]);
                }
                while(!$tco_done1)$tco_result = $tco_loop($tco_var_ctx, $copy_m);
                return $tco_result;
            };
        };
        var maxNode = function($copy_m) {
            var $tco_done2 = false;
            var $tco_result;
            function $tco_loop(m) {
                if (m instanceof Two && m.value3 instanceof Leaf) {
                    $tco_done2 = true;
                    return {
                        key: m.value1,
                        value: m.value2
                    };
                }
                if (m instanceof Two) {
                    $copy_m = m.value3;
                    return;
                }
                if (m instanceof Three && m.value6 instanceof Leaf) {
                    $tco_done2 = true;
                    return {
                        key: m.value4,
                        value: m.value5
                    };
                }
                if (m instanceof Three) {
                    $copy_m = m.value6;
                    return;
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 545, column 33 - line 549, column 45): " + [
                    m.constructor.name
                ]);
            }
            while(!$tco_done2)$tco_result = $tco_loop($copy_m);
            return $tco_result;
        };
        var comp = Data_Ord.compare(dictOrd);
        var down = function($copy_ctx) {
            return function($copy_m) {
                var $tco_var_ctx = $copy_ctx;
                var $tco_done3 = false;
                var $tco_result;
                function $tco_loop(ctx, m) {
                    if (m instanceof Leaf) {
                        $tco_done3 = true;
                        return Data_Maybe.Nothing.value;
                    }
                    if (m instanceof Two) {
                        var v = comp(k)(m.value1);
                        if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                            $tco_done3 = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                        }
                        if (v instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value0);
                            $tco_done3 = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                        }
                        if (v instanceof Data_Ordering.LT) {
                            $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                            $copy_m = m.value0;
                            return;
                        }
                        $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                        $copy_m = m.value3;
                        return;
                    }
                    if (m instanceof Three) {
                        var leaves = function() {
                            if (m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) return true;
                            return false;
                        }();
                        var v = comp(k)(m.value4);
                        var v3 = comp(k)(m.value1);
                        if (leaves && v3 instanceof Data_Ordering.EQ) {
                            $tco_done3 = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                        }
                        if (leaves && v instanceof Data_Ordering.EQ) {
                            $tco_done3 = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                        }
                        if (v3 instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value0);
                            $tco_done3 = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                        }
                        if (v instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value3);
                            $tco_done3 = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                        }
                        if (v3 instanceof Data_Ordering.LT) {
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                            $copy_m = m.value0;
                            return;
                        }
                        if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                            $copy_m = m.value3;
                            return;
                        }
                        $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                        $copy_m = m.value6;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 34 - line 518, column 80): " + [
                        m.constructor.name
                    ]);
                }
                while(!$tco_done3)$tco_result = $tco_loop($tco_var_ctx, $copy_m);
                return $tco_result;
            };
        };
        return down(Data_List_Types.Nil.value);
    };
};
var foldableMap = new Data_Foldable.Foldable(function(dictMonoid) {
    return function(f) {
        return function(m) {
            return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
        };
    };
}, function(f) {
    return function(z) {
        return function(m) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
        };
    };
}, function(f) {
    return function(z) {
        return function(m) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
        };
    };
});
var traversableMap = new Data_Traversable.Traversable(function() {
    return foldableMap;
}, function() {
    return functorMap;
}, function(dictApplicative) {
    return Data_Traversable.traverse(traversableMap)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function(dictApplicative) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof Leaf) return Control_Applicative.pure(dictApplicative)(Leaf.value);
            if (v1 instanceof Two) return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(Control_Applicative.pure(dictApplicative)(v1.value1)))(v(v1.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value3));
            if (v1 instanceof Three) return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(Control_Applicative.pure(dictApplicative)(v1.value1)))(v(v1.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value3)))(Control_Applicative.pure(dictApplicative)(v1.value4)))(v(v1.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value6));
            throw new Error("Failed pattern match at Data.Map.Internal (line 127, column 1 - line 142, column 31): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
});
var foldSubmapBy = function(dictOrd) {
    return function(appendFn) {
        return function(memptyValue) {
            return function(kmin) {
                return function(kmax) {
                    return function(f) {
                        var tooSmall = function() {
                            if (kmin instanceof Data_Maybe.Just) return function(k) {
                                return Data_Ord.lessThan(dictOrd)(k)(kmin.value0);
                            };
                            if (kmin instanceof Data_Maybe.Nothing) return Data_Function["const"](false);
                            throw new Error("Failed pattern match at Data.Map.Internal (line 333, column 7 - line 337, column 22): " + [
                                kmin.constructor.name
                            ]);
                        }();
                        var tooLarge = function() {
                            if (kmax instanceof Data_Maybe.Just) return function(k) {
                                return Data_Ord.greaterThan(dictOrd)(k)(kmax.value0);
                            };
                            if (kmax instanceof Data_Maybe.Nothing) return Data_Function["const"](false);
                            throw new Error("Failed pattern match at Data.Map.Internal (line 340, column 7 - line 344, column 22): " + [
                                kmax.constructor.name
                            ]);
                        }();
                        var inBounds = function() {
                            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Just) return function(k) {
                                return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k) && Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
                            };
                            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Nothing) return function(k) {
                                return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k);
                            };
                            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Just) return function(k) {
                                return Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
                            };
                            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Nothing) return Data_Function["const"](true);
                            throw new Error("Failed pattern match at Data.Map.Internal (line 347, column 7 - line 355, column 21): " + [
                                kmin.constructor.name,
                                kmax.constructor.name
                            ]);
                        }();
                        var go = function(v) {
                            if (v instanceof Leaf) return memptyValue;
                            if (v instanceof Two) return appendFn(appendFn(function() {
                                var $639 = tooSmall(v.value1);
                                if ($639) return memptyValue;
                                return go(v.value0);
                            }())(function() {
                                var $640 = inBounds(v.value1);
                                if ($640) return f(v.value1)(v.value2);
                                return memptyValue;
                            }()))(function() {
                                var $641 = tooLarge(v.value1);
                                if ($641) return memptyValue;
                                return go(v.value3);
                            }());
                            if (v instanceof Three) return appendFn(appendFn(appendFn(appendFn(function() {
                                var $646 = tooSmall(v.value1);
                                if ($646) return memptyValue;
                                return go(v.value0);
                            }())(function() {
                                var $647 = inBounds(v.value1);
                                if ($647) return f(v.value1)(v.value2);
                                return memptyValue;
                            }()))(function() {
                                var $648 = tooSmall(v.value4) || tooLarge(v.value1);
                                if ($648) return memptyValue;
                                return go(v.value3);
                            }()))(function() {
                                var $649 = inBounds(v.value4);
                                if ($649) return f(v.value4)(v.value5);
                                return memptyValue;
                            }()))(function() {
                                var $650 = tooLarge(v.value4);
                                if ($650) return memptyValue;
                                return go(v.value6);
                            }());
                            throw new Error("Failed pattern match at Data.Map.Internal (line 373, column 10 - line 385, column 67): " + [
                                v.constructor.name
                            ]);
                        };
                        return go;
                    };
                };
            };
        };
    };
};
var foldSubmap = function(dictOrd) {
    return function(dictMonoid) {
        return foldSubmapBy(dictOrd)(Data_Semigroup.append(dictMonoid.Semigroup0()))(Data_Monoid.mempty(dictMonoid));
    };
};
var findMin = function() {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Leaf) {
                    $tco_done = true;
                    return v;
                }
                if (v1 instanceof Two) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value1,
                        value: v1.value2
                    });
                    $copy_v1 = v1.value0;
                    return;
                }
                if (v1 instanceof Three) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value1,
                        value: v1.value2
                    });
                    $copy_v1 = v1.value0;
                    return;
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 308, column 5 - line 308, column 22): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return go(Data_Maybe.Nothing.value);
}();
var lookupGT = function(dictOrd) {
    return function(k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function(v) {
            if (v instanceof Leaf) return Data_Maybe.Nothing.value;
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) return findMin(v.value3);
                if (v2 instanceof Data_Ordering.LT) return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                    key: v.value1,
                    value: v.value2
                })(go(v.value0)));
                if (v2 instanceof Data_Ordering.GT) return go(v.value3);
                throw new Error("Failed pattern match at Data.Map.Internal (line 287, column 33 - line 290, column 21): " + [
                    v2.constructor.name
                ]);
            }
            if (v instanceof Three) {
                var v3 = comp(k)(v.value1);
                if (v3 instanceof Data_Ordering.EQ) return findMin(new Two(v.value3, v.value4, v.value5, v.value6));
                if (v3 instanceof Data_Ordering.LT) return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                    key: v.value1,
                    value: v.value2
                })(go(v.value0)));
                if (v3 instanceof Data_Ordering.GT) return go(new Two(v.value3, v.value4, v.value5, v.value6));
                throw new Error("Failed pattern match at Data.Map.Internal (line 291, column 45 - line 294, column 37): " + [
                    v3.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 286, column 5 - line 286, column 22): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var findMax = function() {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Leaf) {
                    $tco_done = true;
                    return v;
                }
                if (v1 instanceof Two) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value1,
                        value: v1.value2
                    });
                    $copy_v1 = v1.value3;
                    return;
                }
                if (v1 instanceof Three) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value4,
                        value: v1.value5
                    });
                    $copy_v1 = v1.value6;
                    return;
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 300, column 5 - line 300, column 22): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return go(Data_Maybe.Nothing.value);
}();
var lookupLT = function(dictOrd) {
    return function(k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function(v) {
            if (v instanceof Leaf) return Data_Maybe.Nothing.value;
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) return findMax(v.value0);
                if (v2 instanceof Data_Ordering.GT) return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                    key: v.value1,
                    value: v.value2
                })(go(v.value3)));
                if (v2 instanceof Data_Ordering.LT) return go(v.value0);
                throw new Error("Failed pattern match at Data.Map.Internal (line 253, column 33 - line 256, column 20): " + [
                    v2.constructor.name
                ]);
            }
            if (v instanceof Three) {
                var v3 = comp(k)(v.value4);
                if (v3 instanceof Data_Ordering.EQ) return findMax(new Two(v.value0, v.value1, v.value2, v.value3));
                if (v3 instanceof Data_Ordering.GT) return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                    key: v.value4,
                    value: v.value5
                })(go(v.value6)));
                if (v3 instanceof Data_Ordering.LT) return go(new Two(v.value0, v.value1, v.value2, v.value3));
                throw new Error("Failed pattern match at Data.Map.Internal (line 257, column 45 - line 260, column 36): " + [
                    v3.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 252, column 5 - line 252, column 22): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var eqMap = function(dictEq) {
    return function(dictEq1) {
        return new Data_Eq.Eq(function(m1) {
            return function(m2) {
                return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toAscArray(m1))(toAscArray(m2));
            };
        });
    };
};
var ordMap = function(dictOrd) {
    return function(dictOrd1) {
        return new Data_Ord.Ord(function() {
            return eqMap(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function(m1) {
            return function(m2) {
                return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(dictOrd)(dictOrd1)))(toAscArray(m1))(toAscArray(m2));
            };
        });
    };
};
var eq1Map = function(dictEq) {
    return new Data_Eq.Eq1(function(dictEq1) {
        return Data_Eq.eq(eqMap(dictEq)(dictEq1));
    });
};
var ord1Map = function(dictOrd) {
    return new Data_Ord.Ord1(function() {
        return eq1Map(dictOrd.Eq0());
    }, function(dictOrd1) {
        return Data_Ord.compare(ordMap(dictOrd)(dictOrd1));
    });
};
var empty = Leaf.value;
var fromFoldable = function(dictOrd) {
    return function(dictFoldable) {
        return Data_Foldable.foldl(dictFoldable)(function(m) {
            return function(v) {
                return insert(dictOrd)(v.value0)(v.value1)(m);
            };
        })(empty);
    };
};
var filterWithKey = function(dictOrd) {
    return function(predicate) {
        var $764 = fromFoldable(dictOrd)(Data_List_Lazy_Types.foldableList);
        var $765 = Data_List_Lazy.filter(Data_Tuple.uncurry(predicate));
        var $766 = toUnfoldable(Data_List_Lazy_Types.unfoldableList);
        return function($767) {
            return $764($765($766($767)));
        };
    };
};
var filter = function(dictOrd) {
    return function(predicate) {
        return filterWithKey(dictOrd)(Data_Function["const"](predicate));
    };
};
var filterKeys = function(dictOrd) {
    return function(predicate) {
        return filterWithKey(dictOrd)(function($768) {
            return Data_Function["const"](predicate($768));
        });
    };
};
var fromFoldableWithIndex = function(dictOrd) {
    return function(dictFoldableWithIndex) {
        return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function(k) {
            return function(m) {
                return function(v) {
                    return insert(dictOrd)(k)(v)(m);
                };
            };
        })(empty);
    };
};
var intersectionWith = function(dictOrd) {
    return function(f) {
        return function(m1) {
            return function(m2) {
                var go = function($copy_v) {
                    return function($copy_v1) {
                        return function($copy_m) {
                            var $tco_var_v = $copy_v;
                            var $tco_var_v1 = $copy_v1;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(v, v1, m) {
                                if (v instanceof Data_List_Types.Nil) {
                                    $tco_done = true;
                                    return m;
                                }
                                if (v1 instanceof Data_List_Types.Nil) {
                                    $tco_done = true;
                                    return m;
                                }
                                if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                    var v2 = Data_Ord.compare(dictOrd)(v.value0.value0)(v1.value0.value0);
                                    if (v2 instanceof Data_Ordering.LT) {
                                        $tco_var_v = v.value1;
                                        $tco_var_v1 = v1;
                                        $copy_m = m;
                                        return;
                                    }
                                    if (v2 instanceof Data_Ordering.EQ) {
                                        $tco_var_v = v.value1;
                                        $tco_var_v1 = v1.value1;
                                        $copy_m = insert(dictOrd)(v.value0.value0)(f(v.value0.value1)(v1.value0.value1))(m);
                                        return;
                                    }
                                    if (v2 instanceof Data_Ordering.GT) {
                                        $tco_var_v = v;
                                        $tco_var_v1 = v1.value1;
                                        $copy_m = m;
                                        return;
                                    }
                                    throw new Error("Failed pattern match at Data.Map.Internal (line 655, column 5 - line 658, column 27): " + [
                                        v2.constructor.name
                                    ]);
                                }
                                throw new Error("Failed pattern match at Data.Map.Internal (line 652, column 3 - line 652, column 17): " + [
                                    v.constructor.name,
                                    v1.constructor.name,
                                    m.constructor.name
                                ]);
                            }
                            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_m);
                            return $tco_result;
                        };
                    };
                };
                return go(toUnfoldable(Data_List_Types.unfoldableList)(m1))(toUnfoldable(Data_List_Types.unfoldableList)(m2))(empty);
            };
        };
    };
};
var intersection = function(dictOrd) {
    return intersectionWith(dictOrd)(Data_Function["const"]);
};
var $$delete = function(dictOrd) {
    return function(k) {
        return function(m) {
            return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
        };
    };
};
var difference = function(dictOrd) {
    return function(m1) {
        return function(m2) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(m1)(keys(m2));
        };
    };
};
var checkValid = function(tree) {
    var allHeights = function(v) {
        if (v instanceof Leaf) return Control_Applicative.pure(Data_List_Types.applicativeList)(0);
        if (v instanceof Two) return Data_Functor.map(Data_List_Types.functorList)(function(n) {
            return n + 1 | 0;
        })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(allHeights(v.value3)));
        if (v instanceof Three) return Data_Functor.map(Data_List_Types.functorList)(function(n) {
            return n + 1 | 0;
        })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value3))(allHeights(v.value6))));
        throw new Error("Failed pattern match at Data.Map.Internal (line 199, column 3 - line 199, column 36): " + [
            v.constructor.name
        ]);
    };
    return Data_List.length(Data_List.nub(Data_Ord.ordInt)(allHeights(tree))) === 1;
};
var asList = Control_Category.identity(Control_Category.categoryFn);
var foldableWithIndexMap = new Data_FoldableWithIndex.FoldableWithIndex(function() {
    return foldableMap;
}, function(dictMonoid) {
    return function(f) {
        return function(m) {
            return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(Data_Tuple.uncurry(f))(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
        };
    };
}, function(f) {
    return function(z) {
        return function(m) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(function() {
                var $769 = Data_Function.flip(f);
                return function($770) {
                    return Data_Tuple.uncurry($769($770));
                };
            }())(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
        };
    };
}, function(f) {
    return function(z) {
        return function(m) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Tuple.uncurry(f))(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
        };
    };
});
var mapMaybeWithKey = function(dictOrd) {
    return function(f) {
        return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(function(k) {
            return function(a) {
                return function(acc) {
                    return Data_Maybe.maybe(acc)(function(b) {
                        return insert(dictOrd)(k)(b)(acc);
                    })(f(k)(a));
                };
            };
        })(empty);
    };
};
var mapMaybe = function(dictOrd) {
    var $771 = mapMaybeWithKey(dictOrd);
    return function($772) {
        return $771(Data_Function["const"]($772));
    };
};
var catMaybes = function(dictOrd) {
    return mapMaybe(dictOrd)(Control_Category.identity(Control_Category.categoryFn));
};
var traversableWithIndexMap = new Data_TraversableWithIndex.TraversableWithIndex(function() {
    return foldableWithIndexMap;
}, function() {
    return functorWithIndexMap;
}, function() {
    return traversableMap;
}, function(dictApplicative) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof Leaf) return Control_Applicative.pure(dictApplicative)(Leaf.value);
            if (v1 instanceof Two) return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Two.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(v)(v1.value0)))(Control_Applicative.pure(dictApplicative)(v1.value1)))(v(v1.value1)(v1.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(v)(v1.value3));
            if (v1 instanceof Three) return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Three.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(v)(v1.value0)))(Control_Applicative.pure(dictApplicative)(v1.value1)))(v(v1.value1)(v1.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(v)(v1.value3)))(Control_Applicative.pure(dictApplicative)(v1.value4)))(v(v1.value4)(v1.value5)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(v)(v1.value6));
            throw new Error("Failed pattern match at Data.Map.Internal (line 144, column 1 - line 158, column 40): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
});
var applyMap = function(dictOrd) {
    return new Control_Apply.Apply(function() {
        return functorMap;
    }, intersectionWith(dictOrd)(Control_Category.identity(Control_Category.categoryFn)));
};
var bindMap = function(dictOrd) {
    return new Control_Bind.Bind(function() {
        return applyMap(dictOrd);
    }, function(m) {
        return function(f) {
            return mapMaybeWithKey(dictOrd)(function(k) {
                var $773 = lookup(dictOrd)(k);
                return function($774) {
                    return $773(f($774));
                };
            })(m);
        };
    });
};
var alter = function(dictOrd) {
    return function(f) {
        return function(k) {
            return function(m) {
                var v = f(lookup(dictOrd)(k)(m));
                if (v instanceof Data_Maybe.Nothing) return $$delete(dictOrd)(k)(m);
                if (v instanceof Data_Maybe.Just) return insert(dictOrd)(k)(v.value0)(m);
                throw new Error("Failed pattern match at Data.Map.Internal (line 563, column 15 - line 565, column 25): " + [
                    v.constructor.name
                ]);
            };
        };
    };
};
var fromFoldableWith = function(dictOrd) {
    return function(dictFoldable) {
        return function(f) {
            var combine = function(v) {
                return function(v1) {
                    if (v1 instanceof Data_Maybe.Just) return Data_Maybe.Just.create(f(v)(v1.value0));
                    if (v1 instanceof Data_Maybe.Nothing) return new Data_Maybe.Just(v);
                    throw new Error("Failed pattern match at Data.Map.Internal (line 580, column 3 - line 580, column 38): " + [
                        v.constructor.name,
                        v1.constructor.name
                    ]);
                };
            };
            return Data_Foldable.foldl(dictFoldable)(function(m) {
                return function(v) {
                    return alter(dictOrd)(combine(v.value1))(v.value0)(m);
                };
            })(empty);
        };
    };
};
var insertWith = function(dictOrd) {
    return function(f) {
        return function(k) {
            return function(v) {
                return alter(dictOrd)(function() {
                    var $775 = Data_Maybe.maybe(v)(Data_Function.flip(f)(v));
                    return function($776) {
                        return Data_Maybe.Just.create($775($776));
                    };
                }())(k);
            };
        };
    };
};
var unionWith = function(dictOrd) {
    return function(f) {
        return function(m1) {
            return function(m2) {
                var go = function(m) {
                    return function(v) {
                        return alter(dictOrd)(function() {
                            var $777 = Data_Maybe.maybe(v.value1)(f(v.value1));
                            return function($778) {
                                return Data_Maybe.Just.create($777($778));
                            };
                        }())(v.value0)(m);
                    };
                };
                return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
            };
        };
    };
};
var union = function(dictOrd) {
    return unionWith(dictOrd)(Data_Function["const"]);
};
var submap = function(dictOrd) {
    return function(kmin) {
        return function(kmax) {
            return foldSubmapBy(dictOrd)(union(dictOrd))(empty)(kmin)(kmax)(singleton);
        };
    };
};
var unions = function(dictOrd) {
    return function(dictFoldable) {
        return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
    };
};
var update = function(dictOrd) {
    return function(f) {
        return function(k) {
            return function(m) {
                return alter(dictOrd)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
var altMap = function(dictOrd) {
    return new Control_Alt.Alt(function() {
        return functorMap;
    }, union(dictOrd));
};
var plusMap = function(dictOrd) {
    return new Control_Plus.Plus(function() {
        return altMap(dictOrd);
    }, empty);
};
module.exports = {
    showTree: showTree,
    empty: empty,
    isEmpty: isEmpty,
    singleton: singleton,
    checkValid: checkValid,
    insert: insert,
    insertWith: insertWith,
    lookup: lookup,
    lookupLE: lookupLE,
    lookupLT: lookupLT,
    lookupGE: lookupGE,
    lookupGT: lookupGT,
    findMin: findMin,
    findMax: findMax,
    foldSubmap: foldSubmap,
    submap: submap,
    fromFoldable: fromFoldable,
    fromFoldableWith: fromFoldableWith,
    fromFoldableWithIndex: fromFoldableWithIndex,
    toUnfoldable: toUnfoldable,
    toUnfoldableUnordered: toUnfoldableUnordered,
    "delete": $$delete,
    pop: pop,
    member: member,
    alter: alter,
    update: update,
    keys: keys,
    values: values,
    union: union,
    unionWith: unionWith,
    unions: unions,
    intersection: intersection,
    intersectionWith: intersectionWith,
    difference: difference,
    isSubmap: isSubmap,
    size: size,
    filterWithKey: filterWithKey,
    filterKeys: filterKeys,
    filter: filter,
    mapMaybeWithKey: mapMaybeWithKey,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    eq1Map: eq1Map,
    eqMap: eqMap,
    ord1Map: ord1Map,
    ordMap: ordMap,
    showMap: showMap,
    altMap: altMap,
    plusMap: plusMap,
    functorMap: functorMap,
    functorWithIndexMap: functorWithIndexMap,
    applyMap: applyMap,
    bindMap: bindMap,
    foldableMap: foldableMap,
    foldableWithIndexMap: foldableWithIndexMap,
    traversableMap: traversableMap,
    traversableWithIndexMap: traversableWithIndexMap
};

},{"../Control.Alt/index.js":"82RIG","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Plus/index.js":"5lCU5","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.FoldableWithIndex/index.js":"b0hJn","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.FunctorWithIndex/index.js":"9mTwC","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.List/index.js":"iZK6y","../Data.List.Lazy/index.js":"7KbOn","../Data.List.Lazy.Types/index.js":"95AMQ","../Data.List.Types/index.js":"80Bba","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW","../Data.Traversable/index.js":"i5Kon","../Data.TraversableWithIndex/index.js":"bLveW","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk"}],"b0hJn":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var FoldableWithIndex = function(Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
    this.Foldable0 = Foldable0;
    this.foldMapWithIndex = foldMapWithIndex;
    this.foldlWithIndex = foldlWithIndex;
    this.foldrWithIndex = foldrWithIndex;
};
var foldrWithIndex = function(dict) {
    return dict.foldrWithIndex;
};
var traverseWithIndex_ = function(dictApplicative) {
    return function(dictFoldableWithIndex) {
        return function(f) {
            return foldrWithIndex(dictFoldableWithIndex)(function(i) {
                var $161 = Control_Apply.applySecond(dictApplicative.Apply0());
                var $162 = f(i);
                return function($163) {
                    return $161($162($163));
                };
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var forWithIndex_ = function(dictApplicative) {
    return function(dictFoldableWithIndex) {
        return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
    };
};
var foldrDefault = function(dictFoldableWithIndex) {
    return function(f) {
        return foldrWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
    };
};
var foldlWithIndex = function(dict) {
    return dict.foldlWithIndex;
};
var foldlDefault = function(dictFoldableWithIndex) {
    return function(f) {
        return foldlWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
    };
};
var foldableWithIndexTuple = new FoldableWithIndex(function() {
    return Data_Foldable.foldableTuple;
}, function(dictMonoid) {
    return function(f) {
        return function(v) {
            return f(Data_Unit.unit)(v.value1);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(Data_Unit.unit)(z)(v.value1);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(Data_Unit.unit)(v.value1)(z);
        };
    };
});
var foldableWithIndexMultiplicative = new FoldableWithIndex(function() {
    return Data_Foldable.foldableMultiplicative;
}, function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
    };
}, function(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
}, function(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
});
var foldableWithIndexMaybe = new FoldableWithIndex(function() {
    return Data_Foldable.foldableMaybe;
}, function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
    };
}, function(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
}, function(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
});
var foldableWithIndexLast = new FoldableWithIndex(function() {
    return Data_Foldable.foldableLast;
}, function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
    };
}, function(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
}, function(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
});
var foldableWithIndexIdentity = new FoldableWithIndex(function() {
    return Data_Foldable.foldableIdentity;
}, function(dictMonoid) {
    return function(f) {
        return function(v) {
            return f(Data_Unit.unit)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(Data_Unit.unit)(z)(v);
        };
    };
}, function(f) {
    return function(z) {
        return function(v) {
            return f(Data_Unit.unit)(v)(z);
        };
    };
});
var foldableWithIndexFirst = new FoldableWithIndex(function() {
    return Data_Foldable.foldableFirst;
}, function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
    };
}, function(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
}, function(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
});
var foldableWithIndexEither = new FoldableWithIndex(function() {
    return Data_Foldable.foldableEither;
}, function(dictMonoid) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof Data_Either.Left) return Data_Monoid.mempty(dictMonoid);
            if (v1 instanceof Data_Either.Right) return v(Data_Unit.unit)(v1.value0);
            throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
}, function(v) {
    return function(z) {
        return function(v1) {
            if (v1 instanceof Data_Either.Left) return z;
            if (v1 instanceof Data_Either.Right) return v(Data_Unit.unit)(z)(v1.value0);
            throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [
                v.constructor.name,
                z.constructor.name,
                v1.constructor.name
            ]);
        };
    };
}, function(v) {
    return function(z) {
        return function(v1) {
            if (v1 instanceof Data_Either.Left) return z;
            if (v1 instanceof Data_Either.Right) return v(Data_Unit.unit)(v1.value0)(z);
            throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [
                v.constructor.name,
                z.constructor.name,
                v1.constructor.name
            ]);
        };
    };
});
var foldableWithIndexDual = new FoldableWithIndex(function() {
    return Data_Foldable.foldableDual;
}, function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
    };
}, function(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
}, function(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
});
var foldableWithIndexDisj = new FoldableWithIndex(function() {
    return Data_Foldable.foldableDisj;
}, function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
}, function(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
});
var foldableWithIndexConst = new FoldableWithIndex(function() {
    return Data_Foldable.foldableConst;
}, function(dictMonoid) {
    return function(v) {
        return function(v1) {
            return Data_Monoid.mempty(dictMonoid);
        };
    };
}, function(v) {
    return function(z) {
        return function(v1) {
            return z;
        };
    };
}, function(v) {
    return function(z) {
        return function(v1) {
            return z;
        };
    };
});
var foldableWithIndexConj = new FoldableWithIndex(function() {
    return Data_Foldable.foldableConj;
}, function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
}, function(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
});
var foldableWithIndexAdditive = new FoldableWithIndex(function() {
    return Data_Foldable.foldableAdditive;
}, function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
    };
}, function(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
}, function(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
});
var foldWithIndexM = function(dictFoldableWithIndex) {
    return function(dictMonad) {
        return function(f) {
            return function(a0) {
                return foldlWithIndex(dictFoldableWithIndex)(function(i) {
                    return function(ma) {
                        return function(b) {
                            return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
                        };
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var foldMapWithIndexDefaultR = function(dictFoldableWithIndex) {
    return function(dictMonoid) {
        return function(f) {
            return foldrWithIndex(dictFoldableWithIndex)(function(i) {
                return function(x) {
                    return function(acc) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableWithIndexArray = new FoldableWithIndex(function() {
    return Data_Foldable.foldableArray;
}, function(dictMonoid) {
    return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
}, function(f) {
    return function(z) {
        var $164 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function(y) {
            return function(v) {
                return f(v.value0)(y)(v.value1);
            };
        })(z);
        var $165 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
        return function($166) {
            return $164($165($166));
        };
    };
}, function(f) {
    return function(z) {
        var $167 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function(v) {
            return function(y) {
                return f(v.value0)(v.value1)(y);
            };
        })(z);
        var $168 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
        return function($169) {
            return $167($168($169));
        };
    };
});
var foldMapWithIndexDefaultL = function(dictFoldableWithIndex) {
    return function(dictMonoid) {
        return function(f) {
            return foldlWithIndex(dictFoldableWithIndex)(function(i) {
                return function(acc) {
                    return function(x) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMapWithIndex = function(dict) {
    return dict.foldMapWithIndex;
};
var foldableWithIndexApp = function(dictFoldableWithIndex) {
    return new FoldableWithIndex(function() {
        return Data_Foldable.foldableApp(dictFoldableWithIndex.Foldable0());
    }, function(dictMonoid) {
        return function(f) {
            return function(v) {
                return foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(f)(v);
            };
        };
    }, function(f) {
        return function(z) {
            return function(v) {
                return foldlWithIndex(dictFoldableWithIndex)(f)(z)(v);
            };
        };
    }, function(f) {
        return function(z) {
            return function(v) {
                return foldrWithIndex(dictFoldableWithIndex)(f)(z)(v);
            };
        };
    });
};
var foldableWithIndexCompose = function(dictFoldableWithIndex) {
    return function(dictFoldableWithIndex1) {
        return new FoldableWithIndex(function() {
            return Data_Foldable.foldableCompose(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
        }, function(dictMonoid) {
            return function(f) {
                return function(v) {
                    return foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function() {
                        var $170 = foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid);
                        var $171 = Data_Tuple.curry(f);
                        return function($172) {
                            return $170($171($172));
                        };
                    }())(v);
                };
            };
        }, function(f) {
            return function(i) {
                return function(v) {
                    return foldlWithIndex(dictFoldableWithIndex)(function() {
                        var $173 = foldlWithIndex(dictFoldableWithIndex1);
                        var $174 = Data_Tuple.curry(f);
                        return function($175) {
                            return $173($174($175));
                        };
                    }())(i)(v);
                };
            };
        }, function(f) {
            return function(i) {
                return function(v) {
                    return foldrWithIndex(dictFoldableWithIndex)(function(a) {
                        return Data_Function.flip(foldrWithIndex(dictFoldableWithIndex1)(Data_Tuple.curry(f)(a)));
                    })(i)(v);
                };
            };
        });
    };
};
var foldableWithIndexCoproduct = function(dictFoldableWithIndex) {
    return function(dictFoldableWithIndex1) {
        return new FoldableWithIndex(function() {
            return Data_Foldable.foldableCoproduct(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
        }, function(dictMonoid) {
            return function(f) {
                return Data_Functor_Coproduct.coproduct(foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function($176) {
                    return f(Data_Either.Left.create($176));
                }))(foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid)(function($177) {
                    return f(Data_Either.Right.create($177));
                }));
            };
        }, function(f) {
            return function(z) {
                return Data_Functor_Coproduct.coproduct(foldlWithIndex(dictFoldableWithIndex)(function($178) {
                    return f(Data_Either.Left.create($178));
                })(z))(foldlWithIndex(dictFoldableWithIndex1)(function($179) {
                    return f(Data_Either.Right.create($179));
                })(z));
            };
        }, function(f) {
            return function(z) {
                return Data_Functor_Coproduct.coproduct(foldrWithIndex(dictFoldableWithIndex)(function($180) {
                    return f(Data_Either.Left.create($180));
                })(z))(foldrWithIndex(dictFoldableWithIndex1)(function($181) {
                    return f(Data_Either.Right.create($181));
                })(z));
            };
        });
    };
};
var foldableWithIndexProduct = function(dictFoldableWithIndex) {
    return function(dictFoldableWithIndex1) {
        return new FoldableWithIndex(function() {
            return Data_Foldable.foldableProduct(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
        }, function(dictMonoid) {
            return function(f) {
                return function(v) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function($182) {
                        return f(Data_Either.Left.create($182));
                    })(v.value0))(foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid)(function($183) {
                        return f(Data_Either.Right.create($183));
                    })(v.value1));
                };
            };
        }, function(f) {
            return function(z) {
                return function(v) {
                    return foldlWithIndex(dictFoldableWithIndex1)(function($184) {
                        return f(Data_Either.Right.create($184));
                    })(foldlWithIndex(dictFoldableWithIndex)(function($185) {
                        return f(Data_Either.Left.create($185));
                    })(z)(v.value0))(v.value1);
                };
            };
        }, function(f) {
            return function(z) {
                return function(v) {
                    return foldrWithIndex(dictFoldableWithIndex)(function($186) {
                        return f(Data_Either.Left.create($186));
                    })(foldrWithIndex(dictFoldableWithIndex1)(function($187) {
                        return f(Data_Either.Right.create($187));
                    })(z)(v.value1))(v.value0);
                };
            };
        });
    };
};
var foldlWithIndexDefault = function(dictFoldableWithIndex) {
    return function(c) {
        return function(u) {
            return function(xs) {
                return Data_Newtype.unwrap()(Data_Newtype.unwrap()(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function(i) {
                    var $188 = Data_Function.flip(c(i));
                    return function($189) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($188($189)));
                    };
                })(xs)))(u);
            };
        };
    };
};
var foldrWithIndexDefault = function(dictFoldableWithIndex) {
    return function(c) {
        return function(u) {
            return function(xs) {
                return Data_Newtype.unwrap()(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function(i) {
                    var $190 = c(i);
                    return function($191) {
                        return Data_Monoid_Endo.Endo($190($191));
                    };
                })(xs))(u);
            };
        };
    };
};
var surroundMapWithIndex = function(dictFoldableWithIndex) {
    return function(dictSemigroup) {
        return function(d) {
            return function(t) {
                return function(f) {
                    var joined = function(i) {
                        return function(a) {
                            return function(m) {
                                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
                            };
                        };
                    };
                    return Data_Newtype.unwrap()(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
                };
            };
        };
    };
};
var foldMapDefault = function(dictFoldableWithIndex) {
    return function(dictMonoid) {
        return function(f) {
            return foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(Data_Function["const"](f));
        };
    };
};
var findWithIndex = function(dictFoldableWithIndex) {
    return function(p) {
        var go = function(v) {
            return function(v1) {
                return function(v2) {
                    if (v1 instanceof Data_Maybe.Nothing && p(v)(v2)) return new Data_Maybe.Just({
                        index: v,
                        value: v2
                    });
                    return v1;
                };
            };
        };
        return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
    };
};
var findMapWithIndex = function(dictFoldableWithIndex) {
    return function(f) {
        var go = function(v) {
            return function(v1) {
                return function(v2) {
                    if (v1 instanceof Data_Maybe.Nothing) return f(v)(v2);
                    return v1;
                };
            };
        };
        return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
    };
};
var anyWithIndex = function(dictFoldableWithIndex) {
    return function(dictHeytingAlgebra) {
        return function(t) {
            var $192 = Data_Newtype.unwrap();
            var $193 = foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function(i) {
                var $195 = t(i);
                return function($196) {
                    return Data_Monoid_Disj.Disj($195($196));
                };
            });
            return function($194) {
                return $192($193($194));
            };
        };
    };
};
var allWithIndex = function(dictFoldableWithIndex) {
    return function(dictHeytingAlgebra) {
        return function(t) {
            var $197 = Data_Newtype.unwrap();
            var $198 = foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function(i) {
                var $200 = t(i);
                return function($201) {
                    return Data_Monoid_Conj.Conj($200($201));
                };
            });
            return function($199) {
                return $197($198($199));
            };
        };
    };
};
module.exports = {
    FoldableWithIndex: FoldableWithIndex,
    foldrWithIndex: foldrWithIndex,
    foldlWithIndex: foldlWithIndex,
    foldMapWithIndex: foldMapWithIndex,
    foldrWithIndexDefault: foldrWithIndexDefault,
    foldlWithIndexDefault: foldlWithIndexDefault,
    foldMapWithIndexDefaultR: foldMapWithIndexDefaultR,
    foldMapWithIndexDefaultL: foldMapWithIndexDefaultL,
    foldWithIndexM: foldWithIndexM,
    traverseWithIndex_: traverseWithIndex_,
    forWithIndex_: forWithIndex_,
    surroundMapWithIndex: surroundMapWithIndex,
    allWithIndex: allWithIndex,
    anyWithIndex: anyWithIndex,
    findWithIndex: findWithIndex,
    findMapWithIndex: findMapWithIndex,
    foldrDefault: foldrDefault,
    foldlDefault: foldlDefault,
    foldMapDefault: foldMapDefault,
    foldableWithIndexArray: foldableWithIndexArray,
    foldableWithIndexMaybe: foldableWithIndexMaybe,
    foldableWithIndexFirst: foldableWithIndexFirst,
    foldableWithIndexLast: foldableWithIndexLast,
    foldableWithIndexAdditive: foldableWithIndexAdditive,
    foldableWithIndexDual: foldableWithIndexDual,
    foldableWithIndexDisj: foldableWithIndexDisj,
    foldableWithIndexConj: foldableWithIndexConj,
    foldableWithIndexMultiplicative: foldableWithIndexMultiplicative,
    foldableWithIndexEither: foldableWithIndexEither,
    foldableWithIndexTuple: foldableWithIndexTuple,
    foldableWithIndexIdentity: foldableWithIndexIdentity,
    foldableWithIndexConst: foldableWithIndexConst,
    foldableWithIndexProduct: foldableWithIndexProduct,
    foldableWithIndexCoproduct: foldableWithIndexCoproduct,
    foldableWithIndexCompose: foldableWithIndexCompose,
    foldableWithIndexApp: foldableWithIndexApp
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Data.Either/index.js":"3WZha","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor.Coproduct/index.js":"gpKJ8","../Data.FunctorWithIndex/index.js":"9mTwC","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Monoid.Conj/index.js":"gxI2n","../Data.Monoid.Disj/index.js":"2qFBQ","../Data.Monoid.Dual/index.js":"9K8EM","../Data.Monoid.Endo/index.js":"jaqUa","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Tuple/index.js":"eOBbM","../Data.Unit/index.js":"d7oKp"}],"9mTwC":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Const = require("../Data.Const/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_App = require("../Data.Functor.App/index.js");
var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");
var Data_Functor_Product = require("../Data.Functor.Product/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var FunctorWithIndex = function(Functor0, mapWithIndex) {
    this.Functor0 = Functor0;
    this.mapWithIndex = mapWithIndex;
};
var mapWithIndex = function(dict) {
    return dict.mapWithIndex;
};
var mapDefault = function(dictFunctorWithIndex) {
    return function(f) {
        return mapWithIndex(dictFunctorWithIndex)(Data_Function["const"](f));
    };
};
var functorWithIndexTuple = new FunctorWithIndex(function() {
    return Data_Tuple.functorTuple;
}, function(f) {
    return Data_Functor.map(Data_Tuple.functorTuple)(f(Data_Unit.unit));
});
var functorWithIndexProduct = function(dictFunctorWithIndex) {
    return function(dictFunctorWithIndex1) {
        return new FunctorWithIndex(function() {
            return Data_Functor_Product.functorProduct(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
        }, function(f) {
            return function(v) {
                return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(mapWithIndex(dictFunctorWithIndex)(function($27) {
                    return f(Data_Either.Left.create($27));
                }))(mapWithIndex(dictFunctorWithIndex1)(function($28) {
                    return f(Data_Either.Right.create($28));
                }))(v);
            };
        });
    };
};
var functorWithIndexMultiplicative = new FunctorWithIndex(function() {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function(f) {
    return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
});
var functorWithIndexMaybe = new FunctorWithIndex(function() {
    return Data_Maybe.functorMaybe;
}, function(f) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
});
var functorWithIndexLast = new FunctorWithIndex(function() {
    return Data_Maybe_Last.functorLast;
}, function(f) {
    return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
});
var functorWithIndexIdentity = new FunctorWithIndex(function() {
    return Data_Identity.functorIdentity;
}, function(f) {
    return function(v) {
        return f(Data_Unit.unit)(v);
    };
});
var functorWithIndexFirst = new FunctorWithIndex(function() {
    return Data_Maybe_First.functorFirst;
}, function(f) {
    return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
});
var functorWithIndexEither = new FunctorWithIndex(function() {
    return Data_Either.functorEither;
}, function(f) {
    return Data_Functor.map(Data_Either.functorEither)(f(Data_Unit.unit));
});
var functorWithIndexDual = new FunctorWithIndex(function() {
    return Data_Monoid_Dual.functorDual;
}, function(f) {
    return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
});
var functorWithIndexDisj = new FunctorWithIndex(function() {
    return Data_Monoid_Disj.functorDisj;
}, function(f) {
    return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
});
var functorWithIndexCoproduct = function(dictFunctorWithIndex) {
    return function(dictFunctorWithIndex1) {
        return new FunctorWithIndex(function() {
            return Data_Functor_Coproduct.functorCoproduct(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
        }, function(f) {
            return function(v) {
                return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(mapWithIndex(dictFunctorWithIndex)(function($29) {
                    return f(Data_Either.Left.create($29));
                }))(mapWithIndex(dictFunctorWithIndex1)(function($30) {
                    return f(Data_Either.Right.create($30));
                }))(v);
            };
        });
    };
};
var functorWithIndexConst = new FunctorWithIndex(function() {
    return Data_Const.functorConst;
}, function(v) {
    return function(v1) {
        return v1;
    };
});
var functorWithIndexConj = new FunctorWithIndex(function() {
    return Data_Monoid_Conj.functorConj;
}, function(f) {
    return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
});
var functorWithIndexCompose = function(dictFunctorWithIndex) {
    return function(dictFunctorWithIndex1) {
        return new FunctorWithIndex(function() {
            return Data_Functor_Compose.functorCompose(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
        }, function(f) {
            return function(v) {
                return Data_Functor_Compose.Compose(mapWithIndex(dictFunctorWithIndex)(function() {
                    var $31 = mapWithIndex(dictFunctorWithIndex1);
                    var $32 = Data_Tuple.curry(f);
                    return function($33) {
                        return $31($32($33));
                    };
                }())(v));
            };
        });
    };
};
var functorWithIndexArray = new FunctorWithIndex(function() {
    return Data_Functor.functorArray;
}, $foreign.mapWithIndexArray);
var functorWithIndexApp = function(dictFunctorWithIndex) {
    return new FunctorWithIndex(function() {
        return Data_Functor_App.functorApp(dictFunctorWithIndex.Functor0());
    }, function(f) {
        return function(v) {
            return Data_Functor_App.App(mapWithIndex(dictFunctorWithIndex)(f)(v));
        };
    });
};
var functorWithIndexAdditive = new FunctorWithIndex(function() {
    return Data_Monoid_Additive.functorAdditive;
}, function(f) {
    return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
});
module.exports = {
    FunctorWithIndex: FunctorWithIndex,
    mapWithIndex: mapWithIndex,
    mapDefault: mapDefault,
    functorWithIndexArray: functorWithIndexArray,
    functorWithIndexMaybe: functorWithIndexMaybe,
    functorWithIndexFirst: functorWithIndexFirst,
    functorWithIndexLast: functorWithIndexLast,
    functorWithIndexAdditive: functorWithIndexAdditive,
    functorWithIndexDual: functorWithIndexDual,
    functorWithIndexConj: functorWithIndexConj,
    functorWithIndexDisj: functorWithIndexDisj,
    functorWithIndexMultiplicative: functorWithIndexMultiplicative,
    functorWithIndexEither: functorWithIndexEither,
    functorWithIndexTuple: functorWithIndexTuple,
    functorWithIndexIdentity: functorWithIndexIdentity,
    functorWithIndexConst: functorWithIndexConst,
    functorWithIndexProduct: functorWithIndexProduct,
    functorWithIndexCoproduct: functorWithIndexCoproduct,
    functorWithIndexCompose: functorWithIndexCompose,
    functorWithIndexApp: functorWithIndexApp
};

},{"./foreign.js":"l1veR","../Data.Bifunctor/index.js":"4aJ07","../Data.Const/index.js":"hlexi","../Data.Either/index.js":"3WZha","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Functor.App/index.js":"ihqtJ","../Data.Functor.Compose/index.js":"aJAZA","../Data.Functor.Coproduct/index.js":"gpKJ8","../Data.Functor.Product/index.js":"8AoSo","../Data.Identity/index.js":"3qeSN","../Data.Maybe/index.js":"ePH81","../Data.Maybe.First/index.js":"7YZYW","../Data.Maybe.Last/index.js":"kKmFe","../Data.Monoid.Additive/index.js":"gMw6U","../Data.Monoid.Conj/index.js":"gxI2n","../Data.Monoid.Disj/index.js":"2qFBQ","../Data.Monoid.Dual/index.js":"9K8EM","../Data.Monoid.Multiplicative/index.js":"ks234","../Data.Tuple/index.js":"eOBbM","../Data.Unit/index.js":"d7oKp"}],"l1veR":[function(require,module,exports) {
"use strict";
exports.mapWithIndexArray = function(f) {
    return function(xs) {
        var l = xs.length;
        var result = Array(l);
        for(var i = 0; i < l; i++)result[i] = f(i)(xs[i]);
        return result;
    };
};

},{}],"iZK6y":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_List_Internal = require("../Data.List.Internal/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Pattern = function(x) {
    return x;
};
var updateAt = function(v) {
    return function(v1) {
        return function(v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
            if (v2 instanceof Data_List_Types.Cons) return Data_Functor.map(Data_Maybe.functorMaybe)(function(v3) {
                return new Data_List_Types.Cons(v2.value0, v3);
            })(updateAt(v - 1 | 0)(v1)(v2.value1));
            return Data_Maybe.Nothing.value;
        };
    };
};
var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function(v) {
    return function(v1) {
        return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
    };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));
var uncons = function(v) {
    if (v instanceof Data_List_Types.Nil) return Data_Maybe.Nothing.value;
    if (v instanceof Data_List_Types.Cons) return new Data_Maybe.Just({
        head: v.value0,
        tail: v.value1
    });
    throw new Error("Failed pattern match at Data.List (line 263, column 1 - line 263, column 66): " + [
        v.constructor.name
    ]);
};
var toUnfoldable = function(dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function(xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function(rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function(v) {
    if (v instanceof Data_List_Types.Nil) return Data_Maybe.Nothing.value;
    if (v instanceof Data_List_Types.Cons) return new Data_Maybe.Just(v.value1);
    throw new Error("Failed pattern match at Data.List (line 249, column 1 - line 249, column 43): " + [
        v.constructor.name
    ]);
};
var stripPrefix = function(dictEq) {
    return function(v) {
        return function(s) {
            var go = function(prefix) {
                return function(input) {
                    if (prefix instanceof Data_List_Types.Cons && input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0)) return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                        a: prefix.value1,
                        b: input.value1
                    }));
                    if (prefix instanceof Data_List_Types.Nil) return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
                    return Data_Maybe.Nothing.value;
                };
            };
            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
        };
    };
};
var span = function(v) {
    return function(v1) {
        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
            var v2 = span(v)(v1.value1);
            return {
                init: new Data_List_Types.Cons(v1.value0, v2.init),
                rest: v2.rest
            };
        }
        return {
            init: Data_List_Types.Nil.value,
            rest: v1
        };
    };
};
var snoc = function(xs) {
    return function(x) {
        return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
    };
};
var singleton = function(a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};
var sortBy = function(cmp) {
    var merge = function(v) {
        return function(v1) {
            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
                if (Data_Boolean.otherwise) return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
            }
            if (v instanceof Data_List_Types.Nil) return v1;
            if (v1 instanceof Data_List_Types.Nil) return v;
            throw new Error("Failed pattern match at Data.List (line 477, column 3 - line 477, column 38): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
    var mergePairs = function(v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        return v;
    };
    var mergeAll = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return v.value0;
            }
            $copy_v = mergePairs(v);
            return;
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    var sequences = function(v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            if (Data_Boolean.otherwise) return ascending(v.value1.value0)(function(v1) {
                return new Data_List_Types.Cons(v.value0, v1);
            })(v.value1.value1);
        }
        return singleton(v);
    };
    var descending = function($copy_a) {
        return function($copy_as) {
            return function($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done1 = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = new Data_List_Types.Cons(a, as);
                        $copy_v = v.value1;
                        return;
                    }
                    $tco_done1 = true;
                    return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
                }
                while(!$tco_done1)$tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                return $tco_result;
            };
        };
    };
    var ascending = function($copy_a) {
        return function($copy_as) {
            return function($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done2 = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = function(ys) {
                            return as(new Data_List_Types.Cons(a, ys));
                        };
                        $copy_v = v.value1;
                        return;
                    }
                    $tco_done2 = true;
                    return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
                }
                while(!$tco_done2)$tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                return $tco_result;
            };
        };
    };
    return function($345) {
        return mergeAll(sequences($345));
    };
};
var sort = function(dictOrd) {
    return function(xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var tails = function(v) {
    if (v instanceof Data_List_Types.Nil) return singleton(Data_List_Types.Nil.value);
    if (v instanceof Data_List_Types.Cons) return new Data_List_Types.Cons(v, tails(v.value1));
    throw new Error("Failed pattern match at Data.List (line 657, column 1 - line 657, column 43): " + [
        v.constructor.name
    ]);
};
var showPattern = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
    });
};
var reverse = function() {
    var go = function($copy_acc) {
        return function($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return acc;
                }
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                }
                throw new Error("Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): " + [
                    acc.constructor.name,
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_acc, $copy_v);
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
}();
var take = function() {
    var go = function($copy_acc) {
        return function($copy_v) {
            return function($copy_v1) {
                var $tco_var_acc = $copy_acc;
                var $tco_var_v = $copy_v;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(acc, v, v1) {
                    if (v < 1) {
                        $tco_done = true;
                        return reverse(acc);
                    }
                    if (v1 instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return reverse(acc);
                    }
                    if (v1 instanceof Data_List_Types.Cons) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $tco_var_v = v - 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.List (line 524, column 3 - line 524, column 35): " + [
                        acc.constructor.name,
                        v.constructor.name,
                        v1.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
                return $tco_result;
            };
        };
    };
    return go(Data_List_Types.Nil.value);
}();
var takeWhile = function(p) {
    var go = function($copy_acc) {
        return function($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                }
                $tco_done = true;
                return reverse(acc);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_acc, $copy_v);
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var unsnoc = function(lst) {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                }
                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return new Data_Maybe.Just({
                        revInit: v1,
                        last: v.value0
                    });
                }
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_v = v.value1;
                    $copy_v1 = new Data_List_Types.Cons(v.value0, v1);
                    return;
                }
                throw new Error("Failed pattern match at Data.List (line 274, column 3 - line 274, column 21): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return Data_Functor.map(Data_Maybe.functorMaybe)(function(h) {
        return {
            init: reverse(h.revInit),
            last: h.last
        };
    })(go(lst)(Data_List_Types.Nil.value));
};
var zipWith = function(f) {
    return function(xs) {
        return function(ys) {
            var go = function($copy_v) {
                return function($copy_v1) {
                    return function($copy_acc) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, acc) {
                            if (v instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            }
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            }
                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                return;
                            }
                            throw new Error("Failed pattern match at Data.List (line 795, column 3 - line 795, column 21): " + [
                                v.constructor.name,
                                v1.constructor.name,
                                acc.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
                        return $tco_result;
                    };
                };
            };
            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var zipWithA = function(dictApplicative) {
    return function(f) {
        return function(xs) {
            return function(ys) {
                return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var range = function(start) {
    return function(end) {
        if (start === end) return singleton(start);
        if (Data_Boolean.otherwise) {
            var go = function($copy_s) {
                return function($copy_e) {
                    return function($copy_step) {
                        return function($copy_rest) {
                            var $tco_var_s = $copy_s;
                            var $tco_var_e = $copy_e;
                            var $tco_var_step = $copy_step;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(s, e, step, rest) {
                                if (s === e) {
                                    $tco_done = true;
                                    return new Data_List_Types.Cons(s, rest);
                                }
                                if (Data_Boolean.otherwise) {
                                    $tco_var_s = s + step | 0;
                                    $tco_var_e = e;
                                    $tco_var_step = step;
                                    $copy_rest = new Data_List_Types.Cons(s, rest);
                                    return;
                                }
                                throw new Error("Failed pattern match at Data.List (line 152, column 3 - line 153, column 65): " + [
                                    s.constructor.name,
                                    e.constructor.name,
                                    step.constructor.name,
                                    rest.constructor.name
                                ]);
                            }
                            while(!$tco_done)$tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
                            return $tco_result;
                        };
                    };
                };
            };
            return go(end)(start)(function() {
                var $226 = start > end;
                if ($226) return 1;
                return -1;
            }())(Data_List_Types.Nil.value);
        }
        throw new Error("Failed pattern match at Data.List (line 148, column 1 - line 148, column 32): " + [
            start.constructor.name,
            end.constructor.name
        ]);
    };
};
var partition = function(p) {
    return function(xs) {
        var select = function(x) {
            return function(v) {
                var $229 = p(x);
                if ($229) return {
                    no: v.no,
                    yes: new Data_List_Types.Cons(x, v.yes)
                };
                return {
                    no: new Data_List_Types.Cons(x, v.no),
                    yes: v.yes
                };
            };
        };
        return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
            no: Data_List_Types.Nil.value,
            yes: Data_List_Types.Nil.value
        })(xs);
    };
};
var $$null = function(v) {
    if (v instanceof Data_List_Types.Nil) return true;
    return false;
};
var nubBy = function(p) {
    var go = function($copy_v) {
        return function($copy_acc) {
            return function($copy_v1) {
                var $tco_var_v = $copy_v;
                var $tco_var_acc = $copy_acc;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v, acc, v1) {
                    if (v1 instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return acc;
                    }
                    if (v1 instanceof Data_List_Types.Cons) {
                        var v2 = Data_List_Internal.insertAndLookupBy(p)(v1.value0)(v);
                        if (v2.found) {
                            $tco_var_v = v2.result;
                            $tco_var_acc = acc;
                            $copy_v1 = v1.value1;
                            return;
                        }
                        $tco_var_v = v2.result;
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $copy_v1 = v1.value1;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.List (line 689, column 5 - line 689, column 23): " + [
                        v.constructor.name,
                        acc.constructor.name,
                        v1.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $tco_var_acc, $copy_v1);
                return $tco_result;
            };
        };
    };
    var $346 = go(Data_List_Internal.emptySet)(Data_List_Types.Nil.value);
    return function($347) {
        return reverse($346($347));
    };
};
var nub = function(dictOrd) {
    return nubBy(Data_Ord.compare(dictOrd));
};
var newtypePattern = new Data_Newtype.Newtype(function() {
    return undefined;
});
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);
var mapMaybe = function(f) {
    var go = function($copy_acc) {
        return function($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                }
                if (v instanceof Data_List_Types.Cons) {
                    var v1 = f(v.value0);
                    if (v1 instanceof Data_Maybe.Nothing) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    }
                    if (v1 instanceof Data_Maybe.Just) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $copy_v = v.value1;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.List (line 423, column 5 - line 425, column 32): " + [
                        v1.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Data.List (line 421, column 3 - line 421, column 27): " + [
                    acc.constructor.name,
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_acc, $copy_v);
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var manyRec = function(dictMonadRec) {
    return function(dictAlternative) {
        return function(p) {
            var go = function(acc) {
                return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Alt.alt(dictAlternative.Plus1().Alt0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function(aa) {
                    return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function(v) {
                        return new Data_List_Types.Cons(v, acc);
                    })(function(v) {
                        return reverse(acc);
                    })(aa));
                });
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
        };
    };
};
var someRec = function(dictMonadRec) {
    return function(dictAlternative) {
        return function(v) {
            return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
        };
    };
};
var some = function(dictAlternative) {
    return function(dictLazy) {
        return function(v) {
            return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function(v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function(dictAlternative) {
    return function(dictLazy) {
        return function(v) {
            return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
        };
    };
};
var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function(acc) {
    return function(v) {
        return acc + 1 | 0;
    };
})(0);
var last = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value0);
        }
        if (v instanceof Data_List_Types.Cons) {
            $copy_v = v.value1;
            return;
        }
        $tco_done = true;
        return Data_Maybe.Nothing.value;
    }
    while(!$tco_done)$tco_result = $tco_loop($copy_v);
    return $tco_result;
};
var insertBy = function(v) {
    return function(x) {
        return function(v1) {
            if (v1 instanceof Data_List_Types.Nil) return singleton(x);
            if (v1 instanceof Data_List_Types.Cons) {
                var v2 = v(x)(v1.value0);
                if (v2 instanceof Data_Ordering.GT) return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
                return new Data_List_Types.Cons(x, v1);
            }
            throw new Error("Failed pattern match at Data.List (line 220, column 1 - line 220, column 68): " + [
                v.constructor.name,
                x.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
var insertAt = function(v) {
    return function(v1) {
        return function(v2) {
            if (v === 0) return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
            if (v2 instanceof Data_List_Types.Cons) return Data_Functor.map(Data_Maybe.functorMaybe)(function(v3) {
                return new Data_List_Types.Cons(v2.value0, v3);
            })(insertAt(v - 1 | 0)(v1)(v2.value1));
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function(dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var init = function(lst) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function(v) {
        return v.init;
    })(unsnoc(lst));
};
var index = function($copy_v) {
    return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_Maybe.Nothing.value;
            }
            if (v instanceof Data_List_Types.Cons && v1 === 0) {
                $tco_done = true;
                return new Data_Maybe.Just(v.value0);
            }
            if (v instanceof Data_List_Types.Cons) {
                $tco_var_v = v.value1;
                $copy_v1 = v1 - 1 | 0;
                return;
            }
            throw new Error("Failed pattern match at Data.List (line 285, column 1 - line 285, column 44): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
        return $tco_result;
    };
};
var head = function(v) {
    if (v instanceof Data_List_Types.Nil) return Data_Maybe.Nothing.value;
    if (v instanceof Data_List_Types.Cons) return new Data_Maybe.Just(v.value0);
    throw new Error("Failed pattern match at Data.List (line 234, column 1 - line 234, column 22): " + [
        v.constructor.name
    ]);
};
var transpose = function(v) {
    if (v instanceof Data_List_Types.Nil) return Data_List_Types.Nil.value;
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) return transpose(v.value1);
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
    throw new Error("Failed pattern match at Data.List (line 829, column 1 - line 829, column 54): " + [
        v.constructor.name
    ]);
};
var groupBy = function(v) {
    return function(v1) {
        if (v1 instanceof Data_List_Types.Nil) return Data_List_Types.Nil.value;
        if (v1 instanceof Data_List_Types.Cons) {
            var v2 = span(v(v1.value0))(v1.value1);
            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
        }
        throw new Error("Failed pattern match at Data.List (line 624, column 1 - line 624, column 80): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
};
var groupAllBy = function(dictOrd) {
    return function(p) {
        var $348 = groupBy(p);
        var $349 = sort(dictOrd);
        return function($350) {
            return $348($349($350));
        };
    };
};
var group = function(dictEq) {
    return groupBy(Data_Eq.eq(dictEq));
};
var groupAll = function(dictOrd) {
    var $351 = group(dictOrd.Eq0());
    var $352 = sort(dictOrd);
    return function($353) {
        return $351($352($353));
    };
};
var group$prime = function(dictWarn) {
    return function(dictOrd) {
        return groupAll(dictOrd);
    };
};
var fromFoldable = function(dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};
var foldM = function(dictMonad) {
    return function(v) {
        return function(b) {
            return function(v1) {
                if (v1 instanceof Data_List_Types.Nil) return Control_Applicative.pure(dictMonad.Applicative0())(b);
                if (v1 instanceof Data_List_Types.Cons) return Control_Bind.bind(dictMonad.Bind1())(v(b)(v1.value0))(function(b$prime) {
                    return foldM(dictMonad)(v)(b$prime)(v1.value1);
                });
                throw new Error("Failed pattern match at Data.List (line 840, column 1 - line 840, column 72): " + [
                    v.constructor.name,
                    b.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    };
};
var findIndex = function(fn) {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Data_List_Types.Cons) {
                    if (fn(v1.value0)) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v);
                    }
                    if (Data_Boolean.otherwise) {
                        $tco_var_v = v + 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    }
                }
                if (v1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                }
                throw new Error("Failed pattern match at Data.List (line 305, column 3 - line 305, column 35): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return go(0);
};
var findLastIndex = function(fn) {
    return function(xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function(v) {
            return (length(xs) - 1 | 0) - v | 0;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function(dictMonad) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof Data_List_Types.Nil) return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
            if (v1 instanceof Data_List_Types.Cons) return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function(b) {
                return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function(xs$prime) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(function() {
                        if (b) return new Data_List_Types.Cons(v1.value0, xs$prime);
                        return xs$prime;
                    }());
                });
            });
            throw new Error("Failed pattern match at Data.List (line 407, column 1 - line 407, column 75): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
var filter = function(p) {
    var go = function($copy_acc) {
        return function($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                }
                if (v instanceof Data_List_Types.Cons) {
                    if (p(v.value0)) {
                        $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                        $copy_v = v.value1;
                        return;
                    }
                    if (Data_Boolean.otherwise) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    }
                }
                throw new Error("Failed pattern match at Data.List (line 394, column 3 - line 394, column 27): " + [
                    acc.constructor.name,
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_acc, $copy_v);
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var intersectBy = function(v) {
    return function(v1) {
        return function(v2) {
            if (v1 instanceof Data_List_Types.Nil) return Data_List_Types.Nil.value;
            if (v2 instanceof Data_List_Types.Nil) return Data_List_Types.Nil.value;
            return filter(function(x) {
                return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function(dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var nubByEq = function(v) {
    return function(v1) {
        if (v1 instanceof Data_List_Types.Nil) return Data_List_Types.Nil.value;
        if (v1 instanceof Data_List_Types.Cons) return new Data_List_Types.Cons(v1.value0, nubByEq(v)(filter(function(y) {
            return !v(v1.value0)(y);
        })(v1.value1)));
        throw new Error("Failed pattern match at Data.List (line 721, column 1 - line 721, column 61): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
};
var nubEq = function(dictEq) {
    return nubByEq(Data_Eq.eq(dictEq));
};
var eqPattern = function(dictEq) {
    return new Data_Eq.Eq(function(x) {
        return function(y) {
            return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
        };
    });
};
var ordPattern = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqPattern(dictOrd.Eq0());
    }, function(x) {
        return function(y) {
            return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
        };
    });
};
var elemLastIndex = function(dictEq) {
    return function(x) {
        return findLastIndex(function(v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function(dictEq) {
    return function(x) {
        return findIndex(function(v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function(p) {
    var go = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                $copy_v = v.value1;
                return;
            }
            $tco_done = true;
            return v;
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    return go;
};
var dropEnd = function(n) {
    return function(xs) {
        return take(length(xs) - n | 0)(xs);
    };
};
var drop = function($copy_v) {
    return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v < 1) {
                $tco_done = true;
                return v1;
            }
            if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_List_Types.Nil.value;
            }
            if (v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v - 1 | 0;
                $copy_v1 = v1.value1;
                return;
            }
            throw new Error("Failed pattern match at Data.List (line 547, column 1 - line 547, column 42): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
        return $tco_result;
    };
};
var slice = function(start) {
    return function(end) {
        return function(xs) {
            return take(end - start | 0)(drop(start)(xs));
        };
    };
};
var takeEnd = function(n) {
    return function(xs) {
        return drop(length(xs) - n | 0)(xs);
    };
};
var deleteBy = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Data_List_Types.Nil) return Data_List_Types.Nil.value;
            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) return v2.value1;
            if (v2 instanceof Data_List_Types.Cons) return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            throw new Error("Failed pattern match at Data.List (line 748, column 1 - line 748, column 67): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var unionBy = function(eq) {
    return function(xs) {
        return function(ys) {
            return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
        };
    };
};
var union = function(dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var deleteAt = function(v) {
    return function(v1) {
        if (v === 0 && v1 instanceof Data_List_Types.Cons) return new Data_Maybe.Just(v1.value1);
        if (v1 instanceof Data_List_Types.Cons) return Data_Functor.map(Data_Maybe.functorMaybe)(function(v2) {
            return new Data_List_Types.Cons(v1.value0, v2);
        })(deleteAt(v - 1 | 0)(v1.value1));
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function(dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function(dictEq) {
    return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));
var concat = function(v) {
    return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
};
var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
var alterAt = function(v) {
    return function(v1) {
        return function(v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) return Data_Maybe.Just.create(function() {
                var v3 = v1(v2.value0);
                if (v3 instanceof Data_Maybe.Nothing) return v2.value1;
                if (v3 instanceof Data_Maybe.Just) return new Data_List_Types.Cons(v3.value0, v2.value1);
                throw new Error("Failed pattern match at Data.List (line 356, column 3 - line 358, column 23): " + [
                    v3.constructor.name
                ]);
            }());
            if (v2 instanceof Data_List_Types.Cons) return Data_Functor.map(Data_Maybe.functorMaybe)(function(v3) {
                return new Data_List_Types.Cons(v2.value0, v3);
            })(alterAt(v - 1 | 0)(v1)(v2.value1));
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function(n) {
    return function(f) {
        return alterAt(n)(function($354) {
            return Data_Maybe.Just.create(f($354));
        });
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    singleton: singleton,
    range: range,
    some: some,
    someRec: someRec,
    many: many,
    manyRec: manyRec,
    "null": $$null,
    length: length,
    snoc: snoc,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    Pattern: Pattern,
    stripPrefix: stripPrefix,
    slice: slice,
    take: take,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    drop: drop,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    group: group,
    groupAll: groupAll,
    "group'": group$prime,
    groupBy: groupBy,
    groupAllBy: groupAllBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    nubEq: nubEq,
    nubByEq: nubByEq,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    transpose: transpose,
    foldM: foldM,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern,
    all: Data_Foldable.all,
    any: Data_Foldable.any,
    elem: Data_Foldable.elem,
    find: Data_Foldable.find,
    findMap: Data_Foldable.findMap,
    fold: Data_Foldable.fold,
    foldMap: Data_Foldable.foldMap,
    foldl: Data_Foldable.foldl,
    foldr: Data_Foldable.foldr,
    intercalate: Data_Foldable.intercalate,
    notElem: Data_Foldable.notElem,
    Cons: Data_List_Types.Cons,
    Nil: Data_List_Types.Nil,
    scanl: Data_Traversable.scanl,
    scanr: Data_Traversable.scanr
};

},{"../Control.Alt/index.js":"82RIG","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Lazy/index.js":"chn7k","../Control.Monad.Rec.Class/index.js":"dMFG0","../Data.Bifunctor/index.js":"4aJ07","../Data.Boolean/index.js":"lv1qw","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.FunctorWithIndex/index.js":"9mTwC","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.List.Internal/index.js":"7xrIp","../Data.List.Types/index.js":"80Bba","../Data.Maybe/index.js":"ePH81","../Data.Newtype/index.js":"czJbt","../Data.NonEmpty/index.js":"4pAZZ","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW","../Data.Traversable/index.js":"i5Kon","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk","../Data.Unit/index.js":"d7oKp"}],"7xrIp":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Leaf = function() {
    function Leaf1() {
    }
    Leaf1.value = new Leaf1();
    return Leaf1;
}();
var Two = function() {
    function Two1(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    Two1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new Two1(value0, value1, value2);
            };
        };
    };
    return Two1;
}();
var Three = function() {
    function Three1(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    }
    Three1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return function(value4) {
                        return new Three1(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return Three1;
}();
var TwoLeft = function() {
    function TwoLeft1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    TwoLeft1.create = function(value0) {
        return function(value1) {
            return new TwoLeft1(value0, value1);
        };
    };
    return TwoLeft1;
}();
var TwoRight = function() {
    function TwoRight1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    TwoRight1.create = function(value0) {
        return function(value1) {
            return new TwoRight1(value0, value1);
        };
    };
    return TwoRight1;
}();
var ThreeLeft = function() {
    function ThreeLeft1(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    ThreeLeft1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new ThreeLeft1(value0, value1, value2, value3);
                };
            };
        };
    };
    return ThreeLeft1;
}();
var ThreeMiddle = function() {
    function ThreeMiddle1(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    ThreeMiddle1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new ThreeMiddle1(value0, value1, value2, value3);
                };
            };
        };
    };
    return ThreeMiddle1;
}();
var ThreeRight = function() {
    function ThreeRight1(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    ThreeRight1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new ThreeRight1(value0, value1, value2, value3);
                };
            };
        };
    };
    return ThreeRight1;
}();
var KickUp = function() {
    function KickUp1(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    KickUp1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new KickUp1(value0, value1, value2);
            };
        };
    };
    return KickUp1;
}();
var fromZipper = function($copy_v) {
    return function($copy_tree) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, tree) {
            if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return tree;
            }
            if (v instanceof Data_List_Types.Cons) {
                if (v.value0 instanceof TwoLeft) {
                    $tco_var_v = v.value1;
                    $copy_tree = new Two(tree, v.value0.value0, v.value0.value1);
                    return;
                }
                if (v.value0 instanceof TwoRight) {
                    $tco_var_v = v.value1;
                    $copy_tree = new Two(v.value0.value0, v.value0.value1, tree);
                    return;
                }
                if (v.value0 instanceof ThreeLeft) {
                    $tco_var_v = v.value1;
                    $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3);
                    return;
                }
                if (v.value0 instanceof ThreeMiddle) {
                    $tco_var_v = v.value1;
                    $copy_tree = new Three(v.value0.value0, v.value0.value1, tree, v.value0.value2, v.value0.value3);
                    return;
                }
                if (v.value0 instanceof ThreeRight) {
                    $tco_var_v = v.value1;
                    $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, tree);
                    return;
                }
                throw new Error("Failed pattern match at Data.List.Internal (line 25, column 3 - line 30, column 76): " + [
                    v.value0.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.List.Internal (line 22, column 1 - line 22, column 63): " + [
                v.constructor.name,
                tree.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_tree);
        return $tco_result;
    };
};
var insertAndLookupBy = function(comp) {
    return function(k) {
        return function(orig) {
            var up = function($copy_v) {
                return function($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Data_List_Types.Nil) {
                            $tco_done = true;
                            return new Two(v1.value0, v1.value1, v1.value2);
                        }
                        if (v instanceof Data_List_Types.Cons) {
                            if (v.value0 instanceof TwoLeft) {
                                $tco_done = true;
                                return fromZipper(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v.value0.value0, v.value0.value1));
                            }
                            if (v.value0 instanceof TwoRight) {
                                $tco_done = true;
                                return fromZipper(v.value1)(new Three(v.value0.value0, v.value0.value1, v1.value0, v1.value1, v1.value2));
                            }
                            if (v.value0 instanceof ThreeLeft) {
                                $tco_var_v = v.value1;
                                $copy_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2), v.value0.value0, new Two(v.value0.value1, v.value0.value2, v.value0.value3));
                                return;
                            }
                            if (v.value0 instanceof ThreeMiddle) {
                                $tco_var_v = v.value1;
                                $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v1.value0), v1.value1, new Two(v1.value2, v.value0.value2, v.value0.value3));
                                return;
                            }
                            if (v.value0 instanceof ThreeRight) {
                                $tco_var_v = v.value1;
                                $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2), v.value0.value3, new Two(v1.value0, v1.value1, v1.value2));
                                return;
                            }
                            throw new Error("Failed pattern match at Data.List.Internal (line 58, column 5 - line 63, column 90): " + [
                                v.value0.constructor.name,
                                v1.constructor.name
                            ]);
                        }
                        throw new Error("Failed pattern match at Data.List.Internal (line 55, column 3 - line 55, column 50): " + [
                            v.constructor.name,
                            v1.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
                    return $tco_result;
                };
            };
            var down = function($copy_ctx) {
                return function($copy_v) {
                    var $tco_var_ctx = $copy_ctx;
                    var $tco_done1 = false;
                    var $tco_result;
                    function $tco_loop(ctx, v) {
                        if (v instanceof Leaf) {
                            $tco_done1 = true;
                            return {
                                found: false,
                                result: up(ctx)(new KickUp(Leaf.value, k, Leaf.value))
                            };
                        }
                        if (v instanceof Two) {
                            var v1 = comp(k)(v.value1);
                            if (v1 instanceof Data_Ordering.EQ) {
                                $tco_done1 = true;
                                return {
                                    found: true,
                                    result: orig
                                };
                            }
                            if (v1 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v.value1, v.value2), ctx);
                                $copy_v = v.value0;
                                return;
                            }
                            $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v.value0, v.value1), ctx);
                            $copy_v = v.value2;
                            return;
                        }
                        if (v instanceof Three) {
                            var v1 = comp(k)(v.value1);
                            if (v1 instanceof Data_Ordering.EQ) {
                                $tco_done1 = true;
                                return {
                                    found: true,
                                    result: orig
                                };
                            }
                            var v2 = comp(k)(v.value3);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_done1 = true;
                                return {
                                    found: true,
                                    result: orig
                                };
                            }
                            if (v1 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v.value1, v.value2, v.value3, v.value4), ctx);
                                $copy_v = v.value0;
                                return;
                            }
                            if (v1 instanceof Data_Ordering.GT && v2 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v.value0, v.value1, v.value3, v.value4), ctx);
                                $copy_v = v.value2;
                                return;
                            }
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v.value0, v.value1, v.value2, v.value3), ctx);
                            $copy_v = v.value4;
                            return;
                        }
                        throw new Error("Failed pattern match at Data.List.Internal (line 38, column 3 - line 38, column 81): " + [
                            ctx.constructor.name,
                            v.constructor.name
                        ]);
                    }
                    while(!$tco_done1)$tco_result = $tco_loop($tco_var_ctx, $copy_v);
                    return $tco_result;
                };
            };
            return down(Data_List_Types.Nil.value)(orig);
        };
    };
};
var emptySet = Leaf.value;
module.exports = {
    emptySet: emptySet,
    insertAndLookupBy: insertAndLookupBy
};

},{"../Data.List.Types/index.js":"80Bba","../Data.Ordering/index.js":"lEtyd"}],"80Bba":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Nil = function() {
    function Nil1() {
    }
    Nil1.value = new Nil1();
    return Nil1;
}();
var Cons = function() {
    function Cons1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Cons1.create = function(value0) {
        return function(value1) {
            return new Cons1(value0, value1);
        };
    };
    return Cons1;
}();
var NonEmptyList = function(x) {
    return x;
};
var toList = function(v) {
    return new Cons(v.value0, v.value1);
};
var newtypeNonEmptyList = new Data_Newtype.Newtype(function() {
    return undefined;
});
var nelCons = function(a) {
    return function(v) {
        return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
    };
};
var listMap = function(f) {
    var chunkedRevMap = function($copy_chunksAcc) {
        return function($copy_v) {
            var $tco_var_chunksAcc = $copy_chunksAcc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(chunksAcc, v) {
                if (v instanceof Cons && v.value1 instanceof Cons && v.value1.value1 instanceof Cons) {
                    $tco_var_chunksAcc = new Cons(v, chunksAcc);
                    $copy_v = v.value1.value1.value1;
                    return;
                }
                var unrolledMap = function(v1) {
                    if (v1 instanceof Cons && v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil) return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                    if (v1 instanceof Cons && v1.value1 instanceof Nil) return new Cons(f(v1.value0), Nil.value);
                    return Nil.value;
                };
                var reverseUnrolledMap = function($copy_v1) {
                    return function($copy_acc) {
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done1 = false;
                        var $tco_result1;
                        function $tco_loop1(v1, acc) {
                            if (v1 instanceof Cons && v1.value0 instanceof Cons && v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons) {
                                $tco_var_v1 = v1.value1;
                                $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                return;
                            }
                            $tco_done1 = true;
                            return acc;
                        }
                        while(!$tco_done1)$tco_result1 = $tco_loop1($tco_var_v1, $copy_acc);
                        return $tco_result1;
                    };
                };
                $tco_done = true;
                return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
            return $tco_result;
        };
    };
    return chunkedRevMap(Nil.value);
};
var functorList = new Data_Functor.Functor(listMap);
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var foldableList = new Data_Foldable.Foldable(function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldl(foldableList)(function(acc) {
            var $205 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
            return function($206) {
                return $205(f($206));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function(f) {
    var go = function($copy_b) {
        return function($copy_v) {
            var $tco_var_b = $copy_b;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(b, v) {
                if (v instanceof Nil) {
                    $tco_done = true;
                    return b;
                }
                if (v instanceof Cons) {
                    $tco_var_b = f(b)(v.value0);
                    $copy_v = v.value1;
                    return;
                }
                throw new Error("Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_b, $copy_v);
            return $tco_result;
        };
    };
    return go;
}, function(f) {
    return function(b) {
        var rev = function() {
            var go = function($copy_acc) {
                return function($copy_v) {
                    var $tco_var_acc = $copy_acc;
                    var $tco_done1 = false;
                    var $tco_result;
                    function $tco_loop(acc, v) {
                        if (v instanceof Nil) {
                            $tco_done1 = true;
                            return acc;
                        }
                        if (v instanceof Cons) {
                            $tco_var_acc = new Cons(v.value0, acc);
                            $copy_v = v.value1;
                            return;
                        }
                        throw new Error("Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): " + [
                            acc.constructor.name,
                            v.constructor.name
                        ]);
                    }
                    while(!$tco_done1)$tco_result = $tco_loop($tco_var_acc, $copy_v);
                    return $tco_result;
                };
            };
            return go(Nil.value);
        }();
        var $207 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
        return function($208) {
            return $207(rev($208));
        };
    };
});
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function() {
    return foldableList;
}, function(dictMonoid) {
    return function(f) {
        return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function(i) {
            return function(acc) {
                var $209 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
                var $210 = f(i);
                return function($211) {
                    return $209($210($211));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function(f) {
    return function(acc) {
        var $212 = Data_Foldable.foldl(foldableList)(function(v) {
            return function(a) {
                return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
            };
        })(new Data_Tuple.Tuple(0, acc));
        return function($213) {
            return Data_Tuple.snd($212($213));
        };
    };
}, function(f) {
    return function(b) {
        return function(xs) {
            var v = function() {
                var rev = Data_Foldable.foldl(foldableList)(function(v1) {
                    return function(a) {
                        return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
                    };
                });
                return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
            }();
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function(v1) {
                return function(a) {
                    return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                };
            })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
        };
    };
});
var foldableWithIndexNonEmptyList = new Data_FoldableWithIndex.FoldableWithIndex(function() {
    return foldableNonEmptyList;
}, function(dictMonoid) {
    return function(f) {
        return function(v) {
            return Data_FoldableWithIndex.foldMapWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(dictMonoid)(function() {
                var $214 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
                return function($215) {
                    return f($214($215));
                };
            }())(v);
        };
    };
}, function(f) {
    return function(b) {
        return function(v) {
            return Data_FoldableWithIndex.foldlWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function() {
                var $216 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
                return function($217) {
                    return f($216($217));
                };
            }())(b)(v);
        };
    };
}, function(f) {
    return function(b) {
        return function(v) {
            return Data_FoldableWithIndex.foldrWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function() {
                var $218 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
                return function($219) {
                    return f($218($219));
                };
            }())(b)(v);
        };
    };
});
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function() {
    return functorList;
}, function(f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function(i) {
        return function(x) {
            return function(acc) {
                return new Cons(f(i)(x), acc);
            };
        };
    })(Nil.value);
});
var functorWithIndexNonEmptyList = new Data_FunctorWithIndex.FunctorWithIndex(function() {
    return functorNonEmptyList;
}, function(fn) {
    return function(v) {
        return NonEmptyList(Data_FunctorWithIndex.mapWithIndex(Data_NonEmpty.functorWithIndex(functorWithIndexList))(function() {
            var $220 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
            return function($221) {
                return fn($220($221));
            };
        }())(v));
    };
});
var semigroupList = new Data_Semigroup.Semigroup(function(xs) {
    return function(ys) {
        return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
});
var monoidList = new Data_Monoid.Monoid(function() {
    return semigroupList;
}, Nil.value);
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function(v) {
    return function(as$prime) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
    };
});
var showList = function(dictShow) {
    return new Data_Show.Show(function(v) {
        if (v instanceof Nil) return "Nil";
        return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
    });
};
var showNonEmptyList = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
    });
};
var traversableList = new Data_Traversable.Traversable(function() {
    return foldableList;
}, function() {
    return functorList;
}, function(dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function(dictApplicative) {
    return function(f) {
        var $222 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value));
        var $223 = Data_Foldable.foldl(foldableList)(function(acc) {
            var $225 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
            return function($226) {
                return $225(f($226));
            };
        })(Control_Applicative.pure(dictApplicative)(Nil.value));
        return function($224) {
            return $222($223($224));
        };
    };
});
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function() {
    return foldableWithIndexList;
}, function() {
    return functorWithIndexList;
}, function() {
    return traversableList;
}, function(dictApplicative) {
    return function(f) {
        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
        var $227 = Data_Functor.map(dictApplicative.Apply0().Functor0())(rev);
        var $228 = Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function(i) {
            return function(acc) {
                var $230 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
                var $231 = f(i);
                return function($232) {
                    return $230($231($232));
                };
            };
        })(Control_Applicative.pure(dictApplicative)(Nil.value));
        return function($229) {
            return $227($228($229));
        };
    };
});
var traversableWithIndexNonEmptyList = new Data_TraversableWithIndex.TraversableWithIndex(function() {
    return foldableWithIndexNonEmptyList;
}, function() {
    return functorWithIndexNonEmptyList;
}, function() {
    return traversableNonEmptyList;
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmptyList)(Data_TraversableWithIndex.traverseWithIndex(Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList))(dictApplicative)(function() {
                var $233 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
                return function($234) {
                    return f($233($234));
                };
            }())(v));
        };
    };
});
var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function(f) {
    return function(b) {
        var go = function($copy_source) {
            return function($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v.value1 instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value1.value0;
                        $copy_memo = new Cons(v.value0, memo);
                        return;
                    }
                    if (v.value1 instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                    }
                    throw new Error("Failed pattern match at Data.List.Types (line 136, column 22 - line 138, column 61): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_source, $copy_memo);
                return $tco_result;
            };
        };
        return go(b)(Nil.value);
    };
});
var unfoldableList = new Data_Unfoldable.Unfoldable(function() {
    return unfoldable1List;
}, function(f) {
    return function(b) {
        var go = function($copy_source) {
            return function($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                    }
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = new Cons(v.value0.value0, memo);
                        return;
                    }
                    throw new Error("Failed pattern match at Data.List.Types (line 143, column 22 - line 145, column 52): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_source, $copy_memo);
                return $tco_result;
            };
        };
        return go(b)(Nil.value);
    };
});
var unfoldable1NonEmptyList = Data_NonEmpty.unfoldable1NonEmpty(unfoldableList);
var foldable1NonEmptyList = Data_NonEmpty.foldable1NonEmpty(foldableList);
var extendNonEmptyList = new Control_Extend.Extend(function() {
    return functorNonEmptyList;
}, function(f) {
    return function(v) {
        var go = function(a) {
            return function(v1) {
                return {
                    val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),
                    acc: new Cons(a, v1.acc)
                };
            };
        };
        return new Data_NonEmpty.NonEmpty(f(v), Data_Foldable.foldr(foldableList)(go)({
            val: Nil.value,
            acc: Nil.value
        })(v.value1).val);
    };
});
var extendList = new Control_Extend.Extend(function() {
    return functorList;
}, function(v) {
    return function(v1) {
        if (v1 instanceof Nil) return Nil.value;
        if (v1 instanceof Cons) {
            var go = function(a$prime) {
                return function(v2) {
                    var acc$prime = new Cons(a$prime, v2.acc);
                    return {
                        val: new Cons(v(acc$prime), v2.val),
                        acc: acc$prime
                    };
                };
            };
            return new Cons(v(v1), Data_Foldable.foldr(foldableList)(go)({
                val: Nil.value,
                acc: Nil.value
            })(v1.value1).val);
        }
        throw new Error("Failed pattern match at Data.List.Types (line 183, column 1 - line 190, column 42): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var eq1List = new Data_Eq.Eq1(function(dictEq) {
    return function(xs) {
        return function(ys) {
            var go = function($copy_v) {
                return function($copy_v1) {
                    return function($copy_v2) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, v2) {
                            if (!v2) {
                                $tco_done = true;
                                return false;
                            }
                            if (v instanceof Nil && v1 instanceof Nil) {
                                $tco_done = true;
                                return v2;
                            }
                            if (v instanceof Cons && v1 instanceof Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                                return;
                            }
                            $tco_done = true;
                            return false;
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                        return $tco_result;
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    };
});
var eq1NonEmptyList = Data_NonEmpty.eq1NonEmpty(eq1List);
var eqList = function(dictEq) {
    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};
var eqNonEmptyList = function(dictEq) {
    return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
};
var ord1List = new Data_Ord.Ord1(function() {
    return eq1List;
}, function(dictOrd) {
    return function(xs) {
        return function(ys) {
            var go = function($copy_v) {
                return function($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.EQ.value;
                        }
                        if (v instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.LT.value;
                        }
                        if (v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.GT.value;
                        }
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_var_v = v.value1;
                                $copy_v1 = v1.value1;
                                return;
                            }
                            $tco_done = true;
                            return v2;
                        }
                        throw new Error("Failed pattern match at Data.List.Types (line 61, column 5 - line 61, column 20): " + [
                            v.constructor.name,
                            v1.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
                    return $tco_result;
                };
            };
            return go(xs)(ys);
        };
    };
});
var ord1NonEmptyList = Data_NonEmpty.ord1NonEmpty(ord1List);
var ordList = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqList(dictOrd.Eq0());
    }, Data_Ord.compare1(ord1List)(dictOrd));
};
var ordNonEmptyList = function(dictOrd) {
    return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
};
var comonadNonEmptyList = new Control_Comonad.Comonad(function() {
    return extendNonEmptyList;
}, function(v) {
    return v.value0;
});
var applyList = new Control_Apply.Apply(function() {
    return functorList;
}, function(v) {
    return function(v1) {
        if (v instanceof Nil) return Nil.value;
        if (v instanceof Cons) return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
        throw new Error("Failed pattern match at Data.List.Types (line 158, column 1 - line 160, column 48): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var applyNonEmptyList = new Control_Apply.Apply(function() {
    return functorNonEmptyList;
}, function(v) {
    return function(v1) {
        return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
    };
});
var bindList = new Control_Bind.Bind(function() {
    return applyList;
}, function(v) {
    return function(v1) {
        if (v instanceof Nil) return Nil.value;
        if (v instanceof Cons) return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
        throw new Error("Failed pattern match at Data.List.Types (line 165, column 1 - line 167, column 37): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var bindNonEmptyList = new Control_Bind.Bind(function() {
    return applyNonEmptyList;
}, function(v) {
    return function(f) {
        var v1 = f(v.value0);
        return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function($235) {
            return toList(f($235));
        })));
    };
});
var applicativeList = new Control_Applicative.Applicative(function() {
    return applyList;
}, function(a) {
    return new Cons(a, Nil.value);
});
var monadList = new Control_Monad.Monad(function() {
    return applicativeList;
}, function() {
    return bindList;
});
var altNonEmptyList = new Control_Alt.Alt(function() {
    return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function() {
    return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function() {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function() {
    return applicativeList;
}, function() {
    return plusList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function() {
    return alternativeList;
}, function() {
    return monadList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function() {
    return alternativeList;
}, function() {
    return monadList;
}, function() {
    return undefined;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function() {
    return applyNonEmptyList;
}, function() {
    var $236 = Data_NonEmpty.singleton(plusList);
    return function($237) {
        return NonEmptyList($236($237));
    };
}());
var monadNonEmptyList = new Control_Monad.Monad(function() {
    return applicativeNonEmptyList;
}, function() {
    return bindNonEmptyList;
});
var traversable1NonEmptyList = new Data_Semigroup_Traversable.Traversable1(function() {
    return foldable1NonEmptyList;
}, function() {
    return traversableNonEmptyList;
}, function(dictApply) {
    return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
}, function(dictApply) {
    return function(f) {
        return function(v) {
            return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function(acc) {
                var $238 = Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc);
                return function($239) {
                    return $238(f($239));
                };
            })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function(v1) {
                return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
            });
        };
    };
});
module.exports = {
    Nil: Nil,
    Cons: Cons,
    NonEmptyList: NonEmptyList,
    toList: toList,
    nelCons: nelCons,
    showList: showList,
    eqList: eqList,
    eq1List: eq1List,
    ordList: ordList,
    ord1List: ord1List,
    semigroupList: semigroupList,
    monoidList: monoidList,
    functorList: functorList,
    functorWithIndexList: functorWithIndexList,
    foldableList: foldableList,
    foldableWithIndexList: foldableWithIndexList,
    unfoldable1List: unfoldable1List,
    unfoldableList: unfoldableList,
    traversableList: traversableList,
    traversableWithIndexList: traversableWithIndexList,
    applyList: applyList,
    applicativeList: applicativeList,
    bindList: bindList,
    monadList: monadList,
    altList: altList,
    plusList: plusList,
    alternativeList: alternativeList,
    monadZeroList: monadZeroList,
    monadPlusList: monadPlusList,
    extendList: extendList,
    newtypeNonEmptyList: newtypeNonEmptyList,
    eqNonEmptyList: eqNonEmptyList,
    ordNonEmptyList: ordNonEmptyList,
    eq1NonEmptyList: eq1NonEmptyList,
    ord1NonEmptyList: ord1NonEmptyList,
    showNonEmptyList: showNonEmptyList,
    functorNonEmptyList: functorNonEmptyList,
    applyNonEmptyList: applyNonEmptyList,
    applicativeNonEmptyList: applicativeNonEmptyList,
    bindNonEmptyList: bindNonEmptyList,
    monadNonEmptyList: monadNonEmptyList,
    altNonEmptyList: altNonEmptyList,
    extendNonEmptyList: extendNonEmptyList,
    comonadNonEmptyList: comonadNonEmptyList,
    semigroupNonEmptyList: semigroupNonEmptyList,
    foldableNonEmptyList: foldableNonEmptyList,
    traversableNonEmptyList: traversableNonEmptyList,
    foldable1NonEmptyList: foldable1NonEmptyList,
    unfoldable1NonEmptyList: unfoldable1NonEmptyList,
    functorWithIndexNonEmptyList: functorWithIndexNonEmptyList,
    foldableWithIndexNonEmptyList: foldableWithIndexNonEmptyList,
    traversableWithIndexNonEmptyList: traversableWithIndexNonEmptyList,
    traversable1NonEmptyList: traversable1NonEmptyList
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Comonad/index.js":"hfPua","../Control.Extend/index.js":"kAltv","../Control.Monad/index.js":"alCn2","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.FoldableWithIndex/index.js":"b0hJn","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.FunctorWithIndex/index.js":"9mTwC","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.NonEmpty/index.js":"4pAZZ","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Semigroup.Traversable/index.js":"kPmtP","../Data.Semiring/index.js":"39btI","../Data.Show/index.js":"b6tNW","../Data.Traversable/index.js":"i5Kon","../Data.TraversableWithIndex/index.js":"bLveW","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk","../Data.Unfoldable1/index.js":"Daf7x"}],"4pAZZ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var NonEmpty = function() {
    function NonEmpty1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    NonEmpty1.create = function(value0) {
        return function(value1) {
            return new NonEmpty1(value0, value1);
        };
    };
    return NonEmpty1;
}();
var unfoldable1NonEmpty = function(dictUnfoldable) {
    return new Data_Unfoldable1.Unfoldable1(function(f) {
        return function(b) {
            return Data_Tuple.uncurry(NonEmpty.create)(Data_Functor.map(Data_Tuple.functorTuple)(Data_Unfoldable.unfoldr(dictUnfoldable)(Data_Functor.map(Data_Maybe.functorMaybe)(f)))(f(b)));
        };
    });
};
var tail = function(v) {
    return v.value1;
};
var singleton = function(dictPlus) {
    return function(a) {
        return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
};
var showNonEmpty = function(dictShow) {
    return function(dictShow1) {
        return new Data_Show.Show(function(v) {
            return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var oneOf = function(dictAlternative) {
    return function(v) {
        return Control_Alt.alt(dictAlternative.Plus1().Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
    };
};
var head = function(v) {
    return v.value0;
};
var functorNonEmpty = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        return function(m) {
            return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
        };
    });
};
var functorWithIndex = function(dictFunctorWithIndex) {
    return new Data_FunctorWithIndex.FunctorWithIndex(function() {
        return functorNonEmpty(dictFunctorWithIndex.Functor0());
    }, function(f) {
        return function(v) {
            return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function($151) {
                return f(Data_Maybe.Just.create($151));
            })(v.value1));
        };
    });
};
var fromNonEmpty = function(f) {
    return function(v) {
        return f(v.value0)(v.value1);
    };
};
var foldableNonEmpty = function(dictFoldable) {
    return new Data_Foldable.Foldable(function(dictMonoid) {
        return function(f) {
            return function(v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
            };
        };
    }, function(f) {
        return function(b) {
            return function(v) {
                return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
            };
        };
    }, function(f) {
        return function(b) {
            return function(v) {
                return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
            };
        };
    });
};
var foldableWithIndexNonEmpty = function(dictFoldableWithIndex) {
    return new Data_FoldableWithIndex.FoldableWithIndex(function() {
        return foldableNonEmpty(dictFoldableWithIndex.Foldable0());
    }, function(dictMonoid) {
        return function(f) {
            return function(v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(Data_Maybe.Nothing.value)(v.value0))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function($152) {
                    return f(Data_Maybe.Just.create($152));
                })(v.value1));
            };
        };
    }, function(f) {
        return function(b) {
            return function(v) {
                return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function($153) {
                    return f(Data_Maybe.Just.create($153));
                })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);
            };
        };
    }, function(f) {
        return function(b) {
            return function(v) {
                return f(Data_Maybe.Nothing.value)(v.value0)(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function($154) {
                    return f(Data_Maybe.Just.create($154));
                })(b)(v.value1));
            };
        };
    });
};
var traversableNonEmpty = function(dictTraversable) {
    return new Data_Traversable.Traversable(function() {
        return foldableNonEmpty(dictTraversable.Foldable1());
    }, function() {
        return functorNonEmpty(dictTraversable.Functor0());
    }, function(dictApplicative) {
        return function(v) {
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
        };
    }, function(dictApplicative) {
        return function(f) {
            return function(v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
            };
        };
    });
};
var traversableWithIndexNonEmpty = function(dictTraversableWithIndex) {
    return new Data_TraversableWithIndex.TraversableWithIndex(function() {
        return foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
    }, function() {
        return functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
    }, function() {
        return traversableNonEmpty(dictTraversableWithIndex.Traversable2());
    }, function(dictApplicative) {
        return function(f) {
            return function(v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function($155) {
                    return f(Data_Maybe.Just.create($155));
                })(v.value1));
            };
        };
    });
};
var foldable1NonEmpty = function(dictFoldable) {
    return new Data_Semigroup_Foldable.Foldable1(function() {
        return foldableNonEmpty(dictFoldable);
    }, function(dictSemigroup) {
        return function(f) {
            return function(v) {
                return Data_Foldable.foldl(dictFoldable)(function(s) {
                    return function(a1) {
                        return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
                    };
                })(f(v.value0))(v.value1);
            };
        };
    }, function(f) {
        return function(v) {
            return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
        };
    }, function(f) {
        return function(v) {
            return Data_Maybe.maybe(v.value0)(f(v.value0))(Data_Foldable.foldr(dictFoldable)(function(a1) {
                var $156 = Data_Maybe.maybe(a1)(f(a1));
                return function($157) {
                    return Data_Maybe.Just.create($156($157));
                };
            })(Data_Maybe.Nothing.value)(v.value1));
        };
    });
};
var foldl1 = function(dictFoldable) {
    return function(dictWarn) {
        return Data_Semigroup_Foldable.foldl1(foldable1NonEmpty(dictFoldable));
    };
};
var eqNonEmpty = function(dictEq1) {
    return function(dictEq) {
        return new Data_Eq.Eq(function(x) {
            return function(y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq1(dictEq1)(dictEq)(x.value1)(y.value1);
            };
        });
    };
};
var ordNonEmpty = function(dictOrd1) {
    return function(dictOrd) {
        return new Data_Ord.Ord(function() {
            return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
        }, function(x) {
            return function(y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) return Data_Ordering.LT.value;
                if (v instanceof Data_Ordering.GT) return Data_Ordering.GT.value;
                return Data_Ord.compare1(dictOrd1)(dictOrd)(x.value1)(y.value1);
            };
        });
    };
};
var eq1NonEmpty = function(dictEq1) {
    return new Data_Eq.Eq1(function(dictEq) {
        return Data_Eq.eq(eqNonEmpty(dictEq1)(dictEq));
    });
};
var ord1NonEmpty = function(dictOrd1) {
    return new Data_Ord.Ord1(function() {
        return eq1NonEmpty(dictOrd1.Eq10());
    }, function(dictOrd) {
        return Data_Ord.compare(ordNonEmpty(dictOrd1)(dictOrd));
    });
};
module.exports = {
    NonEmpty: NonEmpty,
    singleton: singleton,
    foldl1: foldl1,
    fromNonEmpty: fromNonEmpty,
    oneOf: oneOf,
    head: head,
    tail: tail,
    showNonEmpty: showNonEmpty,
    eqNonEmpty: eqNonEmpty,
    eq1NonEmpty: eq1NonEmpty,
    ordNonEmpty: ordNonEmpty,
    ord1NonEmpty: ord1NonEmpty,
    functorNonEmpty: functorNonEmpty,
    functorWithIndex: functorWithIndex,
    foldableNonEmpty: foldableNonEmpty,
    foldableWithIndexNonEmpty: foldableWithIndexNonEmpty,
    traversableNonEmpty: traversableNonEmpty,
    traversableWithIndexNonEmpty: traversableWithIndexNonEmpty,
    foldable1NonEmpty: foldable1NonEmpty,
    unfoldable1NonEmpty: unfoldable1NonEmpty
};

},{"../Control.Alt/index.js":"82RIG","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Plus/index.js":"5lCU5","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.FoldableWithIndex/index.js":"b0hJn","../Data.Functor/index.js":"iy1jO","../Data.FunctorWithIndex/index.js":"9mTwC","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Semigroup.Foldable/index.js":"lM4gt","../Data.Show/index.js":"b6tNW","../Data.Traversable/index.js":"i5Kon","../Data.TraversableWithIndex/index.js":"bLveW","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk","../Data.Unfoldable1/index.js":"Daf7x"}],"bLveW":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_App = require("../Data.Functor.App/index.js");
var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");
var Data_Functor_Product = require("../Data.Functor.Product/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var TraversableWithIndex = function(FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
    this.FoldableWithIndex1 = FoldableWithIndex1;
    this.FunctorWithIndex0 = FunctorWithIndex0;
    this.Traversable2 = Traversable2;
    this.traverseWithIndex = traverseWithIndex;
};
var traverseWithIndexDefault = function(dictTraversableWithIndex) {
    return function(dictApplicative) {
        return function(f) {
            var $63 = Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative);
            var $64 = Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f);
            return function($65) {
                return $63($64($65));
            };
        };
    };
};
var traverseWithIndex = function(dict) {
    return dict.traverseWithIndex;
};
var traverseDefault = function(dictTraversableWithIndex) {
    return function(dictApplicative) {
        return function(f) {
            return traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(Data_Function["const"](f));
        };
    };
};
var traversableWithIndexTuple = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexTuple;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexTuple;
}, function() {
    return Data_Traversable.traversableTuple;
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(v.value0))(f(Data_Unit.unit)(v.value1));
        };
    };
});
var traversableWithIndexProduct = function(dictTraversableWithIndex) {
    return function(dictTraversableWithIndex1) {
        return new TraversableWithIndex(function() {
            return Data_FoldableWithIndex.foldableWithIndexProduct(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
        }, function() {
            return Data_FunctorWithIndex.functorWithIndexProduct(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
        }, function() {
            return Data_Traversable.traversableProduct(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
        }, function(dictApplicative) {
            return function(f) {
                return function(v) {
                    return Control_Apply.lift2(dictApplicative.Apply0())(Data_Functor_Product.product)(traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function($66) {
                        return f(Data_Either.Left.create($66));
                    })(v.value0))(traverseWithIndex(dictTraversableWithIndex1)(dictApplicative)(function($67) {
                        return f(Data_Either.Right.create($67));
                    })(v.value1));
                };
            };
        });
    };
};
var traversableWithIndexMultiplicative = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexMultiplicative;
}, function() {
    return Data_Traversable.traversableMultiplicative;
}, function(dictApplicative) {
    return function(f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexMaybe = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexMaybe;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexMaybe;
}, function() {
    return Data_Traversable.traversableMaybe;
}, function(dictApplicative) {
    return function(f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexLast = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexLast;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexLast;
}, function() {
    return Data_Traversable.traversableLast;
}, function(dictApplicative) {
    return function(f) {
        return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexIdentity = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexIdentity;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexIdentity;
}, function() {
    return Data_Traversable.traversableIdentity;
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Identity.Identity)(f(Data_Unit.unit)(v));
        };
    };
});
var traversableWithIndexFirst = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexFirst;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexFirst;
}, function() {
    return Data_Traversable.traversableFirst;
}, function(dictApplicative) {
    return function(f) {
        return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexEither = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexEither;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexEither;
}, function() {
    return Data_Traversable.traversableEither;
}, function(dictApplicative) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof Data_Either.Left) return Control_Applicative.pure(dictApplicative)(new Data_Either.Left(v1.value0));
            if (v1 instanceof Data_Either.Right) return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v(Data_Unit.unit)(v1.value0));
            throw new Error("Failed pattern match at Data.TraversableWithIndex (line 95, column 1 - line 97, column 53): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
});
var traversableWithIndexDual = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexDual;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexDual;
}, function() {
    return Data_Traversable.traversableDual;
}, function(dictApplicative) {
    return function(f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDisj = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexDisj;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexDisj;
}, function() {
    return Data_Traversable.traversableDisj;
}, function(dictApplicative) {
    return function(f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexCoproduct = function(dictTraversableWithIndex) {
    return function(dictTraversableWithIndex1) {
        return new TraversableWithIndex(function() {
            return Data_FoldableWithIndex.foldableWithIndexCoproduct(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
        }, function() {
            return Data_FunctorWithIndex.functorWithIndexCoproduct(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
        }, function() {
            return Data_Traversable.traversableCoproduct(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
        }, function(dictApplicative) {
            return function(f) {
                return Data_Functor_Coproduct.coproduct(function() {
                    var $68 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function($71) {
                        return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($71));
                    });
                    var $69 = traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function($72) {
                        return f(Data_Either.Left.create($72));
                    });
                    return function($70) {
                        return $68($69($70));
                    };
                }())(function() {
                    var $73 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function($76) {
                        return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($76));
                    });
                    var $74 = traverseWithIndex(dictTraversableWithIndex1)(dictApplicative)(function($77) {
                        return f(Data_Either.Right.create($77));
                    });
                    return function($75) {
                        return $73($74($75));
                    };
                }());
            };
        });
    };
};
var traversableWithIndexConst = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexConst;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexConst;
}, function() {
    return Data_Traversable.traversableConst;
}, function(dictApplicative) {
    return function(v) {
        return function(v1) {
            return Control_Applicative.pure(dictApplicative)(v1);
        };
    };
});
var traversableWithIndexConj = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexConj;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexConj;
}, function() {
    return Data_Traversable.traversableConj;
}, function(dictApplicative) {
    return function(f) {
        return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexCompose = function(dictTraversableWithIndex) {
    return function(dictTraversableWithIndex1) {
        return new TraversableWithIndex(function() {
            return Data_FoldableWithIndex.foldableWithIndexCompose(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
        }, function() {
            return Data_FunctorWithIndex.functorWithIndexCompose(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
        }, function() {
            return Data_Traversable.traversableCompose(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
        }, function(dictApplicative) {
            return function(f) {
                return function(v) {
                    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_Compose.Compose)(traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function() {
                        var $78 = traverseWithIndex(dictTraversableWithIndex1)(dictApplicative);
                        var $79 = Data_Tuple.curry(f);
                        return function($80) {
                            return $78($79($80));
                        };
                    }())(v));
                };
            };
        });
    };
};
var traversableWithIndexArray = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexArray;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexArray;
}, function() {
    return Data_Traversable.traversableArray;
}, function(dictApplicative) {
    return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
});
var traversableWithIndexApp = function(dictTraversableWithIndex) {
    return new TraversableWithIndex(function() {
        return Data_FoldableWithIndex.foldableWithIndexApp(dictTraversableWithIndex.FoldableWithIndex1());
    }, function() {
        return Data_FunctorWithIndex.functorWithIndexApp(dictTraversableWithIndex.FunctorWithIndex0());
    }, function() {
        return Data_Traversable.traversableApp(dictTraversableWithIndex.Traversable2());
    }, function(dictApplicative) {
        return function(f) {
            return function(v) {
                return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_App.App)(traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(f)(v));
            };
        };
    });
};
var traversableWithIndexAdditive = new TraversableWithIndex(function() {
    return Data_FoldableWithIndex.foldableWithIndexAdditive;
}, function() {
    return Data_FunctorWithIndex.functorWithIndexAdditive;
}, function() {
    return Data_Traversable.traversableAdditive;
}, function(dictApplicative) {
    return function(f) {
        return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
    };
});
var mapAccumRWithIndex = function(dictTraversableWithIndex) {
    return function(f) {
        return function(s0) {
            return function(xs) {
                return Data_Traversable_Accum_Internal.stateR(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function(i) {
                    return function(a) {
                        return function(s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanrWithIndex = function(dictTraversableWithIndex) {
    return function(f) {
        return function(b0) {
            return function(xs) {
                return mapAccumRWithIndex(dictTraversableWithIndex)(function(i) {
                    return function(b) {
                        return function(a) {
                            var b$prime = f(i)(a)(b);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var mapAccumLWithIndex = function(dictTraversableWithIndex) {
    return function(f) {
        return function(s0) {
            return function(xs) {
                return Data_Traversable_Accum_Internal.stateL(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function(i) {
                    return function(a) {
                        return function(s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanlWithIndex = function(dictTraversableWithIndex) {
    return function(f) {
        return function(b0) {
            return function(xs) {
                return mapAccumLWithIndex(dictTraversableWithIndex)(function(i) {
                    return function(b) {
                        return function(a) {
                            var b$prime = f(i)(b)(a);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var forWithIndex = function(dictApplicative) {
    return function(dictTraversableWithIndex) {
        return Data_Function.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
    };
};
module.exports = {
    TraversableWithIndex: TraversableWithIndex,
    traverseWithIndex: traverseWithIndex,
    traverseWithIndexDefault: traverseWithIndexDefault,
    forWithIndex: forWithIndex,
    scanlWithIndex: scanlWithIndex,
    mapAccumLWithIndex: mapAccumLWithIndex,
    scanrWithIndex: scanrWithIndex,
    mapAccumRWithIndex: mapAccumRWithIndex,
    traverseDefault: traverseDefault,
    traversableWithIndexArray: traversableWithIndexArray,
    traversableWithIndexMaybe: traversableWithIndexMaybe,
    traversableWithIndexFirst: traversableWithIndexFirst,
    traversableWithIndexLast: traversableWithIndexLast,
    traversableWithIndexAdditive: traversableWithIndexAdditive,
    traversableWithIndexDual: traversableWithIndexDual,
    traversableWithIndexConj: traversableWithIndexConj,
    traversableWithIndexDisj: traversableWithIndexDisj,
    traversableWithIndexMultiplicative: traversableWithIndexMultiplicative,
    traversableWithIndexEither: traversableWithIndexEither,
    traversableWithIndexTuple: traversableWithIndexTuple,
    traversableWithIndexIdentity: traversableWithIndexIdentity,
    traversableWithIndexConst: traversableWithIndexConst,
    traversableWithIndexProduct: traversableWithIndexProduct,
    traversableWithIndexCoproduct: traversableWithIndexCoproduct,
    traversableWithIndexCompose: traversableWithIndexCompose,
    traversableWithIndexApp: traversableWithIndexApp
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Data.Either/index.js":"3WZha","../Data.FoldableWithIndex/index.js":"b0hJn","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Functor.App/index.js":"ihqtJ","../Data.Functor.Compose/index.js":"aJAZA","../Data.Functor.Coproduct/index.js":"gpKJ8","../Data.Functor.Product/index.js":"8AoSo","../Data.FunctorWithIndex/index.js":"9mTwC","../Data.Identity/index.js":"3qeSN","../Data.Traversable/index.js":"i5Kon","../Data.Traversable.Accum/index.js":"gN98F","../Data.Traversable.Accum.Internal/index.js":"1K5e2","../Data.Tuple/index.js":"eOBbM","../Data.Unit/index.js":"d7oKp"}],"7KbOn":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_List_Internal = require("../Data.List.Internal/index.js");
var Data_List_Lazy_Types = require("../Data.List.Lazy.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Pattern = function(x) {
    return x;
};
var zipWith = function(f) {
    return function(xs) {
        return function(ys) {
            var go = function(v) {
                return function(v1) {
                    if (v instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
                    if (v1 instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
                    if (v instanceof Data_List_Lazy_Types.Cons && v1 instanceof Data_List_Lazy_Types.Cons) return new Data_List_Lazy_Types.Cons(f(v.value0)(v1.value0), zipWith(f)(v.value1)(v1.value1));
                    throw new Error("Failed pattern match at Data.List.Lazy (line 705, column 3 - line 705, column 35): " + [
                        v.constructor.name,
                        v1.constructor.name
                    ]);
                };
            };
            return Control_Apply.apply(Data_Lazy.applyLazy)(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap()(xs)))(Data_Newtype.unwrap()(ys));
        };
    };
};
var zipWithA = function(dictApplicative) {
    return function(f) {
        return function(xs) {
            return function(ys) {
                return Data_Traversable.sequence(Data_List_Lazy_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var updateAt = function(n) {
    return function(x) {
        return function(xs) {
            var go = function(v) {
                return function(v1) {
                    if (v1 instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
                    if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) return new Data_List_Lazy_Types.Cons(x, v1.value1);
                    if (v1 instanceof Data_List_Lazy_Types.Cons) return new Data_List_Lazy_Types.Cons(v1.value0, updateAt(v - 1 | 0)(x)(v1.value1));
                    throw new Error("Failed pattern match at Data.List.Lazy (line 361, column 3 - line 361, column 17): " + [
                        v.constructor.name,
                        v1.constructor.name
                    ]);
                };
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap()(xs));
        };
    };
};
var unzip = Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(function(v) {
    return function(v1) {
        return new Data_Tuple.Tuple(Data_List_Lazy_Types.cons(v.value0)(v1.value0), Data_List_Lazy_Types.cons(v.value1)(v1.value1));
    };
})(new Data_Tuple.Tuple(Data_List_Lazy_Types.nil, Data_List_Lazy_Types.nil));
var uncons = function(xs) {
    var v = Data_List_Lazy_Types.step(xs);
    if (v instanceof Data_List_Lazy_Types.Nil) return Data_Maybe.Nothing.value;
    if (v instanceof Data_List_Lazy_Types.Cons) return new Data_Maybe.Just({
        head: v.value0,
        tail: v.value1
    });
    throw new Error("Failed pattern match at Data.List.Lazy (line 288, column 13 - line 290, column 44): " + [
        v.constructor.name
    ]);
};
var toUnfoldable = function(dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function(xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function(rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var takeWhile = function(p) {
    var go = function(v) {
        if (v instanceof Data_List_Lazy_Types.Cons && p(v.value0)) return new Data_List_Lazy_Types.Cons(v.value0, takeWhile(p)(v.value1));
        return Data_List_Lazy_Types.Nil.value;
    };
    var $251 = Data_Functor.map(Data_Lazy.functorLazy)(go);
    var $252 = Data_Newtype.unwrap();
    return function($253) {
        return Data_List_Lazy_Types.List($251($252($253)));
    };
};
var take = function(n) {
    var go = function(v) {
        return function(v1) {
            if (v1 instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
            if (v1 instanceof Data_List_Lazy_Types.Cons) return new Data_List_Lazy_Types.Cons(v1.value0, take(v - 1 | 0)(v1.value1));
            throw new Error("Failed pattern match at Data.List.Lazy (line 505, column 3 - line 505, column 32): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
    var $122 = n <= 0;
    if ($122) return Data_Function["const"](Data_List_Lazy_Types.nil);
    var $254 = Data_Functor.map(Data_Lazy.functorLazy)(go(n));
    var $255 = Data_Newtype.unwrap();
    return function($256) {
        return Data_List_Lazy_Types.List($254($255($256)));
    };
};
var tail = function(xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function(v) {
        return v.tail;
    })(uncons(xs));
};
var stripPrefix = function(dictEq) {
    return function(v) {
        return function(s) {
            var go = function(prefix) {
                return function(input) {
                    var v1 = Data_List_Lazy_Types.step(prefix);
                    if (v1 instanceof Data_List_Lazy_Types.Nil) return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
                    if (v1 instanceof Data_List_Lazy_Types.Cons) {
                        var v2 = Data_List_Lazy_Types.step(input);
                        if (v2 instanceof Data_List_Lazy_Types.Cons && Data_Eq.eq(dictEq)(v1.value0)(v2.value0)) return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                            a: v1.value1,
                            b: v2.value1
                        }));
                        return Data_Maybe.Nothing.value;
                    }
                    throw new Error("Failed pattern match at Data.List.Lazy (line 487, column 21 - line 491, column 19): " + [
                        v1.constructor.name
                    ]);
                };
            };
            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
        };
    };
};
var span = function(p) {
    return function(xs) {
        var v = uncons(xs);
        if (v instanceof Data_Maybe.Just && p(v.value0.head)) {
            var v1 = span(p)(v.value0.tail);
            return {
                init: Data_List_Lazy_Types.cons(v.value0.head)(v1.init),
                rest: v1.rest
            };
        }
        return {
            init: Data_List_Lazy_Types.nil,
            rest: xs
        };
    };
};
var snoc = function(xs) {
    return function(x) {
        return Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(Data_List_Lazy_Types.cons)(Data_List_Lazy_Types.cons(x)(Data_List_Lazy_Types.nil))(xs);
    };
};
var singleton = function(a) {
    return Data_List_Lazy_Types.cons(a)(Data_List_Lazy_Types.nil);
};
var showPattern = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Pattern " + (Data_Show.show(Data_List_Lazy_Types.showList(dictShow))(v) + ")");
    });
};
var scanlLazy = function(f) {
    return function(acc) {
        return function(xs) {
            var go = function(v) {
                if (v instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    var acc$prime = f(acc)(v.value0);
                    return Data_List_Lazy_Types.Cons.create(acc$prime)(scanlLazy(f)(acc$prime)(v.value1));
                }
                throw new Error("Failed pattern match at Data.List.Lazy (line 776, column 5 - line 776, column 27): " + [
                    v.constructor.name
                ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap()(xs));
        };
    };
};
var reverse = function(xs) {
    return Control_Lazy.defer(Data_List_Lazy_Types.lazyList)(function(v) {
        return Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip(Data_List_Lazy_Types.cons))(Data_List_Lazy_Types.nil)(xs);
    });
};
var replicateM = function(dictMonad) {
    return function(n) {
        return function(m) {
            if (n < 1) return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
            if (Data_Boolean.otherwise) return Control_Bind.bind(dictMonad.Bind1())(m)(function(a) {
                return Control_Bind.bind(dictMonad.Bind1())(replicateM(dictMonad)(n - 1 | 0)(m))(function(as) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.cons(a)(as));
                });
            });
            throw new Error("Failed pattern match at Data.List.Lazy (line 164, column 1 - line 164, column 62): " + [
                n.constructor.name,
                m.constructor.name
            ]);
        };
    };
};
var repeat = function(x) {
    return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function(xs) {
        return Data_List_Lazy_Types.cons(x)(xs);
    });
};
var replicate = function(i) {
    return function(xs) {
        return take(i)(repeat(xs));
    };
};
var range = function(start) {
    return function(end) {
        if (start > end) {
            var g = function(x) {
                if (x >= end) return new Data_Maybe.Just(new Data_Tuple.Tuple(x, x - 1 | 0));
                if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
                throw new Error("Failed pattern match at Data.List.Lazy (line 151, column 13 - line 152, column 38): " + [
                    x.constructor.name
                ]);
            };
            return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(g)(start);
        }
        if (Data_Boolean.otherwise) {
            var f = function(x) {
                if (x <= end) return new Data_Maybe.Just(new Data_Tuple.Tuple(x, x + 1 | 0));
                if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
                throw new Error("Failed pattern match at Data.List.Lazy (line 156, column 5 - line 157, column 30): " + [
                    x.constructor.name
                ]);
            };
            return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(f)(start);
        }
        throw new Error("Failed pattern match at Data.List.Lazy (line 148, column 1 - line 148, column 32): " + [
            start.constructor.name,
            end.constructor.name
        ]);
    };
};
var partition = function(f) {
    var go = function(x) {
        return function(v) {
            var $150 = f(x);
            if ($150) return {
                yes: Data_List_Lazy_Types.cons(x)(v.yes),
                no: v.no
            };
            return {
                yes: v.yes,
                no: Data_List_Lazy_Types.cons(x)(v.no)
            };
        };
    };
    return Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(go)({
        yes: Data_List_Lazy_Types.nil,
        no: Data_List_Lazy_Types.nil
    });
};
var $$null = function($257) {
    return Data_Maybe.isNothing(uncons($257));
};
var nubBy = function(p) {
    var goStep = function(v) {
        return function(v1) {
            if (v1 instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
            if (v1 instanceof Data_List_Lazy_Types.Cons) {
                var v2 = Data_List_Internal.insertAndLookupBy(p)(v1.value0)(v);
                if (v2.found) return Data_List_Lazy_Types.step(go(v2.result)(v1.value1));
                return new Data_List_Lazy_Types.Cons(v1.value0, go(v2.result)(v1.value1));
            }
            throw new Error("Failed pattern match at Data.List.Lazy (line 613, column 5 - line 613, column 23): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
    var go = function(s) {
        return function(v) {
            return Data_Functor.map(Data_Lazy.functorLazy)(goStep(s))(v);
        };
    };
    return go(Data_List_Internal.emptySet);
};
var nub = function(dictOrd) {
    return nubBy(Data_Ord.compare(dictOrd));
};
var newtypePattern = new Data_Newtype.Newtype(function() {
    return undefined;
});
var mapMaybe = function(f) {
    var go = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Nil) {
                $tco_done = true;
                return Data_List_Lazy_Types.Nil.value;
            }
            if (v instanceof Data_List_Lazy_Types.Cons) {
                var v1 = f(v.value0);
                if (v1 instanceof Data_Maybe.Nothing) {
                    $copy_v = Data_List_Lazy_Types.step(v.value1);
                    return;
                }
                if (v1 instanceof Data_Maybe.Just) {
                    $tco_done = true;
                    return new Data_List_Lazy_Types.Cons(v1.value0, mapMaybe(f)(v.value1));
                }
                throw new Error("Failed pattern match at Data.List.Lazy (line 448, column 5 - line 450, column 39): " + [
                    v1.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.List.Lazy (line 446, column 3 - line 446, column 15): " + [
                v.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    var $258 = Data_Functor.map(Data_Lazy.functorLazy)(go);
    var $259 = Data_Newtype.unwrap();
    return function($260) {
        return Data_List_Lazy_Types.List($258($259($260)));
    };
};
var some = function(dictAlternative) {
    return function(dictLazy) {
        return function(v) {
            return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Lazy_Types.cons)(v))(Control_Lazy.defer(dictLazy)(function(v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function(dictAlternative) {
    return function(dictLazy) {
        return function(v) {
            return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Lazy_Types.nil));
        };
    };
};
var length = Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(function(l) {
    return function(v) {
        return l + 1 | 0;
    };
})(0);
var last = function() {
    var go = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Cons) {
                if ($$null(v.value1)) {
                    $tco_done = true;
                    return new Data_Maybe.Just(v.value0);
                }
                if (Data_Boolean.otherwise) {
                    $copy_v = Data_List_Lazy_Types.step(v.value1);
                    return;
                }
            }
            $tco_done = true;
            return Data_Maybe.Nothing.value;
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    return function($261) {
        return go(Data_List_Lazy_Types.step($261));
    };
}();
var iterate = function(f) {
    return function(x) {
        return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function(xs) {
            return Data_List_Lazy_Types.cons(x)(Data_Functor.map(Data_List_Lazy_Types.functorList)(f)(xs));
        });
    };
};
var insertAt = function(v) {
    return function(x) {
        return function(xs) {
            if (v === 0) return Data_List_Lazy_Types.cons(x)(xs);
            var go = function(v1) {
                if (v1 instanceof Data_List_Lazy_Types.Nil) return new Data_List_Lazy_Types.Cons(x, Data_List_Lazy_Types.nil);
                if (v1 instanceof Data_List_Lazy_Types.Cons) return new Data_List_Lazy_Types.Cons(v1.value0, insertAt(v - 1 | 0)(x)(v1.value1));
                throw new Error("Failed pattern match at Data.List.Lazy (line 340, column 3 - line 340, column 22): " + [
                    v1.constructor.name
                ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap()(xs));
        };
    };
};
var init = function() {
    var go = function(v) {
        if (v instanceof Data_List_Lazy_Types.Cons) {
            if ($$null(v.value1)) return new Data_Maybe.Just(Data_List_Lazy_Types.nil);
            if (Data_Boolean.otherwise) return Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Lazy_Types.cons(v.value0))(go(Data_List_Lazy_Types.step(v.value1)));
        }
        return Data_Maybe.Nothing.value;
    };
    return function($262) {
        return go(Data_List_Lazy_Types.step($262));
    };
}();
var index = function(xs) {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v instanceof Data_List_Lazy_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                }
                if (v instanceof Data_List_Lazy_Types.Cons && v1 === 0) {
                    $tco_done = true;
                    return new Data_Maybe.Just(v.value0);
                }
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    $tco_var_v = Data_List_Lazy_Types.step(v.value1);
                    $copy_v1 = v1 - 1 | 0;
                    return;
                }
                throw new Error("Failed pattern match at Data.List.Lazy (line 302, column 3 - line 302, column 21): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return go(Data_List_Lazy_Types.step(xs));
};
var head = function(xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function(v) {
        return v.head;
    })(uncons(xs));
};
var transpose = function(xs) {
    var v = uncons(xs);
    if (v instanceof Data_Maybe.Nothing) return xs;
    if (v instanceof Data_Maybe.Just) {
        var v1 = uncons(v.value0.head);
        if (v1 instanceof Data_Maybe.Nothing) return transpose(v.value0.tail);
        if (v1 instanceof Data_Maybe.Just) return Data_List_Lazy_Types.cons(Data_List_Lazy_Types.cons(v1.value0.head)(mapMaybe(head)(v.value0.tail)))(transpose(Data_List_Lazy_Types.cons(v1.value0.tail)(mapMaybe(tail)(v.value0.tail))));
        throw new Error("Failed pattern match at Data.List.Lazy (line 746, column 7 - line 750, column 72): " + [
            v1.constructor.name
        ]);
    }
    throw new Error("Failed pattern match at Data.List.Lazy (line 742, column 3 - line 750, column 72): " + [
        v.constructor.name
    ]);
};
var groupBy = function(eq) {
    var go = function(v) {
        if (v instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
        if (v instanceof Data_List_Lazy_Types.Cons) {
            var v1 = span(eq(v.value0))(v.value1);
            return new Data_List_Lazy_Types.Cons(Data_Lazy.defer(function(v2) {
                return new Data_NonEmpty.NonEmpty(v.value0, v1.init);
            }), groupBy(eq)(v1.rest));
        }
        throw new Error("Failed pattern match at Data.List.Lazy (line 576, column 3 - line 576, column 15): " + [
            v.constructor.name
        ]);
    };
    var $263 = Data_Functor.map(Data_Lazy.functorLazy)(go);
    var $264 = Data_Newtype.unwrap();
    return function($265) {
        return Data_List_Lazy_Types.List($263($264($265)));
    };
};
var group = function(dictEq) {
    return groupBy(Data_Eq.eq(dictEq));
};
var fromStep = function() {
    var $266 = Control_Applicative.pure(Data_Lazy.applicativeLazy);
    return function($267) {
        return Data_List_Lazy_Types.List($266($267));
    };
}();
var insertBy = function(cmp) {
    return function(x) {
        return function(xs) {
            var go = function(v) {
                if (v instanceof Data_List_Lazy_Types.Nil) return new Data_List_Lazy_Types.Cons(x, Data_List_Lazy_Types.nil);
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    var v1 = cmp(x)(v.value0);
                    if (v1 instanceof Data_Ordering.GT) return new Data_List_Lazy_Types.Cons(v.value0, insertBy(cmp)(x)(v.value1));
                    return new Data_List_Lazy_Types.Cons(x, fromStep(v));
                }
                throw new Error("Failed pattern match at Data.List.Lazy (line 238, column 3 - line 238, column 22): " + [
                    v.constructor.name
                ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap()(xs));
        };
    };
};
var insert = function(dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var fromFoldable = function(dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Lazy_Types.cons)(Data_List_Lazy_Types.nil);
};
var foldrLazy = function(dictLazy) {
    return function(op) {
        return function(z) {
            var go = function(xs) {
                var v = Data_List_Lazy_Types.step(xs);
                if (v instanceof Data_List_Lazy_Types.Cons) return Control_Lazy.defer(dictLazy)(function(v1) {
                    return op(v.value0)(go(v.value1));
                });
                if (v instanceof Data_List_Lazy_Types.Nil) return z;
                throw new Error("Failed pattern match at Data.List.Lazy (line 768, column 13 - line 770, column 15): " + [
                    v.constructor.name
                ]);
            };
            return go;
        };
    };
};
var foldM = function(dictMonad) {
    return function(f) {
        return function(b) {
            return function(xs) {
                var v = uncons(xs);
                if (v instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictMonad.Applicative0())(b);
                if (v instanceof Data_Maybe.Just) return Control_Bind.bind(dictMonad.Bind1())(f(b)(v.value0.head))(function(b$prime) {
                    return foldM(dictMonad)(f)(b$prime)(v.value0.tail);
                });
                throw new Error("Failed pattern match at Data.List.Lazy (line 759, column 5 - line 762, column 54): " + [
                    v.constructor.name
                ]);
            };
        };
    };
};
var findIndex = function(fn) {
    var go = function(n) {
        return function(list) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(uncons(list))(function(o) {
                var $211 = fn(o.head);
                if ($211) return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(n);
                return go(n + 1 | 0)(o.tail);
            });
        };
    };
    return go(0);
};
var findLastIndex = function(fn) {
    return function(xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function(v) {
            return (length(xs) - 1 | 0) - v | 0;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function(dictMonad) {
    return function(p) {
        return function(list) {
            var v = uncons(list);
            if (v instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
            if (v instanceof Data_Maybe.Just) return Control_Bind.bind(dictMonad.Bind1())(p(v.value0.head))(function(b) {
                return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(p)(v.value0.tail))(function(xs$prime) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(function() {
                        if (b) return Data_List_Lazy_Types.cons(v.value0.head)(xs$prime);
                        return xs$prime;
                    }());
                });
            });
            throw new Error("Failed pattern match at Data.List.Lazy (line 431, column 5 - line 436, column 48): " + [
                v.constructor.name
            ]);
        };
    };
};
var filter = function(p) {
    var go = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Nil) {
                $tco_done = true;
                return Data_List_Lazy_Types.Nil.value;
            }
            if (v instanceof Data_List_Lazy_Types.Cons) {
                if (p(v.value0)) {
                    $tco_done = true;
                    return new Data_List_Lazy_Types.Cons(v.value0, filter(p)(v.value1));
                }
                if (Data_Boolean.otherwise) {
                    $copy_v = Data_List_Lazy_Types.step(v.value1);
                    return;
                }
            }
            throw new Error("Failed pattern match at Data.List.Lazy (line 416, column 3 - line 416, column 15): " + [
                v.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    var $268 = Data_Functor.map(Data_Lazy.functorLazy)(go);
    var $269 = Data_Newtype.unwrap();
    return function($270) {
        return Data_List_Lazy_Types.List($268($269($270)));
    };
};
var intersectBy = function(eq) {
    return function(xs) {
        return function(ys) {
            return filter(function(x) {
                return Data_Foldable.any(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(eq(x))(ys);
            })(xs);
        };
    };
};
var intersect = function(dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var nubByEq = function(eq) {
    var go = function(v) {
        if (v instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
        if (v instanceof Data_List_Lazy_Types.Cons) return new Data_List_Lazy_Types.Cons(v.value0, nubByEq(eq)(filter(function(y) {
            return !eq(v.value0)(y);
        })(v.value1)));
        throw new Error("Failed pattern match at Data.List.Lazy (line 633, column 3 - line 633, column 15): " + [
            v.constructor.name
        ]);
    };
    var $271 = Data_Functor.map(Data_Lazy.functorLazy)(go);
    var $272 = Data_Newtype.unwrap();
    return function($273) {
        return Data_List_Lazy_Types.List($271($272($273)));
    };
};
var nubEq = function(dictEq) {
    return nubByEq(Data_Eq.eq(dictEq));
};
var eqPattern = function(dictEq) {
    return new Data_Eq.Eq(function(x) {
        return function(y) {
            return Data_Eq.eq(Data_List_Lazy_Types.eqList(dictEq))(x)(y);
        };
    });
};
var ordPattern = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqPattern(dictOrd.Eq0());
    }, function(x) {
        return function(y) {
            return Data_Ord.compare(Data_List_Lazy_Types.ordList(dictOrd))(x)(y);
        };
    });
};
var elemLastIndex = function(dictEq) {
    return function(x) {
        return findLastIndex(function(v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function(dictEq) {
    return function(x) {
        return findIndex(function(v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function(p) {
    var go = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Cons && p(v.value0)) {
                $copy_v = Data_List_Lazy_Types.step(v.value1);
                return;
            }
            $tco_done = true;
            return fromStep(v);
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    return function($274) {
        return go(Data_List_Lazy_Types.step($274));
    };
};
var drop = function(n) {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v === 0) {
                    $tco_done = true;
                    return v1;
                }
                if (v1 instanceof Data_List_Lazy_Types.Nil) {
                    $tco_done = true;
                    return Data_List_Lazy_Types.Nil.value;
                }
                if (v1 instanceof Data_List_Lazy_Types.Cons) {
                    $tco_var_v = v - 1 | 0;
                    $copy_v1 = Data_List_Lazy_Types.step(v1.value1);
                    return;
                }
                throw new Error("Failed pattern match at Data.List.Lazy (line 524, column 3 - line 524, column 15): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    var $275 = Data_Functor.map(Data_Lazy.functorLazy)(go(n));
    var $276 = Data_Newtype.unwrap();
    return function($277) {
        return Data_List_Lazy_Types.List($275($276($277)));
    };
};
var slice = function(start) {
    return function(end) {
        return function(xs) {
            return take(end - start | 0)(drop(start)(xs));
        };
    };
};
var deleteBy = function(eq) {
    return function(x) {
        return function(xs) {
            var go = function(v) {
                if (v instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    if (eq(x)(v.value0)) return Data_List_Lazy_Types.step(v.value1);
                    if (Data_Boolean.otherwise) return new Data_List_Lazy_Types.Cons(v.value0, deleteBy(eq)(x)(v.value1));
                }
                throw new Error("Failed pattern match at Data.List.Lazy (line 662, column 3 - line 662, column 15): " + [
                    v.constructor.name
                ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap()(xs));
        };
    };
};
var unionBy = function(eq) {
    return function(xs) {
        return function(ys) {
            return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
        };
    };
};
var union = function(dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var deleteAt = function(n) {
    return function(xs) {
        var go = function(v) {
            return function(v1) {
                if (v1 instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
                if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) return Data_List_Lazy_Types.step(v1.value1);
                if (v1 instanceof Data_List_Lazy_Types.Cons) return new Data_List_Lazy_Types.Cons(v1.value0, deleteAt(v - 1 | 0)(v1.value1));
                throw new Error("Failed pattern match at Data.List.Lazy (line 350, column 3 - line 350, column 17): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap()(xs));
    };
};
var $$delete = function(dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function(dictEq) {
    return Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};
var cycle = function(xs) {
    return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function(ys) {
        return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(ys);
    });
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Lazy_Types.bindList));
var concat = function(v) {
    return Control_Bind.bind(Data_List_Lazy_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
};
var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
var alterAt = function(n) {
    return function(f) {
        return function(xs) {
            var go = function(v) {
                return function(v1) {
                    if (v1 instanceof Data_List_Lazy_Types.Nil) return Data_List_Lazy_Types.Nil.value;
                    if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
                        var v2 = f(v1.value0);
                        if (v2 instanceof Data_Maybe.Nothing) return Data_List_Lazy_Types.step(v1.value1);
                        if (v2 instanceof Data_Maybe.Just) return new Data_List_Lazy_Types.Cons(v2.value0, v1.value1);
                        throw new Error("Failed pattern match at Data.List.Lazy (line 382, column 22 - line 384, column 26): " + [
                            v2.constructor.name
                        ]);
                    }
                    if (v1 instanceof Data_List_Lazy_Types.Cons) return new Data_List_Lazy_Types.Cons(v1.value0, alterAt(v - 1 | 0)(f)(v1.value1));
                    throw new Error("Failed pattern match at Data.List.Lazy (line 381, column 3 - line 381, column 17): " + [
                        v.constructor.name,
                        v1.constructor.name
                    ]);
                };
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap()(xs));
        };
    };
};
var modifyAt = function(n) {
    return function(f) {
        return alterAt(n)(function($278) {
            return Data_Maybe.Just.create(f($278));
        });
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    singleton: singleton,
    range: range,
    replicate: replicate,
    replicateM: replicateM,
    some: some,
    many: many,
    repeat: repeat,
    iterate: iterate,
    cycle: cycle,
    "null": $$null,
    length: length,
    snoc: snoc,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    Pattern: Pattern,
    stripPrefix: stripPrefix,
    slice: slice,
    take: take,
    takeWhile: takeWhile,
    drop: drop,
    dropWhile: dropWhile,
    span: span,
    group: group,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    nubEq: nubEq,
    nubByEq: nubByEq,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    transpose: transpose,
    foldM: foldM,
    foldrLazy: foldrLazy,
    scanlLazy: scanlLazy,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern,
    all: Data_Foldable.all,
    any: Data_Foldable.any,
    elem: Data_Foldable.elem,
    find: Data_Foldable.find,
    findMap: Data_Foldable.findMap,
    fold: Data_Foldable.fold,
    foldMap: Data_Foldable.foldMap,
    foldl: Data_Foldable.foldl,
    foldr: Data_Foldable.foldr,
    intercalate: Data_Foldable.intercalate,
    notElem: Data_Foldable.notElem,
    List: Data_List_Lazy_Types.List,
    Cons: Data_List_Lazy_Types.Cons,
    Nil: Data_List_Lazy_Types.Nil,
    cons: Data_List_Lazy_Types.cons,
    nil: Data_List_Lazy_Types.nil,
    step: Data_List_Lazy_Types.step,
    scanl: Data_Traversable.scanl,
    scanr: Data_Traversable.scanr
};

},{"../Control.Alt/index.js":"82RIG","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Lazy/index.js":"chn7k","../Control.Monad.Rec.Class/index.js":"dMFG0","../Data.Boolean/index.js":"lv1qw","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.Lazy/index.js":"520Le","../Data.List.Internal/index.js":"7xrIp","../Data.List.Lazy.Types/index.js":"95AMQ","../Data.Maybe/index.js":"ePH81","../Data.Newtype/index.js":"czJbt","../Data.NonEmpty/index.js":"4pAZZ","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW","../Data.Traversable/index.js":"i5Kon","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk"}],"520Le":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var showLazy = function(dictShow) {
    return new Data_Show.Show(function(x) {
        return "(defer \\_ -> " + (Data_Show.show(dictShow)($foreign.force(x)) + ")");
    });
};
var semiringLazy = function(dictSemiring) {
    return new Data_Semiring.Semiring(function(a) {
        return function(b) {
            return $foreign.defer(function(v) {
                return Data_Semiring.add(dictSemiring)($foreign.force(a))($foreign.force(b));
            });
        };
    }, function(a) {
        return function(b) {
            return $foreign.defer(function(v) {
                return Data_Semiring.mul(dictSemiring)($foreign.force(a))($foreign.force(b));
            });
        };
    }, $foreign.defer(function(v) {
        return Data_Semiring.one(dictSemiring);
    }), $foreign.defer(function(v) {
        return Data_Semiring.zero(dictSemiring);
    }));
};
var semigroupLazy = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function(a) {
        return function(b) {
            return $foreign.defer(function(v) {
                return Data_Semigroup.append(dictSemigroup)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var ringLazy = function(dictRing) {
    return new Data_Ring.Ring(function() {
        return semiringLazy(dictRing.Semiring0());
    }, function(a) {
        return function(b) {
            return $foreign.defer(function(v) {
                return Data_Ring.sub(dictRing)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var monoidLazy = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupLazy(dictMonoid.Semigroup0());
    }, $foreign.defer(function(v) {
        return Data_Monoid.mempty(dictMonoid);
    }));
};
var lazyLazy = new Control_Lazy.Lazy(function(f) {
    return $foreign.defer(function(v) {
        return $foreign.force(f(Data_Unit.unit));
    });
});
var functorLazy = new Data_Functor.Functor(function(f) {
    return function(l) {
        return $foreign.defer(function(v) {
            return f($foreign.force(l));
        });
    };
});
var functorWithIndexLazy = new Data_FunctorWithIndex.FunctorWithIndex(function() {
    return functorLazy;
}, function(f) {
    return Data_Functor.map(functorLazy)(f(Data_Unit.unit));
});
var invariantLazy = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLazy));
var foldableLazy = new Data_Foldable.Foldable(function(dictMonoid) {
    return function(f) {
        return function(l) {
            return f($foreign.force(l));
        };
    };
}, function(f) {
    return function(z) {
        return function(l) {
            return f(z)($foreign.force(l));
        };
    };
}, function(f) {
    return function(z) {
        return function(l) {
            return f($foreign.force(l))(z);
        };
    };
});
var foldableWithIndexLazy = new Data_FoldableWithIndex.FoldableWithIndex(function() {
    return foldableLazy;
}, function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldMap(foldableLazy)(dictMonoid)(f(Data_Unit.unit));
    };
}, function(f) {
    return Data_Foldable.foldl(foldableLazy)(f(Data_Unit.unit));
}, function(f) {
    return Data_Foldable.foldr(foldableLazy)(f(Data_Unit.unit));
});
var traversableLazy = new Data_Traversable.Traversable(function() {
    return foldableLazy;
}, function() {
    return functorLazy;
}, function(dictApplicative) {
    return function(l) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(function($43) {
            return $foreign.defer(Data_Function["const"]($43));
        })($foreign.force(l));
    };
}, function(dictApplicative) {
    return function(f) {
        return function(l) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(function($44) {
                return $foreign.defer(Data_Function["const"]($44));
            })(f($foreign.force(l)));
        };
    };
});
var traversableWithIndexLazy = new Data_TraversableWithIndex.TraversableWithIndex(function() {
    return foldableWithIndexLazy;
}, function() {
    return functorWithIndexLazy;
}, function() {
    return traversableLazy;
}, function(dictApplicative) {
    return function(f) {
        return Data_Traversable.traverse(traversableLazy)(dictApplicative)(f(Data_Unit.unit));
    };
});
var foldable1Lazy = new Data_Semigroup_Foldable.Foldable1(function() {
    return foldableLazy;
}, function(dictSemigroup) {
    return function(f) {
        return function(l) {
            return f($foreign.force(l));
        };
    };
}, function(v) {
    return function(l) {
        return $foreign.force(l);
    };
}, function(v) {
    return function(l) {
        return $foreign.force(l);
    };
});
var traversable1Lazy = new Data_Semigroup_Traversable.Traversable1(function() {
    return foldable1Lazy;
}, function() {
    return traversableLazy;
}, function(dictApply) {
    return function(l) {
        return Data_Functor.map(dictApply.Functor0())(function($45) {
            return $foreign.defer(Data_Function["const"]($45));
        })($foreign.force(l));
    };
}, function(dictApply) {
    return function(f) {
        return function(l) {
            return Data_Functor.map(dictApply.Functor0())(function($46) {
                return $foreign.defer(Data_Function["const"]($46));
            })(f($foreign.force(l)));
        };
    };
});
var extendLazy = new Control_Extend.Extend(function() {
    return functorLazy;
}, function(f) {
    return function(x) {
        return $foreign.defer(function(v) {
            return f(x);
        });
    };
});
var eqLazy = function(dictEq) {
    return new Data_Eq.Eq(function(x) {
        return function(y) {
            return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
        };
    });
};
var ordLazy = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqLazy(dictOrd.Eq0());
    }, function(x) {
        return function(y) {
            return Data_Ord.compare(dictOrd)($foreign.force(x))($foreign.force(y));
        };
    });
};
var eq1Lazy = new Data_Eq.Eq1(function(dictEq) {
    return Data_Eq.eq(eqLazy(dictEq));
});
var ord1Lazy = new Data_Ord.Ord1(function() {
    return eq1Lazy;
}, function(dictOrd) {
    return Data_Ord.compare(ordLazy(dictOrd));
});
var comonadLazy = new Control_Comonad.Comonad(function() {
    return extendLazy;
}, $foreign.force);
var commutativeRingLazy = function(dictCommutativeRing) {
    return new Data_CommutativeRing.CommutativeRing(function() {
        return ringLazy(dictCommutativeRing.Ring0());
    });
};
var euclideanRingLazy = function(dictEuclideanRing) {
    return new Data_EuclideanRing.EuclideanRing(function() {
        return commutativeRingLazy(dictEuclideanRing.CommutativeRing0());
    }, function() {
        var $47 = Data_EuclideanRing.degree(dictEuclideanRing);
        return function($48) {
            return $47($foreign.force($48));
        };
    }(), function(a) {
        return function(b) {
            return $foreign.defer(function(v) {
                return Data_EuclideanRing.div(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
            });
        };
    }, function(a) {
        return function(b) {
            return $foreign.defer(function(v) {
                return Data_EuclideanRing.mod(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var boundedLazy = function(dictBounded) {
    return new Data_Bounded.Bounded(function() {
        return ordLazy(dictBounded.Ord0());
    }, $foreign.defer(function(v) {
        return Data_Bounded.bottom(dictBounded);
    }), $foreign.defer(function(v) {
        return Data_Bounded.top(dictBounded);
    }));
};
var applyLazy = new Control_Apply.Apply(function() {
    return functorLazy;
}, function(f) {
    return function(x) {
        return $foreign.defer(function(v) {
            return $foreign.force(f)($foreign.force(x));
        });
    };
});
var bindLazy = new Control_Bind.Bind(function() {
    return applyLazy;
}, function(l) {
    return function(f) {
        return $foreign.defer(function(v) {
            return $foreign.force(f($foreign.force(l)));
        });
    };
});
var heytingAlgebraLazy = function(dictHeytingAlgebra) {
    return new Data_HeytingAlgebra.HeytingAlgebra(function(a) {
        return function(b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.conj(dictHeytingAlgebra))(a))(b);
        };
    }, function(a) {
        return function(b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.disj(dictHeytingAlgebra))(a))(b);
        };
    }, $foreign.defer(function(v) {
        return Data_HeytingAlgebra.ff(dictHeytingAlgebra);
    }), function(a) {
        return function(b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.implies(dictHeytingAlgebra))(a))(b);
        };
    }, function(a) {
        return Data_Functor.map(functorLazy)(Data_HeytingAlgebra.not(dictHeytingAlgebra))(a);
    }, $foreign.defer(function(v) {
        return Data_HeytingAlgebra.tt(dictHeytingAlgebra);
    }));
};
var booleanAlgebraLazy = function(dictBooleanAlgebra) {
    return new Data_BooleanAlgebra.BooleanAlgebra(function() {
        return heytingAlgebraLazy(dictBooleanAlgebra.HeytingAlgebra0());
    });
};
var applicativeLazy = new Control_Applicative.Applicative(function() {
    return applyLazy;
}, function(a) {
    return $foreign.defer(function(v) {
        return a;
    });
});
var monadLazy = new Control_Monad.Monad(function() {
    return applicativeLazy;
}, function() {
    return bindLazy;
});
module.exports = {
    semiringLazy: semiringLazy,
    ringLazy: ringLazy,
    commutativeRingLazy: commutativeRingLazy,
    euclideanRingLazy: euclideanRingLazy,
    eqLazy: eqLazy,
    eq1Lazy: eq1Lazy,
    ordLazy: ordLazy,
    ord1Lazy: ord1Lazy,
    boundedLazy: boundedLazy,
    semigroupLazy: semigroupLazy,
    monoidLazy: monoidLazy,
    heytingAlgebraLazy: heytingAlgebraLazy,
    booleanAlgebraLazy: booleanAlgebraLazy,
    functorLazy: functorLazy,
    functorWithIndexLazy: functorWithIndexLazy,
    foldableLazy: foldableLazy,
    foldableWithIndexLazy: foldableWithIndexLazy,
    foldable1Lazy: foldable1Lazy,
    traversableLazy: traversableLazy,
    traversableWithIndexLazy: traversableWithIndexLazy,
    traversable1Lazy: traversable1Lazy,
    invariantLazy: invariantLazy,
    applyLazy: applyLazy,
    applicativeLazy: applicativeLazy,
    bindLazy: bindLazy,
    monadLazy: monadLazy,
    extendLazy: extendLazy,
    comonadLazy: comonadLazy,
    showLazy: showLazy,
    lazyLazy: lazyLazy,
    defer: $foreign.defer,
    force: $foreign.force
};

},{"./foreign.js":"dhwHC","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Comonad/index.js":"hfPua","../Control.Extend/index.js":"kAltv","../Control.Lazy/index.js":"chn7k","../Control.Monad/index.js":"alCn2","../Data.BooleanAlgebra/index.js":"l0dkx","../Data.Bounded/index.js":"jzt4h","../Data.CommutativeRing/index.js":"2q7tT","../Data.Eq/index.js":"c3b8F","../Data.EuclideanRing/index.js":"fTU7A","../Data.Foldable/index.js":"jWmFN","../Data.FoldableWithIndex/index.js":"b0hJn","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Functor.Invariant/index.js":"hYAzT","../Data.FunctorWithIndex/index.js":"9mTwC","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Ring/index.js":"2x2oG","../Data.Semigroup/index.js":"4sNah","../Data.Semigroup.Foldable/index.js":"lM4gt","../Data.Semigroup.Traversable/index.js":"kPmtP","../Data.Semiring/index.js":"39btI","../Data.Show/index.js":"b6tNW","../Data.Traversable/index.js":"i5Kon","../Data.TraversableWithIndex/index.js":"bLveW","../Data.Unit/index.js":"d7oKp"}],"dhwHC":[function(require,module,exports) {
"use strict";
exports.defer = function(thunk) {
    var v = null;
    return function() {
        if (thunk === undefined) return v;
        v = thunk();
        thunk = undefined; // eslint-disable-line no-param-reassign
        return v;
    };
};
exports.force = function(l) {
    return l();
};

},{}],"95AMQ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var List = function(x) {
    return x;
};
var Nil = function() {
    function Nil1() {
    }
    Nil1.value = new Nil1();
    return Nil1;
}();
var Cons = function() {
    function Cons1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Cons1.create = function(value0) {
        return function(value1) {
            return new Cons1(value0, value1);
        };
    };
    return Cons1;
}();
var NonEmptyList = function(x) {
    return x;
};
var nil = List(Data_Lazy.defer(function(v) {
    return Nil.value;
}));
var newtypeNonEmptyList = new Data_Newtype.Newtype(function() {
    return undefined;
});
var newtypeList = new Data_Newtype.Newtype(function() {
    return undefined;
});
var step = function() {
    var $225 = Data_Newtype.unwrap();
    return function($226) {
        return Data_Lazy.force($225($226));
    };
}();
var semigroupList = new Data_Semigroup.Semigroup(function(xs) {
    return function(ys) {
        var go = function(v) {
            if (v instanceof Nil) return step(ys);
            if (v instanceof Cons) return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 104, column 5 - line 104, column 21): " + [
                v.constructor.name
            ]);
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap()(xs));
    };
});
var monoidList = new Data_Monoid.Monoid(function() {
    return semigroupList;
}, nil);
var lazyList = new Control_Lazy.Lazy(function(f) {
    return List(Data_Lazy.defer(function($227) {
        return step(f($227));
    }));
});
var functorList = new Data_Functor.Functor(function(f) {
    return function(xs) {
        var go = function(v) {
            if (v instanceof Nil) return Nil.value;
            if (v instanceof Cons) return new Cons(f(v.value0), Data_Functor.map(functorList)(f)(v.value1));
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 113, column 5 - line 113, column 17): " + [
                v.constructor.name
            ]);
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap()(xs));
    };
});
var functorNonEmptyList = new Data_Functor.Functor(function(f) {
    return function(v) {
        return Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(Data_NonEmpty.functorNonEmpty(functorList))(f))(v);
    };
});
var eq1List = new Data_Eq.Eq1(function(dictEq) {
    return function(xs) {
        return function(ys) {
            var go = function($copy_v) {
                return function($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return true;
                        }
                        if (v instanceof Cons && v1 instanceof Cons && Data_Eq.eq(dictEq)(v.value0)(v1.value0)) {
                            $tco_var_v = step(v.value1);
                            $copy_v1 = step(v1.value1);
                            return;
                        }
                        $tco_done = true;
                        return false;
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
                    return $tco_result;
                };
            };
            return go(step(xs))(step(ys));
        };
    };
});
var eq1NonEmptyList = new Data_Eq.Eq1(function(dictEq) {
    return function(v) {
        return function(v1) {
            return Data_Eq.eq1(Data_Lazy.eq1Lazy)(Data_NonEmpty.eqNonEmpty(eq1List)(dictEq))(v)(v1);
        };
    };
});
var eqList = function(dictEq) {
    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};
var eqNonEmptyList = function(dictEq) {
    return Data_Lazy.eqLazy(Data_NonEmpty.eqNonEmpty(eq1List)(dictEq));
};
var ord1List = new Data_Ord.Ord1(function() {
    return eq1List;
}, function(dictOrd) {
    return function(xs) {
        return function(ys) {
            var go = function($copy_v) {
                return function($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.EQ.value;
                        }
                        if (v instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.LT.value;
                        }
                        if (v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.GT.value;
                        }
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_var_v = step(v.value1);
                                $copy_v1 = step(v1.value1);
                                return;
                            }
                            $tco_done = true;
                            return v2;
                        }
                        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 90, column 5 - line 90, column 20): " + [
                            v.constructor.name,
                            v1.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
                    return $tco_result;
                };
            };
            return go(step(xs))(step(ys));
        };
    };
});
var ord1NonEmptyList = new Data_Ord.Ord1(function() {
    return eq1NonEmptyList;
}, function(dictOrd) {
    return function(v) {
        return function(v1) {
            return Data_Ord.compare1(Data_Lazy.ord1Lazy)(Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd))(v)(v1);
        };
    };
});
var ordList = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqList(dictOrd.Eq0());
    }, Data_Ord.compare1(ord1List)(dictOrd));
};
var ordNonEmptyList = function(dictOrd) {
    return Data_Lazy.ordLazy(Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd));
};
var cons = function(x) {
    return function(xs) {
        return List(Data_Lazy.defer(function(v) {
            return new Cons(x, xs);
        }));
    };
};
var foldableList = new Data_Foldable.Foldable(function(dictMonoid) {
    return function(f) {
        return Data_Foldable.foldl(foldableList)(function(b) {
            return function(a) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(b)(f(a));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function(op) {
    var go = function($copy_b) {
        return function($copy_xs) {
            var $tco_var_b = $copy_b;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(b, xs) {
                var v = step(xs);
                if (v instanceof Nil) {
                    $tco_done = true;
                    return b;
                }
                if (v instanceof Cons) {
                    $tco_var_b = op(b)(v.value0);
                    $copy_xs = v.value1;
                    return;
                }
                throw new Error("Failed pattern match at Data.List.Lazy.Types (line 128, column 7 - line 130, column 40): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_b, $copy_xs);
            return $tco_result;
        };
    };
    return go;
}, function(op) {
    return function(z) {
        return function(xs) {
            var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(cons))(nil);
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(op))(z)(rev(xs));
        };
    };
});
var extendList = new Control_Extend.Extend(function() {
    return functorList;
}, function(f) {
    return function(l) {
        var go = function(a) {
            return function(v) {
                var acc$prime = cons(a)(v.acc);
                return {
                    val: cons(f(acc$prime))(v.val),
                    acc: acc$prime
                };
            };
        };
        var v = step(l);
        if (v instanceof Nil) return nil;
        if (v instanceof Cons) return cons(f(l))(Data_Foldable.foldr(foldableList)(go)({
            val: nil,
            acc: nil
        })(v.value1).val);
        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 200, column 5 - line 203, column 55): " + [
            v.constructor.name
        ]);
    };
});
var extendNonEmptyList = new Control_Extend.Extend(function() {
    return functorNonEmptyList;
}, function(f) {
    return function(v) {
        var go = function(a) {
            return function(v1) {
                return {
                    val: cons(f(Data_Lazy.defer(function(v2) {
                        return new Data_NonEmpty.NonEmpty(a, v1.acc);
                    })))(v1.val),
                    acc: cons(a)(v1.acc)
                };
            };
        };
        var v1 = Data_Lazy.force(v);
        return NonEmptyList(Data_Lazy.defer(function(v2) {
            return new Data_NonEmpty.NonEmpty(f(v), Data_Foldable.foldr(foldableList)(go)({
                val: nil,
                acc: nil
            })(v1.value1).val);
        }));
    };
});
var foldableNonEmptyList = new Data_Foldable.Foldable(function(dictMonoid) {
    return function(f) {
        return function(v) {
            return Data_Foldable.foldMap(Data_NonEmpty.foldableNonEmpty(foldableList))(dictMonoid)(f)(Data_Lazy.force(v));
        };
    };
}, function(f) {
    return function(b) {
        return function(v) {
            return Data_Foldable.foldl(Data_NonEmpty.foldableNonEmpty(foldableList))(f)(b)(Data_Lazy.force(v));
        };
    };
}, function(f) {
    return function(b) {
        return function(v) {
            return Data_Foldable.foldr(Data_NonEmpty.foldableNonEmpty(foldableList))(f)(b)(Data_Lazy.force(v));
        };
    };
});
var showList = function(dictShow) {
    return new Data_Show.Show(function(xs) {
        return "(fromFoldable [" + ((function() {
            var v = step(xs);
            if (v instanceof Nil) return "";
            if (v instanceof Cons) return Data_Show.show(dictShow)(v.value0) + Data_Foldable.foldl(foldableList)(function(shown) {
                return function(x$prime) {
                    return shown + ("," + Data_Show.show(dictShow)(x$prime));
                };
            })("")(v.value1);
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 67, column 13 - line 70, column 78): " + [
                v.constructor.name
            ]);
        })() + "])");
    });
};
var showNonEmptyList = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(NonEmptyList " + (Data_Show.show(Data_Lazy.showLazy(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow))))(v) + ")");
    });
};
var showStep = function(dictShow) {
    return new Data_Show.Show(function(v) {
        if (v instanceof Nil) return "Nil";
        if (v instanceof Cons) return "(" + (Data_Show.show(dictShow)(v.value0) + (" : " + (Data_Show.show(showList(dictShow))(v.value1) + ")")));
        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 37, column 1 - line 39, column 62): " + [
            v.constructor.name
        ]);
    });
};
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function() {
    return foldableList;
}, function(dictMonoid) {
    return function(f) {
        return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function(i) {
            return function(acc) {
                var $228 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
                var $229 = f(i);
                return function($230) {
                    return $228($229($230));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function(f) {
    return function(acc) {
        var $231 = Data_Foldable.foldl(foldableList)(function(v) {
            return function(a) {
                return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
            };
        })(new Data_Tuple.Tuple(0, acc));
        return function($232) {
            return Data_Tuple.snd($231($232));
        };
    };
}, function(f) {
    return function(b) {
        return function(xs) {
            var v = function() {
                var rev = Data_Foldable.foldl(foldableList)(function(v1) {
                    return function(a) {
                        return new Data_Tuple.Tuple(v1.value0 + 1 | 0, cons(a)(v1.value1));
                    };
                });
                return rev(new Data_Tuple.Tuple(0, nil))(xs);
            }();
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function(v1) {
                return function(a) {
                    return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                };
            })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
        };
    };
});
var foldableWithIndexNonEmptyList = new Data_FoldableWithIndex.FoldableWithIndex(function() {
    return foldableNonEmptyList;
}, function(dictMonoid) {
    return function(f) {
        return function(v) {
            return Data_FoldableWithIndex.foldMapWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(dictMonoid)(function() {
                var $233 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
                return function($234) {
                    return f($233($234));
                };
            }())(Data_Lazy.force(v));
        };
    };
}, function(f) {
    return function(b) {
        return function(v) {
            return Data_FoldableWithIndex.foldlWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function() {
                var $235 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
                return function($236) {
                    return f($235($236));
                };
            }())(b)(Data_Lazy.force(v));
        };
    };
}, function(f) {
    return function(b) {
        return function(v) {
            return Data_FoldableWithIndex.foldrWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function() {
                var $237 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
                return function($238) {
                    return f($237($238));
                };
            }())(b)(Data_Lazy.force(v));
        };
    };
});
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function() {
    return functorList;
}, function(f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function(i) {
        return function(x) {
            return function(acc) {
                return cons(f(i)(x))(acc);
            };
        };
    })(nil);
});
var functorWithIndexNonEmptyList = new Data_FunctorWithIndex.FunctorWithIndex(function() {
    return functorNonEmptyList;
}, function(f) {
    return function(v) {
        return NonEmptyList(Data_Lazy.defer(function(v1) {
            return Data_FunctorWithIndex.mapWithIndex(Data_NonEmpty.functorWithIndex(functorWithIndexList))(function() {
                var $239 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
                return function($240) {
                    return f($239($240));
                };
            }())(Data_Lazy.force(v));
        }));
    };
});
var toList = function(v) {
    return Control_Lazy.defer(lazyList)(function(v1) {
        var v2 = Data_Lazy.force(v);
        return cons(v2.value0)(v2.value1);
    });
};
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function(v) {
    return function(as$prime) {
        var v1 = Data_Lazy.force(v);
        return Data_Lazy.defer(function(v2) {
            return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(toList(as$prime)));
        });
    };
});
var traversableList = new Data_Traversable.Traversable(function() {
    return foldableList;
}, function() {
    return functorList;
}, function(dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function(dictApplicative) {
    return function(f) {
        return Data_Foldable.foldr(foldableList)(function(a) {
            return function(b) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(f(a)))(b);
            };
        })(Control_Applicative.pure(dictApplicative)(nil));
    };
});
var traversableNonEmptyList = new Data_Traversable.Traversable(function() {
    return foldableNonEmptyList;
}, function() {
    return functorNonEmptyList;
}, function(dictApplicative) {
    return function(v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(function(xxs) {
            return NonEmptyList(Data_Lazy.defer(function(v1) {
                return xxs;
            }));
        })(Data_Traversable.sequence(Data_NonEmpty.traversableNonEmpty(traversableList))(dictApplicative)(Data_Lazy.force(v)));
    };
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(function(xxs) {
                return NonEmptyList(Data_Lazy.defer(function(v1) {
                    return xxs;
                }));
            })(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(traversableList))(dictApplicative)(f)(Data_Lazy.force(v)));
        };
    };
});
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function() {
    return foldableWithIndexList;
}, function() {
    return functorWithIndexList;
}, function() {
    return traversableList;
}, function(dictApplicative) {
    return function(f) {
        return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function(i) {
            return function(a) {
                return function(b) {
                    return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(f(i)(a)))(b);
                };
            };
        })(Control_Applicative.pure(dictApplicative)(nil));
    };
});
var traversableWithIndexNonEmptyList = new Data_TraversableWithIndex.TraversableWithIndex(function() {
    return foldableWithIndexNonEmptyList;
}, function() {
    return functorWithIndexNonEmptyList;
}, function() {
    return traversableNonEmptyList;
}, function(dictApplicative) {
    return function(f) {
        return function(v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(function(xxs) {
                return NonEmptyList(Data_Lazy.defer(function(v1) {
                    return xxs;
                }));
            })(Data_TraversableWithIndex.traverseWithIndex(Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList))(dictApplicative)(function() {
                var $241 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
                return function($242) {
                    return f($241($242));
                };
            }())(Data_Lazy.force(v)));
        };
    };
});
var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function() {
    var go = function(f) {
        return function(b) {
            return Control_Lazy.defer(lazyList)(function(v) {
                var v1 = f(b);
                if (v1.value1 instanceof Data_Maybe.Just) return cons(v1.value0)(go(f)(v1.value1.value0));
                if (v1.value1 instanceof Data_Maybe.Nothing) return cons(v1.value0)(nil);
                throw new Error("Failed pattern match at Data.List.Lazy.Types (line 152, column 28 - line 154, column 33): " + [
                    v1.constructor.name
                ]);
            });
        };
    };
    return go;
}());
var unfoldableList = new Data_Unfoldable.Unfoldable(function() {
    return unfoldable1List;
}, function() {
    var go = function(f) {
        return function(b) {
            return Control_Lazy.defer(lazyList)(function(v) {
                var v1 = f(b);
                if (v1 instanceof Data_Maybe.Nothing) return nil;
                if (v1 instanceof Data_Maybe.Just) return cons(v1.value0.value0)(go(f)(v1.value0.value1));
                throw new Error("Failed pattern match at Data.List.Lazy.Types (line 158, column 28 - line 160, column 39): " + [
                    v1.constructor.name
                ]);
            });
        };
    };
    return go;
}());
var unfoldable1NonEmptyList = new Data_Unfoldable1.Unfoldable1(function(f) {
    return function(b) {
        return NonEmptyList(Data_Lazy.defer(function(v) {
            return Data_Unfoldable1.unfoldr1(Data_NonEmpty.unfoldable1NonEmpty(unfoldableList))(f)(b);
        }));
    };
});
var comonadNonEmptyList = new Control_Comonad.Comonad(function() {
    return extendNonEmptyList;
}, function(v) {
    return Data_NonEmpty.head(Data_Lazy.force(v));
});
var monadList = new Control_Monad.Monad(function() {
    return applicativeList;
}, function() {
    return bindList;
});
var bindList = new Control_Bind.Bind(function() {
    return applyList;
}, function(xs) {
    return function(f) {
        var go = function(v) {
            if (v instanceof Nil) return Nil.value;
            if (v instanceof Cons) return step(Data_Semigroup.append(semigroupList)(f(v.value0))(Control_Bind.bind(bindList)(v.value1)(f)));
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 181, column 5 - line 181, column 17): " + [
                v.constructor.name
            ]);
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap()(xs));
    };
});
var applyList = new Control_Apply.Apply(function() {
    return functorList;
}, Control_Monad.ap(monadList));
var applicativeList = new Control_Applicative.Applicative(function() {
    return applyList;
}, function(a) {
    return cons(a)(nil);
});
var applyNonEmptyList = new Control_Apply.Apply(function() {
    return functorNonEmptyList;
}, function(v) {
    return function(v1) {
        var v2 = Data_Lazy.force(v1);
        var v3 = Data_Lazy.force(v);
        return Data_Lazy.defer(function(v4) {
            return new Data_NonEmpty.NonEmpty(v3.value0(v2.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v3.value1)(cons(v2.value0)(nil)))(Control_Apply.apply(applyList)(cons(v3.value0)(v3.value1))(v2.value1)));
        });
    };
});
var bindNonEmptyList = new Control_Bind.Bind(function() {
    return applyNonEmptyList;
}, function(v) {
    return function(f) {
        var v1 = Data_Lazy.force(v);
        var v2 = Data_Lazy.force(Data_Newtype.unwrap()(f(v1.value0)));
        return Data_Lazy.defer(function(v3) {
            return new Data_NonEmpty.NonEmpty(v2.value0, Data_Semigroup.append(semigroupList)(v2.value1)(Control_Bind.bind(bindList)(v1.value1)(function($243) {
                return toList(f($243));
            })));
        });
    };
});
var altNonEmptyList = new Control_Alt.Alt(function() {
    return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function() {
    return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function() {
    return altList;
}, nil);
var alternativeList = new Control_Alternative.Alternative(function() {
    return applicativeList;
}, function() {
    return plusList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function() {
    return alternativeList;
}, function() {
    return monadList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function() {
    return alternativeList;
}, function() {
    return monadList;
}, function() {
    return undefined;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function() {
    return applyNonEmptyList;
}, function(a) {
    return Data_Lazy.defer(function(v) {
        return Data_NonEmpty.singleton(plusList)(a);
    });
});
var monadNonEmptyList = new Control_Monad.Monad(function() {
    return applicativeNonEmptyList;
}, function() {
    return bindNonEmptyList;
});
module.exports = {
    List: List,
    Nil: Nil,
    Cons: Cons,
    step: step,
    nil: nil,
    cons: cons,
    NonEmptyList: NonEmptyList,
    toList: toList,
    showStep: showStep,
    newtypeList: newtypeList,
    showList: showList,
    eqList: eqList,
    eq1List: eq1List,
    ordList: ordList,
    ord1List: ord1List,
    lazyList: lazyList,
    semigroupList: semigroupList,
    monoidList: monoidList,
    functorList: functorList,
    functorWithIndexList: functorWithIndexList,
    foldableList: foldableList,
    foldableWithIndexList: foldableWithIndexList,
    unfoldable1List: unfoldable1List,
    unfoldableList: unfoldableList,
    traversableList: traversableList,
    traversableWithIndexList: traversableWithIndexList,
    applyList: applyList,
    applicativeList: applicativeList,
    bindList: bindList,
    monadList: monadList,
    altList: altList,
    plusList: plusList,
    alternativeList: alternativeList,
    monadZeroList: monadZeroList,
    monadPlusList: monadPlusList,
    extendList: extendList,
    newtypeNonEmptyList: newtypeNonEmptyList,
    eqNonEmptyList: eqNonEmptyList,
    ordNonEmptyList: ordNonEmptyList,
    eq1NonEmptyList: eq1NonEmptyList,
    ord1NonEmptyList: ord1NonEmptyList,
    showNonEmptyList: showNonEmptyList,
    functorNonEmptyList: functorNonEmptyList,
    applyNonEmptyList: applyNonEmptyList,
    applicativeNonEmptyList: applicativeNonEmptyList,
    bindNonEmptyList: bindNonEmptyList,
    monadNonEmptyList: monadNonEmptyList,
    altNonEmptyList: altNonEmptyList,
    extendNonEmptyList: extendNonEmptyList,
    comonadNonEmptyList: comonadNonEmptyList,
    semigroupNonEmptyList: semigroupNonEmptyList,
    foldableNonEmptyList: foldableNonEmptyList,
    traversableNonEmptyList: traversableNonEmptyList,
    unfoldable1NonEmptyList: unfoldable1NonEmptyList,
    functorWithIndexNonEmptyList: functorWithIndexNonEmptyList,
    foldableWithIndexNonEmptyList: foldableWithIndexNonEmptyList,
    traversableWithIndexNonEmptyList: traversableWithIndexNonEmptyList
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Comonad/index.js":"hfPua","../Control.Extend/index.js":"kAltv","../Control.Lazy/index.js":"chn7k","../Control.Monad/index.js":"alCn2","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.FoldableWithIndex/index.js":"b0hJn","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.FunctorWithIndex/index.js":"9mTwC","../Data.Lazy/index.js":"520Le","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.NonEmpty/index.js":"4pAZZ","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Semiring/index.js":"39btI","../Data.Show/index.js":"b6tNW","../Data.Traversable/index.js":"i5Kon","../Data.TraversableWithIndex/index.js":"bLveW","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk","../Data.Unfoldable1/index.js":"Daf7x"}],"dbOf7":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Alternate = function(x) {
    return x;
};
var showAlternate = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(Alternate " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupAlternate = function(dictAlt) {
    return new Data_Semigroup.Semigroup(function(v) {
        return function(v1) {
            return Control_Alt.alt(dictAlt)(v)(v1);
        };
    });
};
var plusAlternate = function(dictPlus) {
    return dictPlus;
};
var ordAlternate = function(dictOrd) {
    return dictOrd;
};
var ord1Alternate = function(dictOrd1) {
    return dictOrd1;
};
var newtypeAlternate = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monoidAlternate = function(dictPlus) {
    return new Data_Monoid.Monoid(function() {
        return semigroupAlternate(dictPlus.Alt0());
    }, Control_Plus.empty(dictPlus));
};
var monadAlternate = function(dictMonad) {
    return dictMonad;
};
var functorAlternate = function(dictFunctor) {
    return dictFunctor;
};
var extendAlternate = function(dictExtend) {
    return dictExtend;
};
var eqAlternate = function(dictEq) {
    return dictEq;
};
var eq1Alternate = function(dictEq1) {
    return dictEq1;
};
var comonadAlternate = function(dictComonad) {
    return dictComonad;
};
var boundedAlternate = function(dictBounded) {
    return dictBounded;
};
var bindAlternate = function(dictBind) {
    return dictBind;
};
var applyAlternate = function(dictApply) {
    return dictApply;
};
var applicativeAlternate = function(dictApplicative) {
    return dictApplicative;
};
var alternativeAlternate = function(dictAlternative) {
    return dictAlternative;
};
var altAlternate = function(dictAlt) {
    return dictAlt;
};
module.exports = {
    Alternate: Alternate,
    newtypeAlternate: newtypeAlternate,
    eqAlternate: eqAlternate,
    eq1Alternate: eq1Alternate,
    ordAlternate: ordAlternate,
    ord1Alternate: ord1Alternate,
    boundedAlternate: boundedAlternate,
    functorAlternate: functorAlternate,
    applyAlternate: applyAlternate,
    applicativeAlternate: applicativeAlternate,
    altAlternate: altAlternate,
    plusAlternate: plusAlternate,
    alternativeAlternate: alternativeAlternate,
    bindAlternate: bindAlternate,
    monadAlternate: monadAlternate,
    extendAlternate: extendAlternate,
    comonadAlternate: comonadAlternate,
    showAlternate: showAlternate,
    semigroupAlternate: semigroupAlternate,
    monoidAlternate: monoidAlternate
};

},{"../Control.Alt/index.js":"82RIG","../Control.Plus/index.js":"5lCU5","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW"}],"dMFfc":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var OrdBox = function() {
    function OrdBox1(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    OrdBox1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new OrdBox1(value0, value1, value2);
            };
        };
    };
    return OrdBox1;
}();
var unOrdBox = function(v) {
    return v.value2;
};
var mkOrdBox = function(dictOrd) {
    return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
};
var eqOrdBox = new Data_Eq.Eq(function(v) {
    return function(v1) {
        return v.value0(v.value2)(v1.value2);
    };
});
var ordOrdBox = new Data_Ord.Ord(function() {
    return eqOrdBox;
}, function(v) {
    return function(v1) {
        return v.value1(v.value2)(v1.value2);
    };
});
module.exports = {
    mkOrdBox: mkOrdBox,
    unOrdBox: unOrdBox,
    eqOrdBox: eqOrdBox,
    ordOrdBox: ordOrdBox
};

},{"../Data.Eq/index.js":"c3b8F","../Data.Ord/index.js":"f14nh"}],"eONdi":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType/index.js");
var DOM_HTML_Indexed_CrossOriginValue = require("../DOM.HTML.Indexed.CrossOriginValue/index.js");
var DOM_HTML_Indexed_DirValue = require("../DOM.HTML.Indexed.DirValue/index.js");
var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod/index.js");
var DOM_HTML_Indexed_InputAcceptType = require("../DOM.HTML.Indexed.InputAcceptType/index.js");
var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");
var DOM_HTML_Indexed_KindValue = require("../DOM.HTML.Indexed.KindValue/index.js");
var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType/index.js");
var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType/index.js");
var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff/index.js");
var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType/index.js");
var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue/index.js");
var DOM_HTML_Indexed_ScopeValue = require("../DOM.HTML.Indexed.ScopeValue/index.js");
var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue/index.js");
var DOM_HTML_Indexed_WrapValue = require("../DOM.HTML.Indexed.WrapValue/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");
var Halogen_VDom = require("../Halogen.VDom/index.js");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");
var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");
var Web_HTML_Common = require("../Web.HTML.Common/index.js");
var IsProp = function(toPropValue) {
    this.toPropValue = toPropValue;
};
var HTML = function(x) {
    return x;
};
var widget = function($18) {
    return HTML(Halogen_VDom_Types.Widget.create($18));
};
var toPropValue = function(dict) {
    return dict.toPropValue;
};
var text = function($19) {
    return HTML(Halogen_VDom_Types.Text.create($19));
};
var ref = function(f) {
    return Halogen_VDom_DOM_Prop.Ref.create(function($20) {
        return f(function(v) {
            if (v instanceof Halogen_VDom_DOM_Prop.Created) return new Data_Maybe.Just(v.value0);
            if (v instanceof Halogen_VDom_DOM_Prop.Removed) return Data_Maybe.Nothing.value;
            throw new Error("Failed pattern match at Halogen.HTML.Core (line 103, column 21 - line 105, column 23): " + [
                v.constructor.name
            ]);
        }($20));
    });
};
var prop = function(dictIsProp) {
    return function(v) {
        var $21 = Halogen_VDom_DOM_Prop.Property.create(v);
        var $22 = toPropValue(dictIsProp);
        return function($23) {
            return $21($22($23));
        };
    };
};
var newtypeHTML = new Data_Newtype.Newtype(function() {
    return undefined;
});
var renderWidget = function(f) {
    return function(g) {
        return function(v) {
            return Halogen_VDom_Types.renderWidget(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_Input.functorInput)(f))))(function() {
                var $24 = Data_Newtype.un()(HTML);
                return function($25) {
                    return $24(g($25));
                };
            }())(v);
        };
    };
};
var keyed = function(ns) {
    return function(name) {
        return function(props) {
            return function(children) {
                return new Halogen_VDom_Types.Keyed(ns, name, props, children);
            };
        };
    };
};
var isPropWrapValue = new IsProp(function($26) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_WrapValue.renderWrapValue($26));
});
var isPropString = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
var isPropStepValue = new IsProp(function($27) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_StepValue.renderStepValue($27));
});
var isPropScopeValue = new IsProp(function($28) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ScopeValue.renderScopeValue($28));
});
var isPropPreloadValue = new IsProp(function($29) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_PreloadValue.renderPreloadValue($29));
});
var isPropOrderedListType = new IsProp(function($30) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OrderedListType.renderOrderedListType($30));
});
var isPropOnOff = new IsProp(function($31) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OnOff.renderOnOff($31));
});
var isPropNumber = new IsProp(Halogen_VDom_DOM_Prop.propFromNumber);
var isPropMenuitemType = new IsProp(function($32) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuitemType.renderMenuitemType($32));
});
var isPropMenuType = new IsProp(function($33) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuType.renderMenuType($33));
});
var isPropMediaType = new IsProp(function() {
    var $34 = Data_Newtype.unwrap();
    return function($35) {
        return Halogen_VDom_DOM_Prop.propFromString($34($35));
    };
}());
var isPropKindValue = new IsProp(function($36) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_KindValue.renderKindValue($36));
});
var isPropInt = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
var isPropInputType = new IsProp(function($37) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($37));
});
var isPropInputAcceptType = new IsProp(function($38) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputAcceptType.renderInputAcceptType($38));
});
var isPropFormMethod = new IsProp(function($39) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_FormMethod.renderFormMethod($39));
});
var isPropDirValue = new IsProp(function($40) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_DirValue.renderDirValue($40));
});
var isPropCrossOriginValue = new IsProp(function($41) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_CrossOriginValue.renderCrossOriginValue($41));
});
var isPropButtonType = new IsProp(function($42) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($42));
});
var isPropBoolean = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
var handler = Halogen_VDom_DOM_Prop.Handler.create;
var element = function(ns) {
    return function(name) {
        return function(props) {
            return function(children) {
                return new Halogen_VDom_Types.Elem(ns, name, props, children);
            };
        };
    };
};
var bifunctorHTML = new Data_Bifunctor.Bifunctor(function(f) {
    return function(g) {
        return function(v) {
            return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_Input.functorInput)(g))))(f)(v);
        };
    };
});
var functorHTML = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorHTML));
var attr = function(ns) {
    return function(v) {
        return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
    };
};
module.exports = {
    HTML: HTML,
    renderWidget: renderWidget,
    widget: widget,
    text: text,
    element: element,
    keyed: keyed,
    prop: prop,
    attr: attr,
    handler: handler,
    ref: ref,
    IsProp: IsProp,
    toPropValue: toPropValue,
    newtypeHTML: newtypeHTML,
    bifunctorHTML: bifunctorHTML,
    functorHTML: functorHTML,
    isPropString: isPropString,
    isPropInt: isPropInt,
    isPropNumber: isPropNumber,
    isPropBoolean: isPropBoolean,
    isPropMediaType: isPropMediaType,
    isPropButtonType: isPropButtonType,
    isPropCrossOriginValue: isPropCrossOriginValue,
    isPropDirValue: isPropDirValue,
    isPropFormMethod: isPropFormMethod,
    isPropInputType: isPropInputType,
    isPropKindValue: isPropKindValue,
    isPropMenuitemType: isPropMenuitemType,
    isPropMenuType: isPropMenuType,
    isPropOnOff: isPropOnOff,
    isPropOrderedListType: isPropOrderedListType,
    isPropPreloadValue: isPropPreloadValue,
    isPropScopeValue: isPropScopeValue,
    isPropStepValue: isPropStepValue,
    isPropWrapValue: isPropWrapValue,
    isPropInputAcceptType: isPropInputAcceptType,
    ElemName: Halogen_VDom.ElemName,
    Namespace: Halogen_VDom.Namespace,
    Attribute: Halogen_VDom_DOM_Prop.Attribute,
    Handler: Halogen_VDom_DOM_Prop.Handler,
    Property: Halogen_VDom_DOM_Prop.Property,
    Ref: Halogen_VDom_DOM_Prop.Ref,
    AttrName: Web_HTML_Common.AttrName,
    ClassName: Web_HTML_Common.ClassName,
    PropName: Web_HTML_Common.PropName
};

},{"../DOM.HTML.Indexed.ButtonType/index.js":"2Mzrm","../DOM.HTML.Indexed.CrossOriginValue/index.js":"02o9S","../DOM.HTML.Indexed.DirValue/index.js":"lIMmb","../DOM.HTML.Indexed.FormMethod/index.js":"3Xcxc","../DOM.HTML.Indexed.InputAcceptType/index.js":"bcXXX","../DOM.HTML.Indexed.InputType/index.js":"dMvgQ","../DOM.HTML.Indexed.KindValue/index.js":"8a1pI","../DOM.HTML.Indexed.MenuType/index.js":"8aBrQ","../DOM.HTML.Indexed.MenuitemType/index.js":"1EFVs","../DOM.HTML.Indexed.OnOff/index.js":"dmnzS","../DOM.HTML.Indexed.OrderedListType/index.js":"6oXe5","../DOM.HTML.Indexed.PreloadValue/index.js":"1r4GT","../DOM.HTML.Indexed.ScopeValue/index.js":"kBa8s","../DOM.HTML.Indexed.StepValue/index.js":"lnNLc","../DOM.HTML.Indexed.WrapValue/index.js":"gJoug","../Data.Bifunctor/index.js":"4aJ07","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Newtype/index.js":"czJbt","../Halogen.Query.Input/index.js":"cBedG","../Halogen.VDom/index.js":"d6FX7","../Halogen.VDom.DOM.Prop/index.js":"lN1qa","../Halogen.VDom.Types/index.js":"1EH1q","../Web.HTML.Common/index.js":"aewmj"}],"2Mzrm":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var ButtonButton = function() {
    function ButtonButton1() {
    }
    ButtonButton1.value = new ButtonButton1();
    return ButtonButton1;
}();
var ButtonSubmit = function() {
    function ButtonSubmit1() {
    }
    ButtonSubmit1.value = new ButtonSubmit1();
    return ButtonSubmit1;
}();
var ButtonReset = function() {
    function ButtonReset1() {
    }
    ButtonReset1.value = new ButtonReset1();
    return ButtonReset1;
}();
var renderButtonType = function(v) {
    if (v instanceof ButtonButton) return "button";
    if (v instanceof ButtonSubmit) return "submit";
    if (v instanceof ButtonReset) return "reset";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType (line 9, column 20 - line 12, column 25): " + [
        v.constructor.name
    ]);
};
module.exports = {
    ButtonButton: ButtonButton,
    ButtonSubmit: ButtonSubmit,
    ButtonReset: ButtonReset,
    renderButtonType: renderButtonType
};

},{}],"02o9S":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Anonymous = function() {
    function Anonymous1() {
    }
    Anonymous1.value = new Anonymous1();
    return Anonymous1;
}();
var UseCredentials = function() {
    function UseCredentials1() {
    }
    UseCredentials1.value = new UseCredentials1();
    return UseCredentials1;
}();
var renderCrossOriginValue = function(v) {
    if (v instanceof Anonymous) return "anonymous";
    if (v instanceof UseCredentials) return "use-credentials";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.CrossOriginValue (line 8, column 26 - line 10, column 38): " + [
        v.constructor.name
    ]);
};
module.exports = {
    Anonymous: Anonymous,
    UseCredentials: UseCredentials,
    renderCrossOriginValue: renderCrossOriginValue
};

},{}],"lIMmb":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var DirLTR = function() {
    function DirLTR1() {
    }
    DirLTR1.value = new DirLTR1();
    return DirLTR1;
}();
var DirRTL = function() {
    function DirRTL1() {
    }
    DirRTL1.value = new DirRTL1();
    return DirRTL1;
}();
var DirAuto = function() {
    function DirAuto1() {
    }
    DirAuto1.value = new DirAuto1();
    return DirAuto1;
}();
var renderDirValue = function(v) {
    if (v instanceof DirLTR) return "ltr";
    if (v instanceof DirRTL) return "rtl";
    if (v instanceof DirAuto) return "auto";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.DirValue (line 9, column 18 - line 12, column 20): " + [
        v.constructor.name
    ]);
};
module.exports = {
    DirLTR: DirLTR,
    DirRTL: DirRTL,
    DirAuto: DirAuto,
    renderDirValue: renderDirValue
};

},{}],"3Xcxc":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var POST = function() {
    function POST1() {
    }
    POST1.value = new POST1();
    return POST1;
}();
var GET = function() {
    function GET1() {
    }
    GET1.value = new GET1();
    return GET1;
}();
var renderFormMethod = function(v) {
    if (v instanceof POST) return "post";
    if (v instanceof GET) return "get";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.FormMethod (line 8, column 20 - line 10, column 15): " + [
        v.constructor.name
    ]);
};
module.exports = {
    POST: POST,
    GET: GET,
    renderFormMethod: renderFormMethod
};

},{}],"bcXXX":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Functor = require("../Data.Functor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var AcceptMediaType = function() {
    function AcceptMediaType1(value0) {
        this.value0 = value0;
    }
    AcceptMediaType1.create = function(value0) {
        return new AcceptMediaType1(value0);
    };
    return AcceptMediaType1;
}();
var AcceptFileExtension = function() {
    function AcceptFileExtension1(value0) {
        this.value0 = value0;
    }
    AcceptFileExtension1.create = function(value0) {
        return new AcceptFileExtension1(value0);
    };
    return AcceptFileExtension1;
}();
var InputAcceptType = function(x) {
    return x;
};
var semigroupInputAcceptType = new Data_Semigroup.Semigroup(function(v) {
    return function(v1) {
        return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(v1);
    };
});
var renderInputAcceptTypeAtom = function(v) {
    if (v instanceof AcceptMediaType) return v.value0;
    if (v instanceof AcceptFileExtension) return v.value0;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputAcceptType (line 28, column 29 - line 30, column 33): " + [
        v.constructor.name
    ]);
};
var renderInputAcceptType = function(v) {
    return Data_String_Common.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(renderInputAcceptTypeAtom)(v));
};
var mediaType = function(mt) {
    return [
        new AcceptMediaType(mt)
    ];
};
var extension = function(ext) {
    return [
        new AcceptFileExtension(ext)
    ];
};
module.exports = {
    InputAcceptType: InputAcceptType,
    mediaType: mediaType,
    extension: extension,
    AcceptMediaType: AcceptMediaType,
    AcceptFileExtension: AcceptFileExtension,
    renderInputAcceptType: renderInputAcceptType,
    renderInputAcceptTypeAtom: renderInputAcceptTypeAtom,
    semigroupInputAcceptType: semigroupInputAcceptType
};

},{"../Data.Functor/index.js":"iy1jO","../Data.Semigroup/index.js":"4sNah","../Data.String.Common/index.js":"kcO4K"}],"kcO4K":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var $$null = function(s) {
    return s === "";
};
var localeCompare = $foreign["_localeCompare"](Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
    "null": $$null,
    localeCompare: localeCompare,
    replace: $foreign.replace,
    replaceAll: $foreign.replaceAll,
    split: $foreign.split,
    toLower: $foreign.toLower,
    toUpper: $foreign.toUpper,
    trim: $foreign.trim,
    joinWith: $foreign.joinWith
};

},{"./foreign.js":"8aln0","../Data.Ordering/index.js":"lEtyd"}],"8aln0":[function(require,module,exports) {
"use strict";
exports._localeCompare = function(lt) {
    return function(eq) {
        return function(gt) {
            return function(s1) {
                return function(s2) {
                    var result = s1.localeCompare(s2);
                    return result < 0 ? lt : result > 0 ? gt : eq;
                };
            };
        };
    };
};
exports.replace = function(s1) {
    return function(s2) {
        return function(s3) {
            return s3.replace(s1, s2);
        };
    };
};
exports.replaceAll = function(s1) {
    return function(s2) {
        return function(s3) {
            return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
        };
    };
};
exports.split = function(sep) {
    return function(s) {
        return s.split(sep);
    };
};
exports.toLower = function(s) {
    return s.toLowerCase();
};
exports.toUpper = function(s) {
    return s.toUpperCase();
};
exports.trim = function(s) {
    return s.trim();
};
exports.joinWith = function(s) {
    return function(xs) {
        return xs.join(s);
    };
};

},{}],"dMvgQ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var InputButton = function() {
    function InputButton1() {
    }
    InputButton1.value = new InputButton1();
    return InputButton1;
}();
var InputCheckbox = function() {
    function InputCheckbox1() {
    }
    InputCheckbox1.value = new InputCheckbox1();
    return InputCheckbox1;
}();
var InputColor = function() {
    function InputColor1() {
    }
    InputColor1.value = new InputColor1();
    return InputColor1;
}();
var InputDate = function() {
    function InputDate1() {
    }
    InputDate1.value = new InputDate1();
    return InputDate1;
}();
var InputDatetimeLocal = function() {
    function InputDatetimeLocal1() {
    }
    InputDatetimeLocal1.value = new InputDatetimeLocal1();
    return InputDatetimeLocal1;
}();
var InputEmail = function() {
    function InputEmail1() {
    }
    InputEmail1.value = new InputEmail1();
    return InputEmail1;
}();
var InputFile = function() {
    function InputFile1() {
    }
    InputFile1.value = new InputFile1();
    return InputFile1;
}();
var InputHidden = function() {
    function InputHidden1() {
    }
    InputHidden1.value = new InputHidden1();
    return InputHidden1;
}();
var InputImage = function() {
    function InputImage1() {
    }
    InputImage1.value = new InputImage1();
    return InputImage1;
}();
var InputMonth = function() {
    function InputMonth1() {
    }
    InputMonth1.value = new InputMonth1();
    return InputMonth1;
}();
var InputNumber = function() {
    function InputNumber1() {
    }
    InputNumber1.value = new InputNumber1();
    return InputNumber1;
}();
var InputPassword = function() {
    function InputPassword1() {
    }
    InputPassword1.value = new InputPassword1();
    return InputPassword1;
}();
var InputRadio = function() {
    function InputRadio1() {
    }
    InputRadio1.value = new InputRadio1();
    return InputRadio1;
}();
var InputRange = function() {
    function InputRange1() {
    }
    InputRange1.value = new InputRange1();
    return InputRange1;
}();
var InputReset = function() {
    function InputReset1() {
    }
    InputReset1.value = new InputReset1();
    return InputReset1;
}();
var InputSearch = function() {
    function InputSearch1() {
    }
    InputSearch1.value = new InputSearch1();
    return InputSearch1;
}();
var InputSubmit = function() {
    function InputSubmit1() {
    }
    InputSubmit1.value = new InputSubmit1();
    return InputSubmit1;
}();
var InputTel = function() {
    function InputTel1() {
    }
    InputTel1.value = new InputTel1();
    return InputTel1;
}();
var InputText = function() {
    function InputText1() {
    }
    InputText1.value = new InputText1();
    return InputText1;
}();
var InputTime = function() {
    function InputTime1() {
    }
    InputTime1.value = new InputTime1();
    return InputTime1;
}();
var InputUrl = function() {
    function InputUrl1() {
    }
    InputUrl1.value = new InputUrl1();
    return InputUrl1;
}();
var InputWeek = function() {
    function InputWeek1() {
    }
    InputWeek1.value = new InputWeek1();
    return InputWeek1;
}();
var renderInputType = function(v) {
    if (v instanceof InputButton) return "button";
    if (v instanceof InputCheckbox) return "checkbox";
    if (v instanceof InputColor) return "color";
    if (v instanceof InputDate) return "date";
    if (v instanceof InputDatetimeLocal) return "datetime-local";
    if (v instanceof InputEmail) return "email";
    if (v instanceof InputFile) return "file";
    if (v instanceof InputHidden) return "hidden";
    if (v instanceof InputImage) return "image";
    if (v instanceof InputMonth) return "month";
    if (v instanceof InputNumber) return "number";
    if (v instanceof InputPassword) return "password";
    if (v instanceof InputRadio) return "radio";
    if (v instanceof InputRange) return "range";
    if (v instanceof InputReset) return "reset";
    if (v instanceof InputSearch) return "search";
    if (v instanceof InputSubmit) return "submit";
    if (v instanceof InputTel) return "tel";
    if (v instanceof InputText) return "text";
    if (v instanceof InputTime) return "time";
    if (v instanceof InputUrl) return "url";
    if (v instanceof InputWeek) return "week";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 28, column 19 - line 50, column 22): " + [
        v.constructor.name
    ]);
};
module.exports = {
    InputButton: InputButton,
    InputCheckbox: InputCheckbox,
    InputColor: InputColor,
    InputDate: InputDate,
    InputDatetimeLocal: InputDatetimeLocal,
    InputEmail: InputEmail,
    InputFile: InputFile,
    InputHidden: InputHidden,
    InputImage: InputImage,
    InputMonth: InputMonth,
    InputNumber: InputNumber,
    InputPassword: InputPassword,
    InputRadio: InputRadio,
    InputRange: InputRange,
    InputReset: InputReset,
    InputSearch: InputSearch,
    InputSubmit: InputSubmit,
    InputTel: InputTel,
    InputText: InputText,
    InputTime: InputTime,
    InputUrl: InputUrl,
    InputWeek: InputWeek,
    renderInputType: renderInputType
};

},{}],"8a1pI":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var KindSubtitles = function() {
    function KindSubtitles1() {
    }
    KindSubtitles1.value = new KindSubtitles1();
    return KindSubtitles1;
}();
var KindCaptions = function() {
    function KindCaptions1() {
    }
    KindCaptions1.value = new KindCaptions1();
    return KindCaptions1;
}();
var KindDescriptions = function() {
    function KindDescriptions1() {
    }
    KindDescriptions1.value = new KindDescriptions1();
    return KindDescriptions1;
}();
var KindChapters = function() {
    function KindChapters1() {
    }
    KindChapters1.value = new KindChapters1();
    return KindChapters1;
}();
var KindMetadata = function() {
    function KindMetadata1() {
    }
    KindMetadata1.value = new KindMetadata1();
    return KindMetadata1;
}();
var renderKindValue = function(v) {
    if (v instanceof KindSubtitles) return "subtitles";
    if (v instanceof KindCaptions) return "captions";
    if (v instanceof KindDescriptions) return "descriptions";
    if (v instanceof KindChapters) return "chapters";
    if (v instanceof KindMetadata) return "metadata";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.KindValue (line 11, column 19 - line 16, column 29): " + [
        v.constructor.name
    ]);
};
module.exports = {
    KindSubtitles: KindSubtitles,
    KindCaptions: KindCaptions,
    KindDescriptions: KindDescriptions,
    KindChapters: KindChapters,
    KindMetadata: KindMetadata,
    renderKindValue: renderKindValue
};

},{}],"8aBrQ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var MenuList = function() {
    function MenuList1() {
    }
    MenuList1.value = new MenuList1();
    return MenuList1;
}();
var MenuContext = function() {
    function MenuContext1() {
    }
    MenuContext1.value = new MenuContext1();
    return MenuContext1;
}();
var MenuToolbar = function() {
    function MenuToolbar1() {
    }
    MenuToolbar1.value = new MenuToolbar1();
    return MenuToolbar1;
}();
var renderMenuType = function(v) {
    if (v instanceof MenuList) return "list";
    if (v instanceof MenuContext) return "context";
    if (v instanceof MenuToolbar) return "toolbar";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.MenuType (line 9, column 18 - line 12, column 27): " + [
        v.constructor.name
    ]);
};
module.exports = {
    MenuList: MenuList,
    MenuContext: MenuContext,
    MenuToolbar: MenuToolbar,
    renderMenuType: renderMenuType
};

},{}],"1EFVs":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var MenuitemCommand = function() {
    function MenuitemCommand1() {
    }
    MenuitemCommand1.value = new MenuitemCommand1();
    return MenuitemCommand1;
}();
var MenuitemCheckbox = function() {
    function MenuitemCheckbox1() {
    }
    MenuitemCheckbox1.value = new MenuitemCheckbox1();
    return MenuitemCheckbox1;
}();
var MenuitemRadio = function() {
    function MenuitemRadio1() {
    }
    MenuitemRadio1.value = new MenuitemRadio1();
    return MenuitemRadio1;
}();
var renderMenuitemType = function(v) {
    if (v instanceof MenuitemCommand) return "command";
    if (v instanceof MenuitemCheckbox) return "checkbox";
    if (v instanceof MenuitemRadio) return "radio";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.MenuitemType (line 9, column 22 - line 12, column 27): " + [
        v.constructor.name
    ]);
};
module.exports = {
    MenuitemCommand: MenuitemCommand,
    MenuitemCheckbox: MenuitemCheckbox,
    MenuitemRadio: MenuitemRadio,
    renderMenuitemType: renderMenuitemType
};

},{}],"dmnzS":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var On = function() {
    function On1() {
    }
    On1.value = new On1();
    return On1;
}();
var Off = function() {
    function Off1() {
    }
    Off1.value = new Off1();
    return Off1;
}();
var renderOnOff = function(v) {
    if (v instanceof On) return "on";
    if (v instanceof Off) return "off";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.OnOff (line 8, column 15 - line 10, column 15): " + [
        v.constructor.name
    ]);
};
module.exports = {
    On: On,
    Off: Off,
    renderOnOff: renderOnOff
};

},{}],"6oXe5":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Uppercase = function() {
    function Uppercase1() {
    }
    Uppercase1.value = new Uppercase1();
    return Uppercase1;
}();
var Lowercase = function() {
    function Lowercase1() {
    }
    Lowercase1.value = new Lowercase1();
    return Lowercase1;
}();
var NumeralDecimal = function() {
    function NumeralDecimal1() {
    }
    NumeralDecimal1.value = new NumeralDecimal1();
    return NumeralDecimal1;
}();
var NumeralRoman = function() {
    function NumeralRoman1(value0) {
        this.value0 = value0;
    }
    NumeralRoman1.create = function(value0) {
        return new NumeralRoman1(value0);
    };
    return NumeralRoman1;
}();
var OrderedListNumeric = function() {
    function OrderedListNumeric1(value0) {
        this.value0 = value0;
    }
    OrderedListNumeric1.create = function(value0) {
        return new OrderedListNumeric1(value0);
    };
    return OrderedListNumeric1;
}();
var OrderedListAlphabetic = function() {
    function OrderedListAlphabetic1(value0) {
        this.value0 = value0;
    }
    OrderedListAlphabetic1.create = function(value0) {
        return new OrderedListAlphabetic1(value0);
    };
    return OrderedListAlphabetic1;
}();
var renderOrderedListType = function(v) {
    if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralDecimal) return "1";
    if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Lowercase) return "i";
    if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Uppercase) return "I";
    if (v instanceof OrderedListAlphabetic && v.value0 instanceof Lowercase) return "a";
    if (v instanceof OrderedListAlphabetic && v.value0 instanceof Uppercase) return "A";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.OrderedListType (line 16, column 25 - line 21, column 41): " + [
        v.constructor.name
    ]);
};
module.exports = {
    Uppercase: Uppercase,
    Lowercase: Lowercase,
    NumeralDecimal: NumeralDecimal,
    NumeralRoman: NumeralRoman,
    OrderedListNumeric: OrderedListNumeric,
    OrderedListAlphabetic: OrderedListAlphabetic,
    renderOrderedListType: renderOrderedListType
};

},{}],"1r4GT":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var PreloadNone = function() {
    function PreloadNone1() {
    }
    PreloadNone1.value = new PreloadNone1();
    return PreloadNone1;
}();
var PreloadAuto = function() {
    function PreloadAuto1() {
    }
    PreloadAuto1.value = new PreloadAuto1();
    return PreloadAuto1;
}();
var PreloadMetadata = function() {
    function PreloadMetadata1() {
    }
    PreloadMetadata1.value = new PreloadMetadata1();
    return PreloadMetadata1;
}();
var renderPreloadValue = function(v) {
    if (v instanceof PreloadNone) return "none";
    if (v instanceof PreloadAuto) return "auto";
    if (v instanceof PreloadMetadata) return "metadata";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.PreloadValue (line 9, column 22 - line 12, column 32): " + [
        v.constructor.name
    ]);
};
module.exports = {
    PreloadNone: PreloadNone,
    PreloadAuto: PreloadAuto,
    PreloadMetadata: PreloadMetadata,
    renderPreloadValue: renderPreloadValue
};

},{}],"kBa8s":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var ScopeRow = function() {
    function ScopeRow1() {
    }
    ScopeRow1.value = new ScopeRow1();
    return ScopeRow1;
}();
var ScopeCol = function() {
    function ScopeCol1() {
    }
    ScopeCol1.value = new ScopeCol1();
    return ScopeCol1;
}();
var ScopeRowGroup = function() {
    function ScopeRowGroup1() {
    }
    ScopeRowGroup1.value = new ScopeRowGroup1();
    return ScopeRowGroup1;
}();
var ScopeColGroup = function() {
    function ScopeColGroup1() {
    }
    ScopeColGroup1.value = new ScopeColGroup1();
    return ScopeColGroup1;
}();
var ScopeAuto = function() {
    function ScopeAuto1() {
    }
    ScopeAuto1.value = new ScopeAuto1();
    return ScopeAuto1;
}();
var renderScopeValue = function(v) {
    if (v instanceof ScopeRow) return "row";
    if (v instanceof ScopeCol) return "col";
    if (v instanceof ScopeRowGroup) return "rowgroup";
    if (v instanceof ScopeColGroup) return "colgroup";
    if (v instanceof ScopeAuto) return "auto";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.ScopeValue (line 11, column 20 - line 16, column 22): " + [
        v.constructor.name
    ]);
};
module.exports = {
    ScopeRow: ScopeRow,
    ScopeCol: ScopeCol,
    ScopeRowGroup: ScopeRowGroup,
    ScopeColGroup: ScopeColGroup,
    ScopeAuto: ScopeAuto,
    renderScopeValue: renderScopeValue
};

},{}],"lnNLc":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Show = require("../Data.Show/index.js");
var Any = function() {
    function Any1() {
    }
    Any1.value = new Any1();
    return Any1;
}();
var Step = function() {
    function Step1(value0) {
        this.value0 = value0;
    }
    Step1.create = function(value0) {
        return new Step1(value0);
    };
    return Step1;
}();
var renderStepValue = function(v) {
    if (v instanceof Any) return "any";
    if (v instanceof Step) return Data_Show.show(Data_Show.showNumber)(v.value0);
    throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue (line 10, column 19 - line 12, column 19): " + [
        v.constructor.name
    ]);
};
module.exports = {
    Any: Any,
    Step: Step,
    renderStepValue: renderStepValue
};

},{"../Data.Show/index.js":"b6tNW"}],"gJoug":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Hard = function() {
    function Hard1() {
    }
    Hard1.value = new Hard1();
    return Hard1;
}();
var Soft = function() {
    function Soft1() {
    }
    Soft1.value = new Soft1();
    return Soft1;
}();
var renderWrapValue = function(v) {
    if (v instanceof Hard) return "hard";
    if (v instanceof Soft) return "soft";
    throw new Error("Failed pattern match at DOM.HTML.Indexed.WrapValue (line 8, column 19 - line 10, column 17): " + [
        v.constructor.name
    ]);
};
module.exports = {
    Hard: Hard,
    Soft: Soft,
    renderWrapValue: renderWrapValue
};

},{}],"cBedG":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var RefLabel = function(x) {
    return x;
};
var RefUpdate = function() {
    function RefUpdate1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    RefUpdate1.create = function(value0) {
        return function(value1) {
            return new RefUpdate1(value0, value1);
        };
    };
    return RefUpdate1;
}();
var Action = function() {
    function Action1(value0) {
        this.value0 = value0;
    }
    Action1.create = function(value0) {
        return new Action1(value0);
    };
    return Action1;
}();
var ordRefLabel = Data_Ord.ordString;
var newtypeRefLabel = new Data_Newtype.Newtype(function() {
    return undefined;
});
var functorInput = new Data_Functor.Functor(function(f) {
    return function(m) {
        if (m instanceof RefUpdate) return new RefUpdate(m.value0, m.value1);
        if (m instanceof Action) return new Action(f(m.value0));
        throw new Error("Failed pattern match at Halogen.Query.Input (line 19, column 1 - line 19, column 46): " + [
            m.constructor.name
        ]);
    };
});
var eqRefLabel = Data_Eq.eqString;
module.exports = {
    RefLabel: RefLabel,
    RefUpdate: RefUpdate,
    Action: Action,
    newtypeRefLabel: newtypeRefLabel,
    eqRefLabel: eqRefLabel,
    ordRefLabel: ordRefLabel,
    functorInput: functorInput
};

},{"../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh"}],"d6FX7":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Halogen_VDom_DOM = require("../Halogen.VDom.DOM/index.js");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");
var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");
module.exports = {
    VDomSpec: Halogen_VDom_DOM.VDomSpec,
    buildVDom: Halogen_VDom_DOM.buildVDom,
    Step: Halogen_VDom_Machine.Step,
    extract: Halogen_VDom_Machine.extract,
    halt: Halogen_VDom_Machine.halt,
    mkStep: Halogen_VDom_Machine.mkStep,
    step: Halogen_VDom_Machine.step,
    unStep: Halogen_VDom_Machine.unStep,
    ElemName: Halogen_VDom_Types.ElemName,
    Namespace: Halogen_VDom_Types.Namespace,
    Elem: Halogen_VDom_Types.Elem,
    Grafted: Halogen_VDom_Types.Grafted,
    Keyed: Halogen_VDom_Types.Keyed,
    Text: Halogen_VDom_Types.Text,
    Widget: Halogen_VDom_Types.Widget,
    runGraft: Halogen_VDom_Types.runGraft
};

},{"../Halogen.VDom.DOM/index.js":"39yIR","../Halogen.VDom.Machine/index.js":"dgwzB","../Halogen.VDom.Types/index.js":"1EH1q"}],"39yIR":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Array = require("../Data.Array/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");
var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");
var Halogen_VDom_Util = require("../Halogen.VDom.Util/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var VDomSpec = function(x) {
    return x;
};
var haltWidget = function(v) {
    return Halogen_VDom_Machine.halt(v.widget);
};
var patchWidget = function(state, vdom) {
    if (vdom instanceof Halogen_VDom_Types.Grafted) return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));
    if (vdom instanceof Halogen_VDom_Types.Widget) {
        var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);
        var res$prime = Halogen_VDom_Machine.unStep(function(v) {
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {
                build: state.build,
                widget: res
            }, patchWidget, haltWidget));
        })(res);
        return res$prime;
    }
    haltWidget(state);
    return state.build(vdom);
};
var haltText = function(v) {
    var parent = Halogen_VDom_Util.parentNode(v.node);
    return Halogen_VDom_Util.removeChild(v.node, parent);
};
var patchText = function(state, vdom) {
    if (vdom instanceof Halogen_VDom_Types.Grafted) return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));
    if (vdom instanceof Halogen_VDom_Types.Text) {
        if (state.value === vdom.value0) return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));
        if (Data_Boolean.otherwise) {
            var nextState = {
                build: state.build,
                node: state.node,
                value: vdom.value0
            };
            Halogen_VDom_Util.setTextContent(vdom.value0, state.node);
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));
        }
    }
    haltText(state);
    return state.build(vdom);
};
var haltKeyed = function(v) {
    var parent = Halogen_VDom_Util.parentNode(v.node);
    Halogen_VDom_Util.removeChild(v.node, parent);
    Halogen_VDom_Util.forInE(v.children, function(v1, s) {
        return Halogen_VDom_Machine.halt(s);
    });
    return Halogen_VDom_Machine.halt(v.attrs);
};
var haltElem = function(v) {
    var parent = Halogen_VDom_Util.parentNode(v.node);
    Halogen_VDom_Util.removeChild(v.node, parent);
    Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);
    return Halogen_VDom_Machine.halt(v.attrs);
};
var eqElemSpec = function(ns1, v, ns2, v1) {
    var $58 = v === v1;
    if ($58) {
        if (ns1 instanceof Data_Maybe.Just && ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0) return true;
        if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) return true;
        return false;
    }
    return false;
};
var patchElem = function(state, vdom) {
    if (vdom instanceof Halogen_VDom_Types.Grafted) return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));
    if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
        var v = Data_Array.length(vdom.value3);
        var v1 = Data_Array.length(state.children);
        if (v1 === 0 && v === 0) {
            var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
            var nextState = {
                build: state.build,
                node: state.node,
                attrs: attrs2,
                ns: vdom.value0,
                name: vdom.value1,
                children: state.children
            };
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
        }
        var onThis = function(v2, s) {
            return Halogen_VDom_Machine.halt(s);
        };
        var onThese = function(ix, s, v2) {
            var res = Halogen_VDom_Machine.step(s, v2);
            Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
            return res;
        };
        var onThat = function(ix, v2) {
            var res = state.build(v2);
            Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
            return res;
        };
        var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);
        var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
        var nextState = {
            build: state.build,
            node: state.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: children2
        };
        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
    }
    haltElem(state);
    return state.build(vdom);
};
var patchKeyed = function(state, vdom) {
    if (vdom instanceof Halogen_VDom_Types.Grafted) return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));
    if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
        var v = Data_Array.length(vdom.value3);
        if (state.length === 0 && v === 0) {
            var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
            var nextState = {
                build: state.build,
                node: state.node,
                attrs: attrs2,
                ns: vdom.value0,
                name: vdom.value1,
                children: state.children,
                length: 0
            };
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
        }
        var onThis = function(v2, s) {
            return Halogen_VDom_Machine.halt(s);
        };
        var onThese = function(v2, ix$prime, s, v3) {
            var res = Halogen_VDom_Machine.step(s, v3.value1);
            Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);
            return res;
        };
        var onThat = function(v2, ix, v3) {
            var res = state.build(v3.value1);
            Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
            return res;
        };
        var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);
        var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
        var nextState = {
            build: state.build,
            node: state.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: children2,
            length: v
        };
        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
    }
    haltKeyed(state);
    return state.build(vdom);
};
var buildWidget = function(v, build, w) {
    var res = v.buildWidget(v)(w);
    var res$prime = Halogen_VDom_Machine.unStep(function(v1) {
        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {
            build: build,
            widget: res
        }, patchWidget, haltWidget));
    })(res);
    return res$prime;
};
var buildText = function(v, build, s) {
    var node = Halogen_VDom_Util.createTextNode(s, v.document);
    var state = {
        build: build,
        node: node,
        value: s
    };
    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));
};
var buildKeyed = function(v, build, ns1, name1, as1, ch1) {
    var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
    var node = Web_DOM_Element.toNode(el);
    var onChild = function(v1, ix, v2) {
        var res = build(v2.value1);
        Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
        return res;
    };
    var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state = {
        build: build,
        node: node,
        attrs: attrs,
        ns: ns1,
        name: name1,
        children: children,
        length: Data_Array.length(ch1)
    };
    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));
};
var buildElem = function(v, build, ns1, name1, as1, ch1) {
    var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
    var node = Web_DOM_Element.toNode(el);
    var onChild = function(ix, child) {
        var res = build(child);
        Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
        return res;
    };
    var children = Halogen_VDom_Util.forE(ch1, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state = {
        build: build,
        node: node,
        attrs: attrs,
        ns: ns1,
        name: name1,
        children: children
    };
    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));
};
var buildVDom = function(spec) {
    var build = function(v) {
        if (v instanceof Halogen_VDom_Types.Text) return buildText(spec, build, v.value0);
        if (v instanceof Halogen_VDom_Types.Elem) return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);
        if (v instanceof Halogen_VDom_Types.Keyed) return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);
        if (v instanceof Halogen_VDom_Types.Widget) return buildWidget(spec, build, v.value0);
        if (v instanceof Halogen_VDom_Types.Grafted) return build(Halogen_VDom_Types.runGraft(v.value0));
        throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [
            v.constructor.name
        ]);
    };
    return build;
};
module.exports = {
    VDomSpec: VDomSpec,
    buildVDom: buildVDom,
    buildText: buildText,
    buildElem: buildElem,
    buildKeyed: buildKeyed,
    buildWidget: buildWidget
};

},{"../Data.Array/index.js":"7x0bj","../Data.Boolean/index.js":"lv1qw","../Data.Maybe/index.js":"ePH81","../Data.Nullable/index.js":"5SdGN","../Data.Tuple/index.js":"eOBbM","../Halogen.VDom.Machine/index.js":"dgwzB","../Halogen.VDom.Types/index.js":"1EH1q","../Halogen.VDom.Util/index.js":"4ny50","../Web.DOM.Element/index.js":"blGqA"}],"7x0bj":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Data_Array_ST = require("../Data.Array.ST/index.js");
var Data_Array_ST_Iterator = require("../Data.Array.ST.Iterator/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var zipWithA = function(dictApplicative) {
    return function(f) {
        return function(xs) {
            return function(ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAtIndices = function(dictFoldable) {
    return function(us) {
        return function(xs) {
            return Data_Array_ST.withArray(function(res) {
                return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function(v) {
                    return Data_Array_ST.poke(v.value0)(v.value1)(res);
                })(us);
            })(xs)();
        };
    };
};
var updateAt = $foreign["_updateAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeIndex = function(dictPartial) {
    return $foreign.unsafeIndexImpl;
};
var uncons = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function(x) {
    return function(xs) {
        return new Data_Maybe.Just({
            head: x,
            tail: xs
        });
    };
});
var toUnfoldable = function(dictUnfoldable) {
    return function(xs) {
        var len = $foreign.length(xs);
        var f = function(i) {
            if (i < len) return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
            if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
            throw new Error("Failed pattern match at Data.Array (line 158, column 3 - line 160, column 26): " + [
                i.constructor.name
            ]);
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
    };
};
var take = function(n) {
    return function(xs) {
        var $67 = n < 1;
        if ($67) return [];
        return $foreign.slice(0)(n)(xs);
    };
};
var tail = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function(v) {
    return function(xs) {
        return new Data_Maybe.Just(xs);
    };
});
var splitAt = function(i) {
    return function(xs) {
        if (i <= 0) return {
            before: [],
            after: xs
        };
        return {
            before: $foreign.slice(0)(i)(xs),
            after: $foreign.slice(i)($foreign.length(xs))(xs)
        };
    };
};
var sortBy = function(comp) {
    return $foreign.sortByImpl(comp)(function(v) {
        if (v instanceof Data_Ordering.GT) return 1;
        if (v instanceof Data_Ordering.EQ) return 0;
        if (v instanceof Data_Ordering.LT) return -1;
        throw new Error("Failed pattern match at Data.Array (line 831, column 31 - line 834, column 11): " + [
            v.constructor.name
        ]);
    });
};
var sortWith = function(dictOrd) {
    return function(f) {
        return sortBy(Data_Ord.comparing(dictOrd)(f));
    };
};
var sort = function(dictOrd) {
    return function(xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var snoc = function(xs) {
    return function(x) {
        return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();
    };
};
var singleton = function(a) {
    return [
        a
    ];
};
var $$null = function(xs) {
    return $foreign.length(xs) === 0;
};
var nubByEq = function(eq) {
    return function(xs) {
        return (function __do() {
            var arr = Data_Array_ST["new"]();
            Control_Monad_ST_Internal.foreach(xs)(function(x) {
                return function __do1() {
                    var e = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function() {
                        var $99 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
                        var $100 = $foreign.any(function(v) {
                            return eq(v)(x);
                        });
                        return function($101) {
                            return $99($100($101));
                        };
                    }())(Data_Array_ST.unsafeFreeze(arr))();
                    return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(e)(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(x)(arr)))();
                };
            })();
            return Data_Array_ST.unsafeFreeze(arr)();
        })();
    };
};
var nubEq = function(dictEq) {
    return nubByEq(Data_Eq.eq(dictEq));
};
var modifyAtIndices = function(dictFoldable) {
    return function(is) {
        return function(f) {
            return function(xs) {
                return Data_Array_ST.withArray(function(res) {
                    return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function(i) {
                        return Data_Array_ST.modify(i)(f)(res);
                    })(is);
                })(xs)();
            };
        };
    };
};
var mapWithIndex = function(f) {
    return function(xs) {
        return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
    };
};
var intersperse = function(a) {
    return function(arr) {
        var v = $foreign.length(arr);
        if (v < 2) return arr;
        if (Data_Boolean.otherwise) return Data_Array_ST.run(function() {
            var unsafeGetElem = function(idx) {
                return unsafeIndex()(arr)(idx);
            };
            return function __do() {
                var out = Data_Array_ST["new"]();
                Data_Array_ST.push(unsafeGetElem(0))(out)();
                Control_Monad_ST_Internal["for"](1)(v)(function(idx) {
                    return function __do1() {
                        Data_Array_ST.push(a)(out)();
                        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(unsafeGetElem(idx))(out))();
                    };
                })();
                return out;
            };
        }());
        throw new Error("Failed pattern match at Data.Array (line 613, column 21 - line 622, column 19): " + [
            v.constructor.name
        ]);
    };
};
var intercalate = function(dictMonoid) {
    return Data_Foldable.intercalate(Data_Foldable.foldableArray)(dictMonoid);
};
var insertAt = $foreign["_insertAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function(xs) {
    if ($$null(xs)) return Data_Maybe.Nothing.value;
    if (Data_Boolean.otherwise) return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
    throw new Error("Failed pattern match at Data.Array (line 340, column 1 - line 340, column 45): " + [
        xs.constructor.name
    ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var last = function(xs) {
    return index(xs)($foreign.length(xs) - 1 | 0);
};
var unsnoc = function(xs) {
    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function(v) {
        return function(v1) {
            return {
                init: v,
                last: v1
            };
        };
    })(init(xs)))(last(xs));
};
var modifyAt = function(i) {
    return function(f) {
        return function(xs) {
            var go = function(x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
var span = function(p) {
    return function(arr) {
        var go = function($copy_i) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i) {
                var v = index(arr)(i);
                if (v instanceof Data_Maybe.Just) {
                    var $74 = p(v.value0);
                    if ($74) {
                        $copy_i = i + 1 | 0;
                        return;
                    }
                    $tco_done = true;
                    return new Data_Maybe.Just(i);
                }
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                }
                throw new Error("Failed pattern match at Data.Array (line 966, column 5 - line 968, column 25): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($copy_i);
            return $tco_result;
        };
        var breakIndex = go(0);
        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) return {
            init: [],
            rest: arr
        };
        if (breakIndex instanceof Data_Maybe.Just) return {
            init: $foreign.slice(0)(breakIndex.value0)(arr),
            rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
        };
        if (breakIndex instanceof Data_Maybe.Nothing) return {
            init: arr,
            rest: []
        };
        throw new Error("Failed pattern match at Data.Array (line 953, column 3 - line 959, column 30): " + [
            breakIndex.constructor.name
        ]);
    };
};
var takeWhile = function(p) {
    return function(xs) {
        return span(p)(xs).init;
    };
};
var unzip = function(xs) {
    return (function __do() {
        var fsts = Data_Array_ST["new"]();
        var snds = Data_Array_ST["new"]();
        var iter = Data_Array_ST_Iterator.iterator(function(v) {
            return index(xs)(v);
        })();
        Data_Array_ST_Iterator.iterate(iter)(function(v) {
            return function __do1() {
                Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v.value0)(fsts))();
                return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v.value1)(snds))();
            };
        })();
        var fsts$prime = Data_Array_ST.unsafeFreeze(fsts)();
        var snds$prime = Data_Array_ST.unsafeFreeze(snds)();
        return new Data_Tuple.Tuple(fsts$prime, snds$prime);
    })();
};
var head = function(xs) {
    return index(xs)(0);
};
var nubBy = function(comp) {
    return function(xs) {
        var indexedAndSorted = sortBy(function(x) {
            return function(y) {
                return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));
            };
        })(mapWithIndex(Data_Tuple.Tuple.create)(xs));
        var v = head(indexedAndSorted);
        if (v instanceof Data_Maybe.Nothing) return [];
        if (v instanceof Data_Maybe.Just) return Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(sortWith(Data_Ord.ordInt)(Data_Tuple.fst)(function __do() {
            var result = Data_Array_ST.unsafeThaw(singleton(v.value0))();
            Control_Monad_ST_Internal.foreach(indexedAndSorted)(function(v1) {
                return function __do1() {
                    var lst = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function() {
                        var $102 = function(dictPartial) {
                            var $104 = Data_Maybe.fromJust();
                            return function($105) {
                                return $104(last($105));
                            };
                        }();
                        return function($103) {
                            return Data_Tuple.snd($102($103));
                        };
                    }())(Data_Array_ST.unsafeFreeze(result))();
                    return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(Data_Eq.notEq(Data_Ordering.eqOrdering)(comp(lst)(v1.value1))(Data_Ordering.EQ.value))(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v1)(result)))();
                };
            })();
            return Data_Array_ST.unsafeFreeze(result)();
        }()));
        throw new Error("Failed pattern match at Data.Array (line 1050, column 17 - line 1058, column 29): " + [
            v.constructor.name
        ]);
    };
};
var nub = function(dictOrd) {
    return nubBy(Data_Ord.compare(dictOrd));
};
var groupBy = function(op) {
    return function(xs) {
        return (function __do() {
            var result = Data_Array_ST["new"]();
            var iter = Data_Array_ST_Iterator.iterator(function(v) {
                return index(xs)(v);
            })();
            Data_Array_ST_Iterator.iterate(iter)(function(x) {
                return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(function __do1() {
                    var sub = Data_Array_ST["new"]();
                    Data_Array_ST.push(x)(sub)();
                    Data_Array_ST_Iterator.pushWhile(op(x))(iter)(sub)();
                    var grp = Data_Array_ST.unsafeFreeze(sub)();
                    return Data_Array_ST.push(grp)(result)();
                });
            })();
            return Data_Array_ST.unsafeFreeze(result)();
        })();
    };
};
var groupAllBy = function(cmp) {
    var $106 = groupBy(function(x) {
        return function(y) {
            return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.EQ.value);
        };
    });
    var $107 = sortBy(cmp);
    return function($108) {
        return $106($107($108));
    };
};
var groupAll = function(dictOrd) {
    return groupAllBy(Data_Ord.compare(dictOrd));
};
var group$prime = function(dictWarn) {
    return function(dictOrd) {
        return groupAll(dictOrd);
    };
};
var group = function(dictEq) {
    return function(xs) {
        return groupBy(Data_Eq.eq(dictEq))(xs);
    };
};
var fromFoldable = function(dictFoldable) {
    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};
var foldr = Data_Foldable.foldr(Data_Foldable.foldableArray);
var foldl = Data_Foldable.foldl(Data_Foldable.foldableArray);
var foldRecM = function(dictMonadRec) {
    return function(f) {
        return function(b) {
            return function(array) {
                var go = function(res) {
                    return function(i) {
                        if (i >= $foreign.length(array)) return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(res));
                        if (Data_Boolean.otherwise) return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(f(res)(unsafeIndex()(array)(i)))(function(res$prime) {
                            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
                                a: res$prime,
                                b: i + 1 | 0
                            }));
                        });
                        throw new Error("Failed pattern match at Data.Array (line 1269, column 3 - line 1273, column 42): " + [
                            res.constructor.name,
                            i.constructor.name
                        ]);
                    };
                };
                return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(b)(0);
            };
        };
    };
};
var foldMap = function(dictMonoid) {
    return Data_Foldable.foldMap(Data_Foldable.foldableArray)(dictMonoid);
};
var foldM = function(dictMonad) {
    return function(f) {
        return function(b) {
            return $foreign.unconsImpl(function(v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(b);
            })(function(a) {
                return function(as) {
                    return Control_Bind.bind(dictMonad.Bind1())(f(b)(a))(function(b$prime) {
                        return foldM(dictMonad)(f)(b$prime)(as);
                    });
                };
            });
        };
    };
};
var fold = function(dictMonoid) {
    return Data_Foldable.fold(Data_Foldable.foldableArray)(dictMonoid);
};
var findMap = $foreign.findMapImpl(Data_Maybe.Nothing.value)(Data_Maybe.isJust);
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function(cmp) {
    return function(x) {
        return function(ys) {
            var i = Data_Maybe.maybe(0)(function(v) {
                return v + 1 | 0;
            })(findLastIndex(function(y) {
                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
            })(ys));
            return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
        };
    };
};
var insert = function(dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function(eq) {
    return function(xs) {
        return function(ys) {
            return $foreign.filter(function(x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function(dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var find = function(f) {
    return function(xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(unsafeIndex()(xs))(findIndex(f)(xs));
    };
};
var elemLastIndex = function(dictEq) {
    return function(x) {
        return findLastIndex(function(v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function(dictEq) {
    return function(x) {
        return findIndex(function(v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var notElem = function(dictEq) {
    return function(a) {
        return function(arr) {
            return Data_Maybe.isNothing(elemIndex(dictEq)(a)(arr));
        };
    };
};
var elem = function(dictEq) {
    return function(a) {
        return function(arr) {
            return Data_Maybe.isJust(elemIndex(dictEq)(a)(arr));
        };
    };
};
var dropWhile = function(p) {
    return function(xs) {
        return span(p)(xs).rest;
    };
};
var dropEnd = function(n) {
    return function(xs) {
        return take($foreign.length(xs) - n | 0)(xs);
    };
};
var drop = function(n) {
    return function(xs) {
        var $89 = n < 1;
        if ($89) return xs;
        return $foreign.slice(n)($foreign.length(xs))(xs);
    };
};
var takeEnd = function(n) {
    return function(xs) {
        return drop($foreign.length(xs) - n | 0)(xs);
    };
};
var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2.length === 0) return [];
            return Data_Maybe.maybe(v2)(function(i) {
                return Data_Maybe.fromJust()(deleteAt(i)(v2));
            })(findIndex(v(v1))(v2));
        };
    };
};
var unionBy = function(eq) {
    return function(xs) {
        return function(ys) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(foldl(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
        };
    };
};
var union = function(dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var $$delete = function(dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function(dictEq) {
    return foldr($$delete(dictEq));
};
var cons = function(x) {
    return function(xs) {
        return Data_Semigroup.append(Data_Semigroup.semigroupArray)([
            x
        ])(xs);
    };
};
var some = function(dictAlternative) {
    return function(dictLazy) {
        return function(v) {
            return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(cons)(v))(Control_Lazy.defer(dictLazy)(function(v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function(dictAlternative) {
    return function(dictLazy) {
        return function(v) {
            return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([]));
        };
    };
};
var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
var mapMaybe = function(f) {
    return concatMap(function() {
        var $109 = Data_Maybe.maybe([])(singleton);
        return function($110) {
            return $109(f($110));
        };
    }());
};
var filterA = function(dictApplicative) {
    return function(p) {
        var $111 = Data_Functor.map(dictApplicative.Apply0().Functor0())(mapMaybe(function(v) {
            if (v.value1) return new Data_Maybe.Just(v.value0);
            return Data_Maybe.Nothing.value;
        }));
        var $112 = Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function(x) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(x))(p(x));
        });
        return function($113) {
            return $111($112($113));
        };
    };
};
var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
var alterAt = function(i) {
    return function(f) {
        return function(xs) {
            var go = function(x) {
                var v = f(x);
                if (v instanceof Data_Maybe.Nothing) return deleteAt(i)(xs);
                if (v instanceof Data_Maybe.Just) return updateAt(i)(v.value0)(xs);
                throw new Error("Failed pattern match at Data.Array (line 591, column 10 - line 593, column 32): " + [
                    v.constructor.name
                ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
module.exports = {
    fromFoldable: fromFoldable,
    toUnfoldable: toUnfoldable,
    singleton: singleton,
    some: some,
    many: many,
    "null": $$null,
    cons: cons,
    snoc: snoc,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elem: elem,
    notElem: notElem,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    find: find,
    findMap: findMap,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    updateAtIndices: updateAtIndices,
    modifyAt: modifyAt,
    modifyAtIndices: modifyAtIndices,
    alterAt: alterAt,
    intersperse: intersperse,
    concatMap: concatMap,
    splitAt: splitAt,
    filterA: filterA,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    mapWithIndex: mapWithIndex,
    foldl: foldl,
    foldr: foldr,
    foldMap: foldMap,
    fold: fold,
    intercalate: intercalate,
    sort: sort,
    sortBy: sortBy,
    sortWith: sortWith,
    take: take,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    drop: drop,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    group: group,
    groupAll: groupAll,
    "group'": group$prime,
    groupBy: groupBy,
    groupAllBy: groupAllBy,
    nub: nub,
    nubEq: nubEq,
    nubBy: nubBy,
    nubByEq: nubByEq,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM,
    foldRecM: foldRecM,
    unsafeIndex: unsafeIndex,
    range: $foreign.range,
    replicate: $foreign.replicate,
    length: $foreign.length,
    reverse: $foreign.reverse,
    concat: $foreign.concat,
    filter: $foreign.filter,
    partition: $foreign.partition,
    scanl: $foreign.scanl,
    scanr: $foreign.scanr,
    slice: $foreign.slice,
    zipWith: $foreign.zipWith,
    any: $foreign.any,
    all: $foreign.all
};

},{"./foreign.js":"dqzTa","../Control.Alt/index.js":"82RIG","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Lazy/index.js":"chn7k","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Monad.ST.Internal/index.js":"gv8IF","../Data.Array.ST/index.js":"4GJp8","../Data.Array.ST.Iterator/index.js":"eQ1Ji","../Data.Boolean/index.js":"lv1qw","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Traversable/index.js":"i5Kon","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk"}],"dqzTa":[function(require,module,exports) {
"use strict";
//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------
exports.range = function(start) {
    return function(end) {
        var step = start > end ? -1 : 1;
        var result = new Array(step * (end - start) + 1);
        var i = start, n = 0;
        while(i !== end){
            result[n++] = i;
            i += step;
        }
        result[n] = i;
        return result;
    };
};
var replicateFill = function(count) {
    return function(value) {
        if (count < 1) return [];
        var result = new Array(count);
        return result.fill(value);
    };
};
var replicatePolyfill = function(count) {
    return function(value) {
        var result = [];
        var n = 0;
        for(var i = 0; i < count; i++)result[n++] = value;
        return result;
    };
};
// In browsers that have Array.prototype.fill we use it, as it's faster.
exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
exports.fromFoldableImpl = (function() {
    function Cons(head, tail) {
        this.head = head;
        this.tail = tail;
    }
    var emptyList = {
    };
    function curryCons(head) {
        return function(tail) {
            return new Cons(head, tail);
        };
    }
    function listToArray(list) {
        var result = [];
        var count = 0;
        var xs = list;
        while(xs !== emptyList){
            result[count++] = xs.head;
            xs = xs.tail;
        }
        return result;
    }
    return function(foldr) {
        return function(xs) {
            return listToArray(foldr(curryCons)(emptyList)(xs));
        };
    };
})();
//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------
exports.length = function(xs) {
    return xs.length;
};
//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------
exports.unconsImpl = function(empty) {
    return function(next) {
        return function(xs) {
            return xs.length === 0 ? empty({
            }) : next(xs[0])(xs.slice(1));
        };
    };
};
//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------
exports.indexImpl = function(just) {
    return function(nothing) {
        return function(xs) {
            return function(i) {
                return i < 0 || i >= xs.length ? nothing : just(xs[i]);
            };
        };
    };
};
exports.findMapImpl = function(nothing) {
    return function(isJust) {
        return function(f) {
            return function(xs) {
                for(var i = 0; i < xs.length; i++){
                    var result = f(xs[i]);
                    if (isJust(result)) return result;
                }
                return nothing;
            };
        };
    };
};
exports.findIndexImpl = function(just) {
    return function(nothing) {
        return function(f) {
            return function(xs) {
                for(var i = 0, l = xs.length; i < l; i++){
                    if (f(xs[i])) return just(i);
                }
                return nothing;
            };
        };
    };
};
exports.findLastIndexImpl = function(just) {
    return function(nothing) {
        return function(f) {
            return function(xs) {
                for(var i = xs.length - 1; i >= 0; i--){
                    if (f(xs[i])) return just(i);
                }
                return nothing;
            };
        };
    };
};
exports._insertAt = function(just) {
    return function(nothing) {
        return function(i) {
            return function(a) {
                return function(l) {
                    if (i < 0 || i > l.length) return nothing;
                    var l1 = l.slice();
                    l1.splice(i, 0, a);
                    return just(l1);
                };
            };
        };
    };
};
exports._deleteAt = function(just) {
    return function(nothing) {
        return function(i) {
            return function(l) {
                if (i < 0 || i >= l.length) return nothing;
                var l1 = l.slice();
                l1.splice(i, 1);
                return just(l1);
            };
        };
    };
};
exports._updateAt = function(just) {
    return function(nothing) {
        return function(i) {
            return function(a) {
                return function(l) {
                    if (i < 0 || i >= l.length) return nothing;
                    var l1 = l.slice();
                    l1[i] = a;
                    return just(l1);
                };
            };
        };
    };
};
//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------
exports.reverse = function(l) {
    return l.slice().reverse();
};
exports.concat = function(xss) {
    if (xss.length <= 10000) // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
    var result = [];
    for(var i = 0, l = xss.length; i < l; i++){
        var xs = xss[i];
        for(var j = 0, m = xs.length; j < m; j++)result.push(xs[j]);
    }
    return result;
};
exports.filter = function(f) {
    return function(xs) {
        return xs.filter(f);
    };
};
exports.partition = function(f) {
    return function(xs) {
        var yes = [];
        var no = [];
        for(var i = 0; i < xs.length; i++){
            var x = xs[i];
            if (f(x)) yes.push(x);
            else no.push(x);
        }
        return {
            yes: yes,
            no: no
        };
    };
};
exports.scanl = function(f) {
    return function(b) {
        return function(xs) {
            var len = xs.length;
            var acc = b;
            var out = new Array(len);
            for(var i = 0; i < len; i++){
                acc = f(acc)(xs[i]);
                out[i] = acc;
            }
            return out;
        };
    };
};
exports.scanr = function(f) {
    return function(b) {
        return function(xs) {
            var len = xs.length;
            var acc = b;
            var out = new Array(len);
            for(var i = len - 1; i >= 0; i--){
                acc = f(xs[i])(acc);
                out[i] = acc;
            }
            return out;
        };
    };
};
//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------
exports.sortByImpl = (function() {
    function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
        var mid;
        var i;
        var j;
        var k;
        var x;
        var y;
        var c;
        mid = from + (to - from >> 1);
        if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
        if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);
        i = from;
        j = mid;
        k = from;
        while(i < mid && j < to){
            x = xs2[i];
            y = xs2[j];
            c = fromOrdering(compare(x)(y));
            if (c > 0) {
                xs1[k++] = y;
                ++j;
            } else {
                xs1[k++] = x;
                ++i;
            }
        }
        while(i < mid)xs1[k++] = xs2[i++];
        while(j < to)xs1[k++] = xs2[j++];
    }
    return function(compare) {
        return function(fromOrdering) {
            return function(xs) {
                var out;
                if (xs.length < 2) return xs;
                out = xs.slice(0);
                mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);
                return out;
            };
        };
    };
})();
//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------
exports.slice = function(s) {
    return function(e) {
        return function(l) {
            return l.slice(s, e);
        };
    };
};
//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------
exports.zipWith = function(f) {
    return function(xs) {
        return function(ys) {
            var l = xs.length < ys.length ? xs.length : ys.length;
            var result = new Array(l);
            for(var i = 0; i < l; i++)result[i] = f(xs[i])(ys[i]);
            return result;
        };
    };
};
//------------------------------------------------------------------------------
// Folding ---------------------------------------------------------------------
//------------------------------------------------------------------------------
exports.any = function(p) {
    return function(xs) {
        var len = xs.length;
        for(var i = 0; i < len; i++){
            if (p(xs[i])) return true;
        }
        return false;
    };
};
exports.all = function(p) {
    return function(xs) {
        var len = xs.length;
        for(var i = 0; i < len; i++){
            if (!p(xs[i])) return false;
        }
        return true;
    };
};
//------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------
exports.unsafeIndexImpl = function(xs) {
    return function(n) {
        return xs[n];
    };
};

},{}],"gv8IF":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var modify$prime = $foreign.modifyImpl;
var modify = function(f) {
    return modify$prime(function(s) {
        var s$prime = f(s);
        return {
            state: s$prime,
            value: s$prime
        };
    });
};
var functorST = new Data_Functor.Functor($foreign.map_);
var monadST = new Control_Monad.Monad(function() {
    return applicativeST;
}, function() {
    return bindST;
});
var bindST = new Control_Bind.Bind(function() {
    return applyST;
}, $foreign.bind_);
var applyST = new Control_Apply.Apply(function() {
    return functorST;
}, Control_Monad.ap(monadST));
var applicativeST = new Control_Applicative.Applicative(function() {
    return applyST;
}, $foreign.pure_);
var monadRecST = new Control_Monad_Rec_Class.MonadRec(function() {
    return monadST;
}, function(f) {
    return function(a) {
        var isLooping = function(v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) return true;
            return false;
        };
        var fromDone = function(v) {
            if (v instanceof Control_Monad_Rec_Class.Done) return v.value0;
            throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 69, column 32 - line 69, column 46): " + [
                v.constructor.name
            ]);
        };
        return Control_Bind.bind(bindST)(Control_Bind.bindFlipped(bindST)($foreign["new"])(f(a)))(function(r) {
            return Control_Bind.discard(Control_Bind.discardUnit)(bindST)($foreign["while"](Data_Functor.map(functorST)(isLooping)($foreign.read(r)))(Control_Bind.bind(bindST)($foreign.read(r))(function(v) {
                if (v instanceof Control_Monad_Rec_Class.Loop) return Control_Bind.bind(bindST)(f(v.value0))(function(e) {
                    return Data_Functor["void"](functorST)($foreign.write(e)(r));
                });
                if (v instanceof Control_Monad_Rec_Class.Done) return Control_Applicative.pure(applicativeST)(Data_Unit.unit);
                throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 61, column 18 - line 65, column 28): " + [
                    v.constructor.name
                ]);
            })))(function() {
                return Data_Functor.map(functorST)(fromDone)($foreign.read(r));
            });
        });
    };
});
module.exports = {
    "modify'": modify$prime,
    modify: modify,
    functorST: functorST,
    applyST: applyST,
    applicativeST: applicativeST,
    bindST: bindST,
    monadST: monadST,
    monadRecST: monadRecST,
    run: $foreign.run,
    "while": $foreign["while"],
    "for": $foreign["for"],
    foreach: $foreign.foreach,
    "new": $foreign["new"],
    read: $foreign.read,
    write: $foreign.write
};

},{"./foreign.js":"7Y8o2","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Control.Monad.Rec.Class/index.js":"dMFG0","../Data.Functor/index.js":"iy1jO","../Data.Unit/index.js":"d7oKp"}],"7Y8o2":[function(require,module,exports) {
"use strict";
exports.map_ = function(f) {
    return function(a) {
        return function() {
            return f(a());
        };
    };
};
exports.pure_ = function(a) {
    return function() {
        return a;
    };
};
exports.bind_ = function(a) {
    return function(f) {
        return function() {
            return f(a())();
        };
    };
};
exports.run = function(f) {
    return f();
};
exports["while"] = function(f) {
    return function(a) {
        return function() {
            while(f())a();
        };
    };
};
exports["for"] = function(lo) {
    return function(hi) {
        return function(f) {
            return function() {
                for(var i = lo; i < hi; i++)f(i)();
            };
        };
    };
};
exports.foreach = function(as) {
    return function(f) {
        return function() {
            for(var i = 0, l = as.length; i < l; i++)f(as[i])();
        };
    };
};
exports.new = function(val) {
    return function() {
        return {
            value: val
        };
    };
};
exports.read = function(ref) {
    return function() {
        return ref.value;
    };
};
exports.modifyImpl = function(f) {
    return function(ref) {
        return function() {
            var t = f(ref.value);
            ref.value = t.state;
            return t.value;
        };
    };
};
exports.write = function(a) {
    return function(ref) {
        return function() {
            return ref.value = a; // eslint-disable-line no-return-assign
        };
    };
};

},{}],"4GJp8":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var withArray = function(f) {
    return function(xs) {
        return function __do() {
            var result = $foreign.thaw(xs)();
            f(result)();
            return $foreign.unsafeFreeze(result)();
        };
    };
};
var unshift = function(a) {
    return $foreign.unshiftAll([
        a
    ]);
};
var sortBy = function(comp) {
    return $foreign.sortByImpl(comp)(function(v) {
        if (v instanceof Data_Ordering.GT) return 1;
        if (v instanceof Data_Ordering.EQ) return 0;
        if (v instanceof Data_Ordering.LT) return -1;
        throw new Error("Failed pattern match at Data.Array.ST (line 113, column 31 - line 116, column 11): " + [
            v.constructor.name
        ]);
    });
};
var sortWith = function(dictOrd) {
    return function(f) {
        return sortBy(Data_Ord.comparing(dictOrd)(f));
    };
};
var sort = function(dictOrd) {
    return sortBy(Data_Ord.compare(dictOrd));
};
var shift = $foreign.shiftImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var run = function(st) {
    return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(st)($foreign.unsafeFreeze)();
};
var push = function(a) {
    return $foreign.pushAll([
        a
    ]);
};
var pop = $foreign.popImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var modify = function(i) {
    return function(f) {
        return function(xs) {
            return function __do() {
                var entry = peek(i)(xs)();
                if (entry instanceof Data_Maybe.Just) return $foreign.poke(i)(f(entry.value0))(xs)();
                if (entry instanceof Data_Maybe.Nothing) return false;
                throw new Error("Failed pattern match at Data.Array.ST (line 198, column 3 - line 200, column 26): " + [
                    entry.constructor.name
                ]);
            };
        };
    };
};
var empty = function(dictWarn) {
    return $foreign["new"];
};
module.exports = {
    run: run,
    withArray: withArray,
    empty: empty,
    peek: peek,
    modify: modify,
    pop: pop,
    push: push,
    shift: shift,
    unshift: unshift,
    sort: sort,
    sortBy: sortBy,
    sortWith: sortWith,
    "new": $foreign["new"],
    poke: $foreign.poke,
    pushAll: $foreign.pushAll,
    unshiftAll: $foreign.unshiftAll,
    splice: $foreign.splice,
    freeze: $foreign.freeze,
    thaw: $foreign.thaw,
    unsafeFreeze: $foreign.unsafeFreeze,
    unsafeThaw: $foreign.unsafeThaw,
    toAssocArray: $foreign.toAssocArray
};

},{"./foreign.js":"iYfHP","../Control.Bind/index.js":"7Sory","../Control.Monad.ST.Internal/index.js":"gv8IF","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd"}],"iYfHP":[function(require,module,exports) {
"use strict";
exports["new"] = function() {
    return [];
};
exports.peekImpl = function(just) {
    return function(nothing) {
        return function(i) {
            return function(xs) {
                return function() {
                    return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
                };
            };
        };
    };
};
exports.poke = function(i) {
    return function(a) {
        return function(xs) {
            return function() {
                var ret = i >= 0 && i < xs.length;
                if (ret) xs[i] = a;
                return ret;
            };
        };
    };
};
exports.popImpl = function(just) {
    return function(nothing) {
        return function(xs) {
            return function() {
                return xs.length > 0 ? just(xs.pop()) : nothing;
            };
        };
    };
};
exports.pushAll = function(as) {
    return function(xs) {
        return function() {
            return xs.push.apply(xs, as);
        };
    };
};
exports.shiftImpl = function(just) {
    return function(nothing) {
        return function(xs) {
            return function() {
                return xs.length > 0 ? just(xs.shift()) : nothing;
            };
        };
    };
};
exports.unshiftAll = function(as) {
    return function(xs) {
        return function() {
            return xs.unshift.apply(xs, as);
        };
    };
};
exports.splice = function(i) {
    return function(howMany) {
        return function(bs) {
            return function(xs) {
                return function() {
                    return xs.splice.apply(xs, [
                        i,
                        howMany
                    ].concat(bs));
                };
            };
        };
    };
};
exports.unsafeFreeze = function(xs) {
    return function() {
        return xs;
    };
};
exports.unsafeThaw = function(xs) {
    return function() {
        return xs;
    };
};
function copyImpl(xs) {
    return function() {
        return xs.slice();
    };
}
exports.freeze = copyImpl;
exports.thaw = copyImpl;
exports.sortByImpl = (function() {
    function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
        var mid;
        var i;
        var j;
        var k;
        var x;
        var y;
        var c;
        mid = from + (to - from >> 1);
        if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
        if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);
        i = from;
        j = mid;
        k = from;
        while(i < mid && j < to){
            x = xs2[i];
            y = xs2[j];
            c = fromOrdering(compare(x)(y));
            if (c > 0) {
                xs1[k++] = y;
                ++j;
            } else {
                xs1[k++] = x;
                ++i;
            }
        }
        while(i < mid)xs1[k++] = xs2[i++];
        while(j < to)xs1[k++] = xs2[j++];
    }
    return function(compare) {
        return function(fromOrdering) {
            return function(xs) {
                return function() {
                    if (xs.length < 2) return xs;
                    mergeFromTo(compare, fromOrdering, xs, xs.slice(0), 0, xs.length);
                    return xs;
                };
            };
        };
    };
})();
exports.toAssocArray = function(xs) {
    return function() {
        var n = xs.length;
        var as = new Array(n);
        for(var i = 0; i < n; i++)as[i] = {
            value: xs[i],
            index: i
        };
        return as;
    };
};

},{}],"eQ1Ji":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Data_Array_ST = require("../Data.Array.ST/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Iterator = function() {
    function Iterator1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Iterator1.create = function(value0) {
        return function(value1) {
            return new Iterator1(value0, value1);
        };
    };
    return Iterator1;
}();
var peek = function(v) {
    return function __do() {
        var i = Control_Monad_ST_Internal.read(v.value1)();
        return v.value0(i);
    };
};
var next = function(v) {
    return function __do() {
        var i = Control_Monad_ST_Internal.read(v.value1)();
        Control_Monad_ST_Internal.modify(function(v1) {
            return v1 + 1 | 0;
        })(v.value1)();
        return v.value0(i);
    };
};
var pushWhile = function(p) {
    return function(iter) {
        return function(array) {
            return function __do() {
                var $$break = Control_Monad_ST_Internal["new"](false)();
                while(Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))())(function __do1() {
                    var mx = peek(iter)();
                    if (mx instanceof Data_Maybe.Just && p(mx.value0)) {
                        Data_Array_ST.push(mx.value0)(array)();
                        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(next(iter))();
                    }
                    return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
                })();
                return {
                };
            };
        };
    };
};
var pushAll = pushWhile(Data_Function["const"](true));
var iterator = function(f) {
    return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Iterator.create(f))(Control_Monad_ST_Internal["new"](0));
};
var iterate = function(iter) {
    return function(f) {
        return function __do() {
            var $$break = Control_Monad_ST_Internal["new"](false)();
            while(Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))())(function __do1() {
                var mx = next(iter)();
                if (mx instanceof Data_Maybe.Just) return f(mx.value0)();
                if (mx instanceof Data_Maybe.Nothing) return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
                throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [
                    mx.constructor.name
                ]);
            })();
            return {
            };
        };
    };
};
var exhausted = function() {
    var $13 = Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_Maybe.isNothing);
    return function($14) {
        return $13(peek($14));
    };
}();
module.exports = {
    iterator: iterator,
    iterate: iterate,
    next: next,
    peek: peek,
    exhausted: exhausted,
    pushWhile: pushWhile,
    pushAll: pushAll
};

},{"../Control.Monad.ST.Internal/index.js":"gv8IF","../Data.Array.ST/index.js":"4GJp8","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.Maybe/index.js":"ePH81"}],"dgwzB":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Step = function() {
    function Step1(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    Step1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new Step1(value0, value1, value2, value3);
                };
            };
        };
    };
    return Step1;
}();
var unStep = Unsafe_Coerce.unsafeCoerce;
var step = function(v, a) {
    return v.value2(v.value1, a);
};
var mkStep = Unsafe_Coerce.unsafeCoerce;
var halt = function(v) {
    return v.value3(v.value1);
};
var extract = unStep(function(v) {
    return v.value0;
});
module.exports = {
    Step: Step,
    mkStep: mkStep,
    unStep: unStep,
    extract: extract,
    step: step,
    halt: halt
};

},{"../Unsafe.Coerce/index.js":"6gO81"}],"1EH1q":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Namespace = function(x) {
    return x;
};
var ElemName = function(x) {
    return x;
};
var Text1 = function() {
    function Text2(value0) {
        this.value0 = value0;
    }
    Text2.create = function(value0) {
        return new Text2(value0);
    };
    return Text2;
}();
var Elem = function() {
    function Elem1(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    Elem1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new Elem1(value0, value1, value2, value3);
                };
            };
        };
    };
    return Elem1;
}();
var Keyed = function() {
    function Keyed1(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    Keyed1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new Keyed1(value0, value1, value2, value3);
                };
            };
        };
    };
    return Keyed1;
}();
var Widget = function() {
    function Widget1(value0) {
        this.value0 = value0;
    }
    Widget1.create = function(value0) {
        return new Widget1(value0);
    };
    return Widget1;
}();
var Grafted = function() {
    function Grafted1(value0) {
        this.value0 = value0;
    }
    Grafted1.create = function(value0) {
        return new Grafted1(value0);
    };
    return Grafted1;
}();
var Graft = function() {
    function Graft1(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    Graft1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new Graft1(value0, value1, value2);
            };
        };
    };
    return Graft1;
}();
var unGraft = function(f) {
    return function($55) {
        return f($55);
    };
};
var ordNamespace = Data_Ord.ordString;
var ordElemName = Data_Ord.ordString;
var newtypeNamespace = new Data_Newtype.Newtype(function() {
    return undefined;
});
var newtypeElemName = new Data_Newtype.Newtype(function() {
    return undefined;
});
var graft = Unsafe_Coerce.unsafeCoerce;
var functorGraft = new Data_Functor.Functor(function(g) {
    return unGraft(function(v) {
        return graft(new Graft(v.value0, function($56) {
            return g(v.value1($56));
        }, v.value2));
    });
});
var functorVDom = new Data_Functor.Functor(function(v) {
    return function(v1) {
        if (v1 instanceof Text1) return new Text1(v1.value0);
        if (v1 instanceof Grafted) return new Grafted(Data_Functor.map(functorGraft)(v)(v1.value0));
        return new Grafted(graft(new Graft(Control_Category.identity(Control_Category.categoryFn), v, v1)));
    };
});
var eqNamespace = Data_Eq.eqString;
var eqElemName = Data_Eq.eqString;
var bifunctorGraft = new Data_Bifunctor.Bifunctor(function(f) {
    return function(g) {
        return unGraft(function(v) {
            return graft(new Graft(function($57) {
                return f(v.value0($57));
            }, function($58) {
                return g(v.value1($58));
            }, v.value2));
        });
    };
});
var bifunctorVDom = new Data_Bifunctor.Bifunctor(function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Text1) return new Text1(v2.value0);
            if (v2 instanceof Grafted) return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v)(v1)(v2.value0));
            return new Grafted(graft(new Graft(v, v1, v2)));
        };
    };
});
var runGraft = unGraft(function(v) {
    var go = function(v2) {
        if (v2 instanceof Text1) return new Text1(v2.value0);
        if (v2 instanceof Elem) return new Elem(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));
        if (v2 instanceof Keyed) return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));
        if (v2 instanceof Widget) return new Widget(v.value1(v2.value0));
        if (v2 instanceof Grafted) return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
        throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [
            v2.constructor.name
        ]);
    };
    return go(v.value2);
});
var renderWidget = function(f) {
    return function(g) {
        return function(v) {
            if (v instanceof Text1) return new Text1(v.value0);
            if (v instanceof Elem) return new Elem(v.value0, v.value1, f(v.value2), Data_Functor.map(Data_Functor.functorArray)(renderWidget(f)(g))(v.value3));
            if (v instanceof Keyed) return new Keyed(v.value0, v.value1, f(v.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(renderWidget(f)(g)))(v.value3));
            if (v instanceof Widget) return g(v.value0);
            if (v instanceof Grafted) return renderWidget(f)(g)(runGraft(v.value0));
            throw new Error("Failed pattern match at Halogen.VDom.Types (line 48, column 20 - line 53, column 48): " + [
                v.constructor.name
            ]);
        };
    };
};
module.exports = {
    Text: Text1,
    Elem: Elem,
    Keyed: Keyed,
    Widget: Widget,
    Grafted: Grafted,
    renderWidget: renderWidget,
    Graft: Graft,
    graft: graft,
    unGraft: unGraft,
    runGraft: runGraft,
    ElemName: ElemName,
    Namespace: Namespace,
    functorVDom: functorVDom,
    bifunctorVDom: bifunctorVDom,
    functorGraft: functorGraft,
    bifunctorGraft: bifunctorGraft,
    newtypeElemName: newtypeElemName,
    eqElemName: eqElemName,
    ordElemName: ordElemName,
    newtypeNamespace: newtypeNamespace,
    eqNamespace: eqNamespace,
    ordNamespace: ordNamespace
};

},{"../Control.Category/index.js":"dfcPK","../Data.Bifunctor/index.js":"4aJ07","../Data.Eq/index.js":"c3b8F","../Data.Functor/index.js":"iy1jO","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Tuple/index.js":"eOBbM","../Unsafe.Coerce/index.js":"6gO81"}],"4ny50":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Foreign_Object_ST = require("../Foreign.Object.ST/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var unsafeLookup = $foreign.unsafeGetAny;
var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
var pokeMutMap = $foreign.unsafeSetAny;
var newMutMap = Foreign_Object_ST["new"];
var deleteMutMap = $foreign.unsafeDeleteAny;
module.exports = {
    newMutMap: newMutMap,
    pokeMutMap: pokeMutMap,
    deleteMutMap: deleteMutMap,
    unsafeFreeze: unsafeFreeze,
    unsafeLookup: unsafeLookup,
    unsafeGetAny: $foreign.unsafeGetAny,
    unsafeHasAny: $foreign.unsafeHasAny,
    unsafeSetAny: $foreign.unsafeSetAny,
    unsafeDeleteAny: $foreign.unsafeDeleteAny,
    forE: $foreign.forE,
    forEachE: $foreign.forEachE,
    forInE: $foreign.forInE,
    replicateE: $foreign.replicateE,
    diffWithIxE: $foreign.diffWithIxE,
    diffWithKeyAndIxE: $foreign.diffWithKeyAndIxE,
    strMapWithIxE: $foreign.strMapWithIxE,
    refEq: $foreign.refEq,
    createTextNode: $foreign.createTextNode,
    setTextContent: $foreign.setTextContent,
    createElement: $foreign.createElement,
    insertChildIx: $foreign.insertChildIx,
    removeChild: $foreign.removeChild,
    parentNode: $foreign.parentNode,
    setAttribute: $foreign.setAttribute,
    removeAttribute: $foreign.removeAttribute,
    hasAttribute: $foreign.hasAttribute,
    addEventListener: $foreign.addEventListener,
    removeEventListener: $foreign.removeEventListener,
    jsUndefined: $foreign.jsUndefined
};

},{"./foreign.js":"6ILLf","../Foreign.Object.ST/index.js":"7WhNb","../Unsafe.Coerce/index.js":"6gO81"}],"6ILLf":[function(require,module,exports) {
"use strict";
exports.unsafeGetAny = function(key, obj) {
    return obj[key];
};
exports.unsafeHasAny = function(key, obj) {
    return obj.hasOwnProperty(key);
};
exports.unsafeSetAny = function(key, val, obj) {
    obj[key] = val;
};
exports.unsafeDeleteAny = function(key, obj) {
    delete obj[key];
};
exports.forE = function(a, f) {
    var b = [];
    for(var i = 0; i < a.length; i++)b.push(f(i, a[i]));
    return b;
};
exports.forEachE = function(a, f) {
    for(var i = 0; i < a.length; i++)f(a[i]);
};
exports.forInE = function(o, f) {
    var ks = Object.keys(o);
    for(var i = 0; i < ks.length; i++){
        var k = ks[i];
        f(k, o[k]);
    }
};
exports.replicateE = function(n, f) {
    for(var i = 0; i < n; i++)f();
};
exports.diffWithIxE = function(a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i = 0;
    while(true){
        if (i < l1) {
            if (i < l2) a3.push(f1(i, a1[i], a2[i]));
            else f2(i, a1[i]);
        } else if (i < l2) a3.push(f3(i, a2[i]));
        else break;
        i++;
    }
    return a3;
};
exports.strMapWithIxE = function(as, fk, f) {
    var o = {
    };
    for(var i = 0; i < as.length; i++){
        var a = as[i];
        var k = fk(a);
        o[k] = f(k, i, a);
    }
    return o;
};
exports.diffWithKeyAndIxE = function(o1, as, fk, f1, f2, f3) {
    var o2 = {
    };
    for(var i = 0; i < as.length; i++){
        var a = as[i];
        var k = fk(a);
        if (o1.hasOwnProperty(k)) o2[k] = f1(k, i, o1[k], a);
        else o2[k] = f3(k, i, a);
    }
    for(var k in o1){
        if (k in o2) continue;
        f2(k, o1[k]);
    }
    return o2;
};
exports.refEq = function(a, b) {
    return a === b;
};
exports.createTextNode = function(s, doc) {
    return doc.createTextNode(s);
};
exports.setTextContent = function(s, n) {
    n.textContent = s;
};
exports.createElement = function(ns, name, doc) {
    if (ns != null) return doc.createElementNS(ns, name);
    else return doc.createElement(name);
};
exports.insertChildIx = function(i, a, b) {
    var n = b.childNodes.item(i) || null;
    if (n !== a) b.insertBefore(a, n);
};
exports.removeChild = function(a, b) {
    if (b && a.parentNode === b) b.removeChild(a);
};
exports.parentNode = function(a) {
    return a.parentNode;
};
exports.setAttribute = function(ns, attr, val, el) {
    if (ns != null) el.setAttributeNS(ns, attr, val);
    else el.setAttribute(attr, val);
};
exports.removeAttribute = function(ns, attr, el) {
    if (ns != null) el.removeAttributeNS(ns, attr);
    else el.removeAttribute(attr);
};
exports.hasAttribute = function(ns, attr, el) {
    if (ns != null) return el.hasAttributeNS(ns, attr);
    else return el.hasAttribute(attr);
};
exports.addEventListener = function(ev, listener, el) {
    el.addEventListener(ev, listener, false);
};
exports.removeEventListener = function(ev, listener, el) {
    el.removeEventListener(ev, listener, false);
};
exports.jsUndefined = void 0;

},{}],"7WhNb":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    peek: peek,
    "new": $foreign["new"],
    poke: $foreign.poke,
    "delete": $foreign["delete"]
};

},{"./foreign.js":"6WdaE","../Data.Maybe/index.js":"ePH81"}],"6WdaE":[function(require,module,exports) {
"use strict";
exports["new"] = function() {
    return {
    };
};
exports.peekImpl = function(just) {
    return function(nothing) {
        return function(k) {
            return function(m) {
                return function() {
                    return ({
                    }).hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
                };
            };
        };
    };
};
exports.poke = function(k) {
    return function(v) {
        return function(m) {
            return function() {
                m[k] = v;
                return m;
            };
        };
    };
};
exports["delete"] = function(k) {
    return function(m) {
        return function() {
            delete m[k];
            return m;
        };
    };
};

},{}],"blGqA":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Show = require("../Data.Show/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");
var Web_DOM_ShadowRoot = require("../Web.DOM.ShadowRoot/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var prefix = function($0) {
    return Data_Nullable.toMaybe($foreign["_prefix"]($0));
};
var namespaceURI = function($1) {
    return Data_Nullable.toMaybe($foreign["_namespaceURI"]($1));
};
var initToProps = function(init) {
    return {
        mode: Data_Show.show(Web_DOM_ShadowRoot.showShadowRootMode)(init.mode),
        delegatesFocus: init.delegatesFocus
    };
};
var getElementsByTagNameNS = function($2) {
    return $foreign["_getElementsByTagNameNS"](Data_Nullable.toNullable($2));
};
var getAttribute = function(attr) {
    var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    var $4 = $foreign["_getAttribute"](attr);
    return function($5) {
        return $3($4($5));
    };
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var closest = function(qs) {
    var $6 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    var $7 = $foreign["_closest"](qs);
    return function($8) {
        return $6($7($8));
    };
};
var attachShadow = function($9) {
    return $foreign["_attachShadow"](initToProps($9));
};
module.exports = {
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    namespaceURI: namespaceURI,
    prefix: prefix,
    getElementsByTagNameNS: getElementsByTagNameNS,
    getAttribute: getAttribute,
    closest: closest,
    attachShadow: attachShadow,
    localName: $foreign.localName,
    tagName: $foreign.tagName,
    id: $foreign.id,
    setId: $foreign.setId,
    className: $foreign.className,
    classList: $foreign.classList,
    setClassName: $foreign.setClassName,
    getElementsByTagName: $foreign.getElementsByTagName,
    getElementsByClassName: $foreign.getElementsByClassName,
    setAttribute: $foreign.setAttribute,
    hasAttribute: $foreign.hasAttribute,
    removeAttribute: $foreign.removeAttribute,
    matches: $foreign.matches,
    scrollTop: $foreign.scrollTop,
    setScrollTop: $foreign.setScrollTop,
    scrollLeft: $foreign.scrollLeft,
    setScrollLeft: $foreign.setScrollLeft,
    scrollWidth: $foreign.scrollWidth,
    scrollHeight: $foreign.scrollHeight,
    clientTop: $foreign.clientTop,
    clientLeft: $foreign.clientLeft,
    clientWidth: $foreign.clientWidth,
    clientHeight: $foreign.clientHeight
};

},{"./foreign.js":"9X85n","../Data.Functor/index.js":"iy1jO","../Data.Nullable/index.js":"5SdGN","../Data.Show/index.js":"b6tNW","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.DOM.Internal.Types/index.js":"8LKBm","../Web.DOM.ParentNode/index.js":"6B7kO","../Web.DOM.ShadowRoot/index.js":"jRZuh","../Web.Internal.FFI/index.js":"1vIWP"}],"9X85n":[function(require,module,exports) {
"use strict";
var getProp = function(name) {
    return function(doctype) {
        return doctype[name];
    };
};
exports._namespaceURI = getProp("namespaceURI");
exports._prefix = getProp("prefix");
exports.localName = getProp("localName");
exports.tagName = getProp("tagName");
exports.id = function(node) {
    return function() {
        return node.id;
    };
};
exports.setId = function(id) {
    return function(node) {
        return function() {
            node.id = id;
        };
    };
};
exports.className = function(node) {
    return function() {
        return node.className;
    };
};
exports.classList = function(element) {
    return function() {
        return element.classList;
    };
};
exports.setClassName = function(className) {
    return function(node) {
        return function() {
            node.className = className;
        };
    };
};
exports.getElementsByTagName = function(localName) {
    return function(doc) {
        return function() {
            return doc.getElementsByTagName(localName);
        };
    };
};
exports._getElementsByTagNameNS = function(ns) {
    return function(localName) {
        return function(doc) {
            return function() {
                return doc.getElementsByTagNameNS(ns, localName);
            };
        };
    };
};
exports.getElementsByClassName = function(classNames) {
    return function(doc) {
        return function() {
            return doc.getElementsByClassName(classNames);
        };
    };
};
exports.setAttribute = function(name) {
    return function(value) {
        return function(element) {
            return function() {
                element.setAttribute(name, value);
            };
        };
    };
};
exports._getAttribute = function(name) {
    return function(element) {
        return function() {
            return element.getAttribute(name);
        };
    };
};
exports.hasAttribute = function(name) {
    return function(element) {
        return function() {
            return element.hasAttribute(name);
        };
    };
};
exports.removeAttribute = function(name) {
    return function(element) {
        return function() {
            element.removeAttribute(name);
        };
    };
};
exports.matches = function(selector) {
    return function(element) {
        return function() {
            return element.matches(selector);
        };
    };
};
exports._closest = function(selector) {
    return function(element) {
        return function() {
            return element.closest(selector);
        };
    };
};
// - CSSOM ---------------------------------------------------------------------
exports.scrollTop = function(node) {
    return function() {
        return node.scrollTop;
    };
};
exports.setScrollTop = function(scrollTop) {
    return function(node) {
        return function() {
            node.scrollTop = scrollTop;
        };
    };
};
exports.scrollLeft = function(node) {
    return function() {
        return node.scrollLeft;
    };
};
exports.setScrollLeft = function(scrollLeft) {
    return function(node) {
        return function() {
            node.scrollLeft = scrollLeft;
        };
    };
};
exports.scrollWidth = function(el) {
    return function() {
        return el.scrollWidth;
    };
};
exports.scrollHeight = function(el) {
    return function() {
        return el.scrollHeight;
    };
};
exports.clientTop = function(el) {
    return function() {
        return el.clientTop;
    };
};
exports.clientLeft = function(el) {
    return function() {
        return el.clientLeft;
    };
};
exports.clientWidth = function(el) {
    return function() {
        return el.clientWidth;
    };
};
exports.clientHeight = function(el) {
    return function() {
        return el.clientHeight;
    };
};
exports._attachShadow = function(props) {
    return function(el) {
        return function() {
            return el.attachShadow(props);
        };
    };
};

},{}],"8LKBm":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
module.exports = {
};

},{}],"jRZuh":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Show = require("../Data.Show/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Open = function() {
    function Open1() {
    }
    Open1.value = new Open1();
    return Open1;
}();
var Closed = function() {
    function Closed1() {
    }
    Closed1.value = new Closed1();
    return Closed1;
}();
var toNode = Unsafe_Coerce.unsafeCoerce;
var showShadowRootMode = new Data_Show.Show(function(v) {
    if (v instanceof Open) return "open";
    if (v instanceof Closed) return "closed";
    throw new Error("Failed pattern match at Web.DOM.ShadowRoot (line 22, column 1 - line 24, column 25): " + [
        v.constructor.name
    ]);
});
var mode = function() {
    var modeFromString = function(v) {
        if (v === "open") return new Data_Maybe.Just(Open.value);
        if (v === "closed") return new Data_Maybe.Just(Closed.value);
        return Data_Maybe.Nothing.value;
    };
    return function($4) {
        return modeFromString($foreign["_mode"]($4));
    };
}();
module.exports = {
    Open: Open,
    Closed: Closed,
    toNode: toNode,
    mode: mode,
    showShadowRootMode: showShadowRootMode,
    host: $foreign.host
};

},{"./foreign.js":"e1li4","../Data.Maybe/index.js":"ePH81","../Data.Show/index.js":"b6tNW","../Unsafe.Coerce/index.js":"6gO81"}],"e1li4":[function(require,module,exports) {
"use strict";
exports._mode = function(el) {
    return el.mode;
};
exports.host = function(el) {
    return function() {
        return el.host;
    };
};

},{}],"lN1qa":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Foreign = require("../Foreign/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");
var Halogen_VDom_Util = require("../Halogen.VDom.Util/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Created = function() {
    function Created1(value0) {
        this.value0 = value0;
    }
    Created1.create = function(value0) {
        return new Created1(value0);
    };
    return Created1;
}();
var Removed = function() {
    function Removed1(value0) {
        this.value0 = value0;
    }
    Removed1.create = function(value0) {
        return new Removed1(value0);
    };
    return Removed1;
}();
var Attribute = function() {
    function Attribute1(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    Attribute1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new Attribute1(value0, value1, value2);
            };
        };
    };
    return Attribute1;
}();
var Property = function() {
    function Property1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Property1.create = function(value0) {
        return function(value1) {
            return new Property1(value0, value1);
        };
    };
    return Property1;
}();
var Handler = function() {
    function Handler1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Handler1.create = function(value0) {
        return function(value1) {
            return new Handler1(value0, value1);
        };
    };
    return Handler1;
}();
var Ref = function() {
    function Ref1(value0) {
        this.value0 = value0;
    }
    Ref1.create = function(value0) {
        return new Ref1(value0);
    };
    return Ref1;
}();
var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
var setProperty = Halogen_VDom_Util.unsafeSetAny;
var removeProperty = function(key, el) {
    var v = Halogen_VDom_Util.hasAttribute(Data_Nullable["null"], key, el);
    if (v) return Halogen_VDom_Util.removeAttribute(Data_Nullable["null"], key, el);
    var v1 = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
    if (v1 === "string") return Halogen_VDom_Util.unsafeSetAny(key, "", el);
    if (key === "rowSpan") return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
    if (key === "colSpan") return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
    return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
};
var propToStrKey = function(v) {
    if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) return "attr/" + (v.value0.value0 + (":" + v.value1));
    if (v instanceof Attribute) return "attr/:" + v.value1;
    if (v instanceof Property) return "prop/" + v.value0;
    if (v instanceof Handler) return "handler/" + v.value0;
    if (v instanceof Ref) return "ref";
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [
        v.constructor.name
    ]);
};
var propFromString = Unsafe_Coerce.unsafeCoerce;
var propFromNumber = Unsafe_Coerce.unsafeCoerce;
var propFromInt = Unsafe_Coerce.unsafeCoerce;
var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
var functorProp = new Data_Functor.Functor(function(v) {
    return function(v1) {
        if (v1 instanceof Handler) return new Handler(v1.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(v))(v1.value1));
        if (v1 instanceof Ref) return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(v))(v1.value0));
        return v1;
    };
});
var functorElemRef = new Data_Functor.Functor(function(f) {
    return function(v) {
        if (v instanceof Created) return new Created(f(v.value0));
        if (v instanceof Removed) return new Removed(f(v.value0));
        throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 49, column 1 - line 51, column 36): " + [
            f.constructor.name,
            v.constructor.name
        ]);
    };
});
var buildProp = function(emit) {
    return function(el) {
        var removeProp = function(prevEvents) {
            return function(v, v1) {
                if (v1 instanceof Attribute) return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                if (v1 instanceof Property) return removeProperty(v1.value0, el);
                if (v1 instanceof Handler) {
                    var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                    return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                }
                if (v1 instanceof Ref) return Data_Unit.unit;
                throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [
                    v1.constructor.name
                ]);
            };
        };
        var mbEmit = function(v) {
            if (v instanceof Data_Maybe.Just) return emit(v.value0)();
            return Data_Unit.unit;
        };
        var haltProp = function(state) {
            var v = Foreign_Object.lookup("ref")(state.props);
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) return mbEmit(v.value0.value0(new Removed(el)));
            return Data_Unit.unit;
        };
        var diffProp = function(prevEvents, events) {
            return function(v, v1, v11, v2) {
                if (v11 instanceof Attribute && v2 instanceof Attribute) {
                    var $57 = v11.value2 === v2.value2;
                    if ($57) return v2;
                    Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                    return v2;
                }
                if (v11 instanceof Property && v2 instanceof Property) {
                    var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                    if (v4) return v2;
                    if (v2.value0 === "value") {
                        var elVal = unsafeGetProperty("value", el);
                        var $66 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                        if ($66) return v2;
                        setProperty(v2.value0, v2.value1, el);
                        return v2;
                    }
                    setProperty(v2.value0, v2.value1, el);
                    return v2;
                }
                if (v11 instanceof Handler && v2 instanceof Handler) {
                    var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                    Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                    Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                    return v2;
                }
                return v2;
            };
        };
        var applyProp = function(events) {
            return function(v, v1, v2) {
                if (v2 instanceof Attribute) {
                    Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                    return v2;
                }
                if (v2 instanceof Property) {
                    setProperty(v2.value0, v2.value1, el);
                    return v2;
                }
                if (v2 instanceof Handler) {
                    var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                    if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                        Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                        return v2;
                    }
                    var ref = Effect_Ref["new"](v2.value1)();
                    var listener = Web_Event_EventTarget.eventListener(function(ev) {
                        return function __do() {
                            var f$prime = Effect_Ref.read(ref)();
                            return mbEmit(f$prime(ev));
                        };
                    })();
                    Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);
                    Halogen_VDom_Util.addEventListener(v2.value0, listener, el);
                    return v2;
                }
                if (v2 instanceof Ref) {
                    mbEmit(v2.value0(new Created(el)));
                    return v2;
                }
                throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [
                    v2.constructor.name
                ]);
            };
        };
        var patchProp = function(state, ps2) {
            var events = Halogen_VDom_Util.newMutMap();
            var onThis = removeProp(state.events);
            var onThese = diffProp(state.events, events);
            var onThat = applyProp(events);
            var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);
            var nextState = {
                events: Halogen_VDom_Util.unsafeFreeze(events),
                props: props
            };
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));
        };
        var renderProp = function(ps1) {
            var events = Halogen_VDom_Util.newMutMap();
            var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));
            var state = {
                events: Halogen_VDom_Util.unsafeFreeze(events),
                props: ps1$prime
            };
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));
        };
        return renderProp;
    };
};
module.exports = {
    Attribute: Attribute,
    Property: Property,
    Handler: Handler,
    Ref: Ref,
    Created: Created,
    Removed: Removed,
    propFromString: propFromString,
    propFromBoolean: propFromBoolean,
    propFromInt: propFromInt,
    propFromNumber: propFromNumber,
    buildProp: buildProp,
    functorProp: functorProp,
    functorElemRef: functorElemRef
};

},{"../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Nullable/index.js":"5SdGN","../Data.Tuple/index.js":"eOBbM","../Data.Unit/index.js":"d7oKp","../Effect.Ref/index.js":"8AWDF","../Foreign/index.js":"4Lrqs","../Foreign.Object/index.js":"6rT59","../Halogen.VDom.Machine/index.js":"dgwzB","../Halogen.VDom.Util/index.js":"4ny50","../Unsafe.Coerce/index.js":"6gO81","../Web.Event.EventTarget/index.js":"6hdTa"}],"4Lrqs":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var ForeignError = function() {
    function ForeignError1(value0) {
        this.value0 = value0;
    }
    ForeignError1.create = function(value0) {
        return new ForeignError1(value0);
    };
    return ForeignError1;
}();
var TypeMismatch = function() {
    function TypeMismatch1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    TypeMismatch1.create = function(value0) {
        return function(value1) {
            return new TypeMismatch1(value0, value1);
        };
    };
    return TypeMismatch1;
}();
var ErrorAtIndex = function() {
    function ErrorAtIndex1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    ErrorAtIndex1.create = function(value0) {
        return function(value1) {
            return new ErrorAtIndex1(value0, value1);
        };
    };
    return ErrorAtIndex1;
}();
var ErrorAtProperty = function() {
    function ErrorAtProperty1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    ErrorAtProperty1.create = function(value0) {
        return function(value1) {
            return new ErrorAtProperty1(value0, value1);
        };
    };
    return ErrorAtProperty1;
}();
var unsafeToForeign = Unsafe_Coerce.unsafeCoerce;
var unsafeFromForeign = Unsafe_Coerce.unsafeCoerce;
var showForeignError = new Data_Show.Show(function(v) {
    if (v instanceof ForeignError) return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    if (v instanceof ErrorAtIndex) return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    if (v instanceof ErrorAtProperty) return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    if (v instanceof TypeMismatch) return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    throw new Error("Failed pattern match at Foreign (line 64, column 1 - line 68, column 89): " + [
        v.constructor.name
    ]);
});
var renderForeignError = function(v) {
    if (v instanceof ForeignError) return v.value0;
    if (v instanceof ErrorAtIndex) return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
    if (v instanceof ErrorAtProperty) return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
    if (v instanceof TypeMismatch) return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    throw new Error("Failed pattern match at Foreign (line 73, column 1 - line 73, column 45): " + [
        v.constructor.name
    ]);
};
var readUndefined = function(dictMonad) {
    return function(value) {
        if ($foreign.isUndefined(value)) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(Data_Maybe.Nothing.value);
        if (Data_Boolean.otherwise) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(new Data_Maybe.Just(value));
        throw new Error("Failed pattern match at Foreign (line 161, column 1 - line 161, column 70): " + [
            value.constructor.name
        ]);
    };
};
var readNullOrUndefined = function(dictMonad) {
    return function(value) {
        if ($foreign.isNull(value) || $foreign.isUndefined(value)) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(Data_Maybe.Nothing.value);
        if (Data_Boolean.otherwise) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(new Data_Maybe.Just(value));
        throw new Error("Failed pattern match at Foreign (line 166, column 1 - line 166, column 76): " + [
            value.constructor.name
        ]);
    };
};
var readNull = function(dictMonad) {
    return function(value) {
        if ($foreign.isNull(value)) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(Data_Maybe.Nothing.value);
        if (Data_Boolean.otherwise) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(new Data_Maybe.Just(value));
        throw new Error("Failed pattern match at Foreign (line 156, column 1 - line 156, column 65): " + [
            value.constructor.name
        ]);
    };
};
var fail = function(dictMonad) {
    var $118 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad));
    return function($119) {
        return $118(Data_List_NonEmpty.singleton($119));
    };
};
var readArray = function(dictMonad) {
    return function(value) {
        if ($foreign.isArray(value)) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(unsafeFromForeign(value));
        if (Data_Boolean.otherwise) return fail(dictMonad)(new TypeMismatch("array", $foreign.tagOf(value)));
        throw new Error("Failed pattern match at Foreign (line 151, column 1 - line 151, column 66): " + [
            value.constructor.name
        ]);
    };
};
var unsafeReadTagged = function(dictMonad) {
    return function(tag) {
        return function(value) {
            if ($foreign.tagOf(value) === tag) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(unsafeFromForeign(value));
            if (Data_Boolean.otherwise) return fail(dictMonad)(new TypeMismatch(tag, $foreign.tagOf(value)));
            throw new Error("Failed pattern match at Foreign (line 110, column 1 - line 110, column 71): " + [
                tag.constructor.name,
                value.constructor.name
            ]);
        };
    };
};
var readBoolean = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("Boolean");
};
var readNumber = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("Number");
};
var readInt = function(dictMonad) {
    return function(value) {
        var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
        var fromNumber = function() {
            var $120 = Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither));
            return function($121) {
                return $120(Data_Int.fromNumber($121));
            };
        }();
        return Control_Monad_Except_Trans.mapExceptT(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Either.either(Data_Function["const"](error))(fromNumber)))(readNumber(dictMonad)(value));
    };
};
var readString = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("String");
};
var readChar = function(dictMonad) {
    return function(value) {
        var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
        var fromString = function() {
            var $122 = Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither));
            return function($123) {
                return $122(Data_String_CodeUnits.toChar($123));
            };
        }();
        return Control_Monad_Except_Trans.mapExceptT(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Either.either(Data_Function["const"](error))(fromString)))(readString(dictMonad)(value));
    };
};
var eqForeignError = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof ForeignError && y instanceof ForeignError) return x.value0 === y.value0;
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) return x.value0 === y.value0 && x.value1 === y.value1;
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        return false;
    };
});
var ordForeignError = new Data_Ord.Ord(function() {
    return eqForeignError;
}, function(x) {
    return function(y) {
        if (x instanceof ForeignError && y instanceof ForeignError) return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        if (x instanceof ForeignError) return Data_Ordering.LT.value;
        if (y instanceof ForeignError) return Data_Ordering.GT.value;
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) return Data_Ordering.LT.value;
            if (v instanceof Data_Ordering.GT) return Data_Ordering.GT.value;
            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
        }
        if (x instanceof TypeMismatch) return Data_Ordering.LT.value;
        if (y instanceof TypeMismatch) return Data_Ordering.GT.value;
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) return Data_Ordering.LT.value;
            if (v instanceof Data_Ordering.GT) return Data_Ordering.GT.value;
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        }
        if (x instanceof ErrorAtIndex) return Data_Ordering.LT.value;
        if (y instanceof ErrorAtIndex) return Data_Ordering.GT.value;
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) return Data_Ordering.LT.value;
            if (v instanceof Data_Ordering.GT) return Data_Ordering.GT.value;
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        }
        throw new Error("Failed pattern match at Foreign (line 62, column 1 - line 62, column 52): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
module.exports = {
    ForeignError: ForeignError,
    TypeMismatch: TypeMismatch,
    ErrorAtIndex: ErrorAtIndex,
    ErrorAtProperty: ErrorAtProperty,
    renderForeignError: renderForeignError,
    unsafeToForeign: unsafeToForeign,
    unsafeFromForeign: unsafeFromForeign,
    unsafeReadTagged: unsafeReadTagged,
    readString: readString,
    readChar: readChar,
    readBoolean: readBoolean,
    readNumber: readNumber,
    readInt: readInt,
    readArray: readArray,
    readNull: readNull,
    readUndefined: readUndefined,
    readNullOrUndefined: readNullOrUndefined,
    fail: fail,
    eqForeignError: eqForeignError,
    ordForeignError: ordForeignError,
    showForeignError: showForeignError,
    typeOf: $foreign.typeOf,
    tagOf: $foreign.tagOf,
    isNull: $foreign.isNull,
    isUndefined: $foreign.isUndefined,
    isArray: $foreign.isArray
};

},{"./foreign.js":"cBJSR","../Control.Applicative/index.js":"dG9TO","../Control.Monad.Error.Class/index.js":"acXO9","../Control.Monad.Except.Trans/index.js":"jlllv","../Data.Boolean/index.js":"lv1qw","../Data.Either/index.js":"3WZha","../Data.Eq/index.js":"c3b8F","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Int/index.js":"7DHYL","../Data.List.NonEmpty/index.js":"4sog1","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Show/index.js":"b6tNW","../Data.String.CodeUnits/index.js":"8wheW","../Unsafe.Coerce/index.js":"6gO81"}],"cBJSR":[function(require,module,exports) {
"use strict";
exports.typeOf = function(value) {
    return typeof value;
};
exports.tagOf = function(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
};
exports.isNull = function(value) {
    return value === null;
};
exports.isUndefined = function(value) {
    return value === undefined;
};
exports.isArray = Array.isArray || function(value) {
    return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],"7DHYL":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_DivisionRing = require("../Data.DivisionRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Number = require("../Data.Number/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var $$Math = require("../Math/index.js");
var Radix = function(x) {
    return x;
};
var Even = function() {
    function Even1() {
    }
    Even1.value = new Even1();
    return Even1;
}();
var Odd = function() {
    function Odd1() {
    }
    Odd1.value = new Odd1();
    return Odd1;
}();
var showParity = new Data_Show.Show(function(v) {
    if (v instanceof Even) return "Even";
    if (v instanceof Odd) return "Odd";
    throw new Error("Failed pattern match at Data.Int (line 111, column 1 - line 113, column 19): " + [
        v.constructor.name
    ]);
});
var radix = function(n) {
    if (n >= 2 && n <= 36) return new Data_Maybe.Just(n);
    if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
    throw new Error("Failed pattern match at Data.Int (line 192, column 1 - line 192, column 28): " + [
        n.constructor.name
    ]);
};
var odd = function(x) {
    return (x & 1) !== 0;
};
var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function(x) {
    if (!Data_Number["isFinite"](x)) return 0;
    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) return Data_Bounded.top(Data_Bounded.boundedInt);
    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) return Data_Bounded.bottom(Data_Bounded.boundedInt);
    if (Data_Boolean.otherwise) return Data_Maybe.fromMaybe(0)(fromNumber(x));
    throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [
        x.constructor.name
    ]);
};
var round = function($23) {
    return unsafeClamp($$Math.round($23));
};
var floor = function($24) {
    return unsafeClamp($$Math.floor($24));
};
var even = function(x) {
    return (x & 1) === 0;
};
var parity = function(n) {
    var $14 = even(n);
    if ($14) return Even.value;
    return Odd.value;
};
var eqParity = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof Even && y instanceof Even) return true;
        if (x instanceof Odd && y instanceof Odd) return true;
        return false;
    };
});
var ordParity = new Data_Ord.Ord(function() {
    return eqParity;
}, function(x) {
    return function(y) {
        if (x instanceof Even && y instanceof Even) return Data_Ordering.EQ.value;
        if (x instanceof Even) return Data_Ordering.LT.value;
        if (y instanceof Even) return Data_Ordering.GT.value;
        if (x instanceof Odd && y instanceof Odd) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Data.Int (line 109, column 1 - line 109, column 40): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
var semiringParity = new Data_Semiring.Semiring(function(x) {
    return function(y) {
        var $19 = Data_Eq.eq(eqParity)(x)(y);
        if ($19) return Even.value;
        return Odd.value;
    };
}, function(v) {
    return function(v1) {
        if (v instanceof Odd && v1 instanceof Odd) return Odd.value;
        return Even.value;
    };
}, Odd.value, Even.value);
var ringParity = new Data_Ring.Ring(function() {
    return semiringParity;
}, Data_Semiring.add(semiringParity));
var divisionRingParity = new Data_DivisionRing.DivisionRing(function() {
    return ringParity;
}, Control_Category.identity(Control_Category.categoryFn));
var decimal = 10;
var commutativeRingParity = new Data_CommutativeRing.CommutativeRing(function() {
    return ringParity;
});
var euclideanRingParity = new Data_EuclideanRing.EuclideanRing(function() {
    return commutativeRingParity;
}, function(v) {
    if (v instanceof Even) return 0;
    if (v instanceof Odd) return 1;
    throw new Error("Failed pattern match at Data.Int (line 131, column 1 - line 135, column 17): " + [
        v.constructor.name
    ]);
}, function(x) {
    return function(v) {
        return x;
    };
}, function(v) {
    return function(v1) {
        return Even.value;
    };
});
var ceil = function($25) {
    return unsafeClamp($$Math.ceil($25));
};
var boundedParity = new Data_Bounded.Bounded(function() {
    return ordParity;
}, Even.value, Odd.value);
var binary = 2;
var base36 = 36;
module.exports = {
    fromNumber: fromNumber,
    ceil: ceil,
    floor: floor,
    round: round,
    fromString: fromString,
    radix: radix,
    binary: binary,
    octal: octal,
    decimal: decimal,
    hexadecimal: hexadecimal,
    base36: base36,
    fromStringAs: fromStringAs,
    Even: Even,
    Odd: Odd,
    parity: parity,
    even: even,
    odd: odd,
    eqParity: eqParity,
    ordParity: ordParity,
    showParity: showParity,
    boundedParity: boundedParity,
    semiringParity: semiringParity,
    ringParity: ringParity,
    commutativeRingParity: commutativeRingParity,
    euclideanRingParity: euclideanRingParity,
    divisionRingParity: divisionRingParity,
    toNumber: $foreign.toNumber,
    toStringAs: $foreign.toStringAs,
    quot: $foreign.quot,
    rem: $foreign.rem,
    pow: $foreign.pow
};

},{"./foreign.js":"eMOBE","../Control.Category/index.js":"dfcPK","../Data.Boolean/index.js":"lv1qw","../Data.Bounded/index.js":"jzt4h","../Data.CommutativeRing/index.js":"2q7tT","../Data.DivisionRing/index.js":"lOLLF","../Data.Eq/index.js":"c3b8F","../Data.EuclideanRing/index.js":"fTU7A","../Data.Maybe/index.js":"ePH81","../Data.Number/index.js":"lXPDj","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Ring/index.js":"2x2oG","../Data.Semiring/index.js":"39btI","../Data.Show/index.js":"b6tNW","../Math/index.js":"aCTFh"}],"eMOBE":[function(require,module,exports) {
"use strict";
exports.fromNumberImpl = function(just) {
    return function(nothing) {
        return function(n) {
            /* jshint bitwise: false */ return (n | 0) === n ? just(n) : nothing;
        };
    };
};
exports.toNumber = function(n) {
    return n;
};
exports.fromStringAsImpl = function(just) {
    return function(nothing) {
        return function(radix) {
            var digits;
            if (radix < 11) digits = "[0-" + (radix - 1).toString() + "]";
            else if (radix === 11) digits = "[0-9a]";
            else digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
            var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
            return function(s) {
                /* jshint bitwise: false */ if (pattern.test(s)) {
                    var i = parseInt(s, radix);
                    return (i | 0) === i ? just(i) : nothing;
                } else return nothing;
            };
        };
    };
};
exports.toStringAs = function(radix) {
    return function(i) {
        return i.toString(radix);
    };
};
exports.quot = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x / y | 0;
    };
};
exports.rem = function(x) {
    return function(y) {
        return x % y;
    };
};
exports.pow = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return Math.pow(x, y) | 0;
    };
};

},{}],"lOLLF":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var DivisionRing = function(Ring0, recip) {
    this.Ring0 = Ring0;
    this.recip = recip;
};
var recip = function(dict) {
    return dict.recip;
};
var rightDiv = function(dictDivisionRing) {
    return function(a) {
        return function(b) {
            return Data_Semiring.mul(dictDivisionRing.Ring0().Semiring0())(a)(recip(dictDivisionRing)(b));
        };
    };
};
var leftDiv = function(dictDivisionRing) {
    return function(a) {
        return function(b) {
            return Data_Semiring.mul(dictDivisionRing.Ring0().Semiring0())(recip(dictDivisionRing)(b))(a);
        };
    };
};
var divisionringNumber = new DivisionRing(function() {
    return Data_Ring.ringNumber;
}, function(x) {
    return 1 / x;
});
module.exports = {
    DivisionRing: DivisionRing,
    recip: recip,
    leftDiv: leftDiv,
    rightDiv: rightDiv,
    divisionringNumber: divisionringNumber,
    Ring: Data_Ring.Ring,
    negate: Data_Ring.negate,
    sub: Data_Ring.sub,
    Semiring: Data_Semiring.Semiring,
    add: Data_Semiring.add,
    mul: Data_Semiring.mul,
    one: Data_Semiring.one,
    zero: Data_Semiring.zero
};

},{"../Data.Ring/index.js":"2x2oG","../Data.Semiring/index.js":"39btI"}],"lXPDj":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var fromString = function(str) {
    return $foreign.fromStringImpl(str, $foreign["isFinite"], Data_Maybe.Just.create, Data_Maybe.Nothing.value);
};
module.exports = {
    fromString: fromString,
    nan: $foreign.nan,
    "isNaN": $foreign["isNaN"],
    infinity: $foreign.infinity,
    "isFinite": $foreign["isFinite"]
};

},{"./foreign.js":"k4lbx","../Data.Maybe/index.js":"ePH81"}],"k4lbx":[function(require,module,exports) {
/* globals exports */ "use strict";
exports.nan = NaN;
exports.isNaN = isNaN;
exports.infinity = Infinity;
exports.isFinite = isFinite;
exports.fromStringImpl = function(str, isFinite, just, nothing) {
    var num = parseFloat(str);
    if (isFinite(num)) return just(num);
    else return nothing;
};

},{}],"aCTFh":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    abs: $foreign.abs,
    acos: $foreign.acos,
    asin: $foreign.asin,
    atan: $foreign.atan,
    atan2: $foreign.atan2,
    ceil: $foreign.ceil,
    cos: $foreign.cos,
    exp: $foreign.exp,
    floor: $foreign.floor,
    imul: $foreign.imul,
    log: $foreign.log,
    max: $foreign.max,
    min: $foreign.min,
    pow: $foreign.pow,
    round: $foreign.round,
    sin: $foreign.sin,
    sqrt: $foreign.sqrt,
    tan: $foreign.tan,
    trunc: $foreign.trunc,
    remainder: $foreign.remainder,
    e: $foreign.e,
    ln2: $foreign.ln2,
    ln10: $foreign.ln10,
    log2e: $foreign.log2e,
    log10e: $foreign.log10e,
    pi: $foreign.pi,
    tau: $foreign.tau,
    sqrt1_2: $foreign.sqrt1_2,
    sqrt2: $foreign.sqrt2
};

},{"./foreign.js":"kz1Jg"}],"kz1Jg":[function(require,module,exports) {
"use strict";
// module Math
exports.abs = Math.abs;
exports.acos = Math.acos;
exports.asin = Math.asin;
exports.atan = Math.atan;
exports.atan2 = function(y) {
    return function(x) {
        return Math.atan2(y, x);
    };
};
exports.ceil = Math.ceil;
exports.cos = Math.cos;
exports.exp = Math.exp;
exports.floor = Math.floor;
function nativeImul(a) {
    return function(b) {
        return Math.imul(a, b);
    };
}
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul
function emulatedImul(a) {
    /*jshint bitwise: false*/ return function(b) {
        var ah = a >>> 16 & 65535;
        var al = a & 65535;
        var bh = b >>> 16 & 65535;
        var bl = b & 65535;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
    };
}
exports.imul = Math.imul ? nativeImul : emulatedImul;
exports.trunc = Math.trunc || function(n) {
    return n < 0 ? Math.ceil(n) : Math.floor(n);
};
exports.log = Math.log;
exports.max = function(n1) {
    return function(n2) {
        return Math.max(n1, n2);
    };
};
exports.min = function(n1) {
    return function(n2) {
        return Math.min(n1, n2);
    };
};
exports.pow = function(n) {
    return function(p) {
        return Math.pow(n, p);
    };
};
exports.remainder = function(n) {
    return function(m) {
        return n % m;
    };
};
exports.round = Math.round;
exports.sin = Math.sin;
exports.sqrt = Math.sqrt;
exports.tan = Math.tan;
exports.e = Math.E;
exports.ln2 = Math.LN2;
exports.ln10 = Math.LN10;
exports.log2e = Math.LOG2E;
exports.log10e = Math.LOG10E;
exports.pi = Math.PI;
exports.tau = 2 * Math.PI;
exports.sqrt1_2 = Math.SQRT1_2;
exports.sqrt2 = Math.SQRT2;

},{}],"4sog1":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var zipWith = function(f) {
    return function(v) {
        return function(v1) {
            return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));
        };
    };
};
var zipWithA = function(dictApplicative) {
    return function(f) {
        return function(xs) {
            return function(ys) {
                return Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList)(dictApplicative.Apply0())(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var wrappedOperation2 = function(name) {
    return function(f) {
        return function(v) {
            return function(v1) {
                var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));
                if (v2 instanceof Data_List_Types.Cons) return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);
                if (v2 instanceof Data_List_Types.Nil) return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
                throw new Error("Failed pattern match at Data.List.NonEmpty (line 110, column 3 - line 112, column 81): " + [
                    v2.constructor.name
                ]);
            };
        };
    };
};
var wrappedOperation = function(name) {
    return function(f) {
        return function(v) {
            var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
            if (v1 instanceof Data_List_Types.Cons) return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
            if (v1 instanceof Data_List_Types.Nil) return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 97, column 3 - line 99, column 81): " + [
                v1.constructor.name
            ]);
        };
    };
};
var updateAt = function(i) {
    return function(a) {
        return function(v) {
            if (i === 0) return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));
            if (Data_Boolean.otherwise) return Data_Functor.map(Data_Maybe.functorMaybe)(function($165) {
                return Data_List_Types.NonEmptyList(function(v1) {
                    return new Data_NonEmpty.NonEmpty(v.value0, v1);
                }($165));
            })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 203, column 1 - line 203, column 75): " + [
                i.constructor.name,
                a.constructor.name,
                v.constructor.name
            ]);
        };
    };
};
var unzip = function(ts) {
    return new Data_Tuple.Tuple(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.fst)(ts), Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(ts));
};
var unsnoc = function(v) {
    var v1 = Data_List.unsnoc(v.value1);
    if (v1 instanceof Data_Maybe.Nothing) return {
        init: Data_List_Types.Nil.value,
        last: v.value0
    };
    if (v1 instanceof Data_Maybe.Just) return {
        init: new Data_List_Types.Cons(v.value0, v1.value0.init),
        last: v1.value0.last
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 165, column 35 - line 167, column 50): " + [
        v1.constructor.name
    ]);
};
var unionBy = function() {
    var $166 = wrappedOperation2("unionBy");
    return function($167) {
        return $166(Data_List.unionBy($167));
    };
}();
var union = function(dictEq) {
    return wrappedOperation2("union")(Data_List.union(dictEq));
};
var uncons = function(v) {
    return {
        head: v.value0,
        tail: v.value1
    };
};
var toList = function(v) {
    return new Data_List_Types.Cons(v.value0, v.value1);
};
var toUnfoldable = function(dictUnfoldable) {
    var $168 = Data_Unfoldable.unfoldr(dictUnfoldable)(function(xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function(rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(Data_List.uncons(xs));
    });
    return function($169) {
        return $168(toList($169));
    };
};
var tail = function(v) {
    return v.value1;
};
var sortBy = function() {
    var $170 = wrappedOperation("sortBy");
    return function($171) {
        return $170(Data_List.sortBy($171));
    };
}();
var sort = function(dictOrd) {
    return function(xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var snoc = function(v) {
    return function(y) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
    };
};
var singleton = function() {
    var $172 = Data_NonEmpty.singleton(Data_List_Types.plusList);
    return function($173) {
        return Data_List_Types.NonEmptyList($172($173));
    };
}();
var snoc$prime = function(v) {
    return function(y) {
        if (v instanceof Data_List_Types.Cons) return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
        if (v instanceof Data_List_Types.Nil) return singleton(y);
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 145, column 1 - line 145, column 51): " + [
            v.constructor.name,
            y.constructor.name
        ]);
    };
};
var reverse = wrappedOperation("reverse")(Data_List.reverse);
var nubEq = function(dictEq) {
    return wrappedOperation("nubEq")(Data_List.nubEq(dictEq));
};
var nubByEq = function() {
    var $174 = wrappedOperation("nubByEq");
    return function($175) {
        return $174(Data_List.nubByEq($175));
    };
}();
var nubBy = function() {
    var $176 = wrappedOperation("nubBy");
    return function($177) {
        return $176(Data_List.nubBy($177));
    };
}();
var nub = function(dictOrd) {
    return wrappedOperation("nub")(Data_List.nub(dictOrd));
};
var modifyAt = function(i) {
    return function(f) {
        return function(v) {
            if (i === 0) return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));
            if (Data_Boolean.otherwise) return Data_Functor.map(Data_Maybe.functorMaybe)(function($178) {
                return Data_List_Types.NonEmptyList(function(v1) {
                    return new Data_NonEmpty.NonEmpty(v.value0, v1);
                }($178));
            })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 208, column 1 - line 208, column 82): " + [
                i.constructor.name,
                f.constructor.name,
                v.constructor.name
            ]);
        };
    };
};
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexNonEmptyList);
var lift = function(f) {
    return function(v) {
        return f(new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var mapMaybe = function($179) {
    return lift(Data_List.mapMaybe($179));
};
var partition = function($180) {
    return lift(Data_List.partition($180));
};
var span = function($181) {
    return lift(Data_List.span($181));
};
var take = function($182) {
    return lift(Data_List.take($182));
};
var takeWhile = function($183) {
    return lift(Data_List.takeWhile($183));
};
var length = function(v) {
    return 1 + Data_List.length(v.value1) | 0;
};
var last = function(v) {
    return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
};
var intersectBy = function() {
    var $184 = wrappedOperation2("intersectBy");
    return function($185) {
        return $184(Data_List.intersectBy($185));
    };
}();
var intersect = function(dictEq) {
    return wrappedOperation2("intersect")(Data_List.intersect(dictEq));
};
var insertAt = function(i) {
    return function(a) {
        return function(v) {
            if (i === 0) return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));
            if (Data_Boolean.otherwise) return Data_Functor.map(Data_Maybe.functorMaybe)(function($186) {
                return Data_List_Types.NonEmptyList(function(v1) {
                    return new Data_NonEmpty.NonEmpty(v.value0, v1);
                }($186));
            })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 198, column 1 - line 198, column 75): " + [
                i.constructor.name,
                a.constructor.name,
                v.constructor.name
            ]);
        };
    };
};
var init = function(v) {
    return Data_Maybe.maybe(Data_List_Types.Nil.value)(function(v1) {
        return new Data_List_Types.Cons(v.value0, v1);
    })(Data_List.init(v.value1));
};
var index = function(v) {
    return function(i) {
        if (i === 0) return new Data_Maybe.Just(v.value0);
        if (Data_Boolean.otherwise) return Data_List.index(v.value1)(i - 1 | 0);
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 172, column 1 - line 172, column 52): " + [
            v.constructor.name,
            i.constructor.name
        ]);
    };
};
var head = function(v) {
    return v.value0;
};
var groupBy = function() {
    var $187 = wrappedOperation("groupBy");
    return function($188) {
        return $187(Data_List.groupBy($188));
    };
}();
var groupAllBy = function(dictOrd) {
    var $189 = wrappedOperation("groupAllBy");
    var $190 = Data_List.groupAllBy(dictOrd);
    return function($191) {
        return $189($190($191));
    };
};
var groupAll = function(dictOrd) {
    return wrappedOperation("groupAll")(Data_List.groupAll(dictOrd));
};
var group$prime = function(dictWarn) {
    return function(dictOrd) {
        return groupAll(dictOrd);
    };
};
var group = function(dictEq) {
    return wrappedOperation("group")(Data_List.group(dictEq));
};
var fromList = function(v) {
    if (v instanceof Data_List_Types.Nil) return Data_Maybe.Nothing.value;
    if (v instanceof Data_List_Types.Cons) return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 126, column 1 - line 126, column 57): " + [
        v.constructor.name
    ]);
};
var fromFoldable = function(dictFoldable) {
    var $192 = Data_List.fromFoldable(dictFoldable);
    return function($193) {
        return fromList($192($193));
    };
};
var foldM = function(dictMonad) {
    return function(f) {
        return function(b) {
            return function(v) {
                return Control_Bind.bind(dictMonad.Bind1())(f(b)(v.value0))(function(b$prime) {
                    return Data_List.foldM(dictMonad)(f)(b$prime)(v.value1);
                });
            };
        };
    };
};
var findLastIndex = function(f) {
    return function(v) {
        var v1 = Data_List.findLastIndex(f)(v.value1);
        if (v1 instanceof Data_Maybe.Just) return new Data_Maybe.Just(v1.value0 + 1 | 0);
        if (v1 instanceof Data_Maybe.Nothing) {
            if (f(v.value0)) return new Data_Maybe.Just(0);
            if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
        }
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 192, column 3 - line 196, column 29): " + [
            v1.constructor.name
        ]);
    };
};
var findIndex = function(f) {
    return function(v) {
        if (f(v.value0)) return new Data_Maybe.Just(0);
        if (Data_Boolean.otherwise) return Data_Functor.map(Data_Maybe.functorMaybe)(function(v1) {
            return v1 + 1 | 0;
        })(Data_List.findIndex(f)(v.value1));
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 185, column 1 - line 185, column 69): " + [
            f.constructor.name,
            v.constructor.name
        ]);
    };
};
var filterM = function(dictMonad) {
    var $194 = Data_List.filterM(dictMonad);
    return function($195) {
        return lift($194($195));
    };
};
var filter = function($196) {
    return lift(Data_List.filter($196));
};
var elemLastIndex = function(dictEq) {
    return function(x) {
        return findLastIndex(function(v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function(dictEq) {
    return function(x) {
        return findIndex(function(v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function($197) {
    return lift(Data_List.dropWhile($197));
};
var drop = function($198) {
    return lift(Data_List.drop($198));
};
var cons$prime = function(x) {
    return function(xs) {
        return new Data_NonEmpty.NonEmpty(x, xs);
    };
};
var cons = function(y) {
    return function(v) {
        return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));
var concat = function(v) {
    return Control_Bind.bind(Data_List_Types.bindNonEmptyList)(v)(Control_Category.identity(Control_Category.categoryFn));
};
var catMaybes = lift(Data_List.catMaybes);
var appendFoldable = function(dictFoldable) {
    return function(v) {
        return function(ys) {
            return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1)(Data_List.fromFoldable(dictFoldable)(ys)));
        };
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    fromList: fromList,
    toList: toList,
    singleton: singleton,
    length: length,
    cons: cons,
    "cons'": cons$prime,
    snoc: snoc,
    "snoc'": snoc$prime,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    appendFoldable: appendFoldable,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    take: take,
    takeWhile: takeWhile,
    drop: drop,
    dropWhile: dropWhile,
    span: span,
    group: group,
    groupAll: groupAll,
    "group'": group$prime,
    groupBy: groupBy,
    groupAllBy: groupAllBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    nubEq: nubEq,
    nubByEq: nubByEq,
    union: union,
    unionBy: unionBy,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM,
    all: Data_Foldable.all,
    any: Data_Foldable.any,
    elem: Data_Foldable.elem,
    find: Data_Foldable.find,
    findMap: Data_Foldable.findMap,
    fold: Data_Foldable.fold,
    foldMap: Data_Foldable.foldMap,
    foldl: Data_Foldable.foldl,
    foldr: Data_Foldable.foldr,
    intercalate: Data_Foldable.intercalate,
    notElem: Data_Foldable.notElem,
    NonEmptyList: Data_List_Types.NonEmptyList,
    fold1: Data_Semigroup_Foldable.fold1,
    foldMap1: Data_Semigroup_Foldable.foldMap1,
    for1_: Data_Semigroup_Foldable.for1_,
    sequence1_: Data_Semigroup_Foldable.sequence1_,
    traverse1_: Data_Semigroup_Foldable.traverse1_,
    sequence1: Data_Semigroup_Traversable.sequence1,
    traverse1: Data_Semigroup_Traversable.traverse1,
    traverse1Default: Data_Semigroup_Traversable.traverse1Default,
    scanl: Data_Traversable.scanl,
    scanr: Data_Traversable.scanr
};

},{"../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Data.Boolean/index.js":"lv1qw","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.FunctorWithIndex/index.js":"9mTwC","../Data.List/index.js":"iZK6y","../Data.List.Types/index.js":"80Bba","../Data.Maybe/index.js":"ePH81","../Data.NonEmpty/index.js":"4pAZZ","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Semigroup.Foldable/index.js":"lM4gt","../Data.Semigroup.Traversable/index.js":"kPmtP","../Data.Traversable/index.js":"i5Kon","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk","../Partial.Unsafe/index.js":"fE2bk"}],"8wheW":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_String_Unsafe = require("../Data.String.Unsafe/index.js");
var uncons = function(v) {
    if (v === "") return Data_Maybe.Nothing.value;
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(v),
        tail: $foreign.drop(1)(v)
    });
};
var toChar = $foreign["_toChar"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function(p) {
    return function(s) {
        return $foreign.take($foreign.countPrefix(p)(s))(s);
    };
};
var takeRight = function(i) {
    return function(s) {
        return $foreign.drop($foreign.length(s) - i | 0)(s);
    };
};
var stripSuffix = function(v) {
    return function(str) {
        var v1 = $foreign.splitAt($foreign.length(str) - $foreign.length(v) | 0)(str);
        var $9 = v1.after === v;
        if ($9) return new Data_Maybe.Just(v1.before);
        return Data_Maybe.Nothing.value;
    };
};
var stripPrefix = function(v) {
    return function(str) {
        var v1 = $foreign.splitAt($foreign.length(v))(str);
        var $15 = v1.before === v;
        if ($15) return new Data_Maybe.Just(v1.after);
        return Data_Maybe.Nothing.value;
    };
};
var slice = function(b) {
    return function(e) {
        return function(s) {
            var l = $foreign.length(s);
            var norm = function(x) {
                if (x < 0) return l + x | 0;
                if (Data_Boolean.otherwise) return x;
                throw new Error("Failed pattern match at Data.String.CodeUnits (line 319, column 5 - line 320, column 27): " + [
                    x.constructor.name
                ]);
            };
            var e$prime = norm(e);
            var b$prime = norm(b);
            var $19 = b$prime < 0 || b$prime >= l || e$prime < 0 || e$prime > l || b$prime > e$prime;
            if ($19) return Data_Maybe.Nothing.value;
            return new Data_Maybe.Just($foreign["_slice"](b)(e)(s));
        };
    };
};
var lastIndexOf$prime = $foreign["_lastIndexOfStartingAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign["_lastIndexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf$prime = $foreign["_indexOfStartingAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var dropWhile = function(p) {
    return function(s) {
        return $foreign.drop($foreign.countPrefix(p)(s))(s);
    };
};
var dropRight = function(i) {
    return function(s) {
        return $foreign.take($foreign.length(s) - i | 0)(s);
    };
};
var contains = function(pat) {
    var $20 = indexOf(pat);
    return function($21) {
        return Data_Maybe.isJust($20($21));
    };
};
var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    stripPrefix: stripPrefix,
    stripSuffix: stripSuffix,
    contains: contains,
    charAt: charAt,
    toChar: toChar,
    uncons: uncons,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    takeRight: takeRight,
    takeWhile: takeWhile,
    dropRight: dropRight,
    dropWhile: dropWhile,
    slice: slice,
    singleton: $foreign.singleton,
    fromCharArray: $foreign.fromCharArray,
    toCharArray: $foreign.toCharArray,
    length: $foreign.length,
    countPrefix: $foreign.countPrefix,
    take: $foreign.take,
    drop: $foreign.drop,
    splitAt: $foreign.splitAt
};

},{"./foreign.js":"ePAgD","../Data.Boolean/index.js":"lv1qw","../Data.Maybe/index.js":"ePH81","../Data.String.Unsafe/index.js":"3wlW6"}],"ePAgD":[function(require,module,exports) {
"use strict";
exports.fromCharArray = function(a) {
    return a.join("");
};
exports.toCharArray = function(s) {
    return s.split("");
};
exports.singleton = function(c) {
    return c;
};
exports._charAt = function(just) {
    return function(nothing) {
        return function(i) {
            return function(s) {
                return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
            };
        };
    };
};
exports._toChar = function(just) {
    return function(nothing) {
        return function(s) {
            return s.length === 1 ? just(s) : nothing;
        };
    };
};
exports.length = function(s) {
    return s.length;
};
exports.countPrefix = function(p) {
    return function(s) {
        var i = 0;
        while(i < s.length && p(s.charAt(i)))i++;
        return i;
    };
};
exports._indexOf = function(just) {
    return function(nothing) {
        return function(x) {
            return function(s) {
                var i = s.indexOf(x);
                return i === -1 ? nothing : just(i);
            };
        };
    };
};
exports._indexOfStartingAt = function(just) {
    return function(nothing) {
        return function(x) {
            return function(startAt) {
                return function(s) {
                    if (startAt < 0 || startAt > s.length) return nothing;
                    var i = s.indexOf(x, startAt);
                    return i === -1 ? nothing : just(i);
                };
            };
        };
    };
};
exports._lastIndexOf = function(just) {
    return function(nothing) {
        return function(x) {
            return function(s) {
                var i = s.lastIndexOf(x);
                return i === -1 ? nothing : just(i);
            };
        };
    };
};
exports._lastIndexOfStartingAt = function(just) {
    return function(nothing) {
        return function(x) {
            return function(startAt) {
                return function(s) {
                    var i = s.lastIndexOf(x, startAt);
                    return i === -1 ? nothing : just(i);
                };
            };
        };
    };
};
exports.take = function(n) {
    return function(s) {
        return s.substr(0, n);
    };
};
exports.drop = function(n) {
    return function(s) {
        return s.substring(n);
    };
};
exports._slice = function(b) {
    return function(e) {
        return function(s) {
            return s.slice(b, e);
        };
    };
};
exports.splitAt = function(i) {
    return function(s) {
        return {
            before: s.substring(0, i),
            after: s.substring(i)
        };
    };
};

},{}],"3wlW6":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    "char": $foreign["char"],
    charAt: $foreign.charAt
};

},{"./foreign.js":"cKssK"}],"cKssK":[function(require,module,exports) {
"use strict";
exports.charAt = function(i) {
    return function(s) {
        if (i >= 0 && i < s.length) return s.charAt(i);
        throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
};
exports.char = function(s) {
    if (s.length === 1) return s.charAt(0);
    throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],"6rT59":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Foreign_Object_ST = require("../Foreign.Object.ST/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var values = $foreign.toArrayWithKey(function(v) {
    return function(v1) {
        return v1;
    };
});
var toUnfoldable = function(dictUnfoldable) {
    var $36 = Data_Array.toUnfoldable(dictUnfoldable);
    var $37 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
    return function($38) {
        return $36($37($38));
    };
};
var toAscUnfoldable = function(dictUnfoldable) {
    var $39 = Data_Array.toUnfoldable(dictUnfoldable);
    var $40 = Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst);
    var $41 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
    return function($42) {
        return $39($40($41($42)));
    };
};
var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
var toArray = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
var thawST = $foreign["_copyST"];
var singleton = function(k) {
    return function(v) {
        return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
    };
};
var showObject = function(dictShow) {
    return new Data_Show.Show(function(m) {
        return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
    });
};
var mutate = function(f) {
    return function(m) {
        return $foreign.runST(function __do() {
            var s = thawST(m)();
            f(s)();
            return s;
        });
    };
};
var member = Data_Function_Uncurried.runFn4($foreign["_lookup"])(false)(Data_Function["const"](true));
var mapWithKey = function(f) {
    return function(m) {
        return $foreign["_mapWithKey"](m, f);
    };
};
var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var isSubmap = function(dictEq) {
    return function(m1) {
        return function(m2) {
            var f = function(k) {
                return function(v) {
                    return $foreign["_lookup"](false, Data_Eq.eq(dictEq)(v), k, m2);
                };
            };
            return $foreign.all(f)(m1);
        };
    };
};
var isEmpty = $foreign.all(function(v) {
    return function(v1) {
        return false;
    };
});
var insert = function(k) {
    return function(v) {
        return mutate(Foreign_Object_ST.poke(k)(v));
    };
};
var functorObject = new Data_Functor.Functor(function(f) {
    return function(m) {
        return $foreign["_fmapObject"](m, f);
    };
});
var functorWithIndexObject = new Data_FunctorWithIndex.FunctorWithIndex(function() {
    return functorObject;
}, mapWithKey);
var fromHomogeneous = function(dictHomogeneous) {
    return Unsafe_Coerce.unsafeCoerce;
};
var fromFoldableWith = function(dictFoldable) {
    return function(f) {
        return function(l) {
            return $foreign.runST(function __do() {
                var s = Foreign_Object_ST["new"]();
                Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(l)(function(v) {
                    return function __do1() {
                        var v$prime = $foreign["_lookupST"](v.value1, f(v.value1), v.value0, s)();
                        return Foreign_Object_ST.poke(v.value0)(v$prime)(s)();
                    };
                })();
                return s;
            });
        };
    };
};
var fromFoldable = function(dictFoldable) {
    return function(l) {
        return $foreign.runST(function __do() {
            var s = Foreign_Object_ST["new"]();
            Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function(v) {
                return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v.value0)(v.value1)(s));
            })();
            return s;
        });
    };
};
var freezeST = $foreign["_copyST"];
var foldMaybe = function(f) {
    return function(z) {
        return function(m) {
            return $foreign["_foldSCObject"](m, z, f, Data_Maybe.fromMaybe);
        };
    };
};
var foldM = function(dictMonad) {
    return function(f) {
        return function(z) {
            return $foreign["_foldM"](Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
        };
    };
};
var union = function(m) {
    return mutate(function(s) {
        return foldM(Control_Monad_ST_Internal.monadST)(function(s$prime) {
            return function(k) {
                return function(v) {
                    return Foreign_Object_ST.poke(k)(v)(s$prime);
                };
            };
        })(s)(m);
    });
};
var unions = function(dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);
};
var unionWith = function(f) {
    return function(m1) {
        return function(m2) {
            return mutate(function(s1) {
                return foldM(Control_Monad_ST_Internal.monadST)(function(s2) {
                    return function(k) {
                        return function(v1) {
                            return Foreign_Object_ST.poke(k)($foreign["_lookup"](v1, function(v2) {
                                return f(v1)(v2);
                            }, k, m2))(s2);
                        };
                    };
                })(s1)(m1);
            })(m2);
        };
    };
};
var semigroupObject = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(unionWith(Data_Semigroup.append(dictSemigroup)));
};
var monoidObject = function(dictSemigroup) {
    return new Data_Monoid.Monoid(function() {
        return semigroupObject(dictSemigroup);
    }, $foreign.empty);
};
var fold = $foreign["_foldM"](Data_Function.applyFlipped);
var foldMap = function(dictMonoid) {
    return function(f) {
        return fold(function(acc) {
            return function(k) {
                return function(v) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
};
var foldableObject = new Data_Foldable.Foldable(function(dictMonoid) {
    return function(f) {
        return foldMap(dictMonoid)(Data_Function["const"](f));
    };
}, function(f) {
    return fold(function(z) {
        return function(v) {
            return f(z);
        };
    });
}, function(f) {
    return function(z) {
        return function(m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var foldableWithIndexObject = new Data_FoldableWithIndex.FoldableWithIndex(function() {
    return foldableObject;
}, function(dictMonoid) {
    return foldMap(dictMonoid);
}, function(f) {
    return fold(Data_Function.flip(f));
}, function(f) {
    return function(z) {
        return function(m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
        };
    };
});
var traversableWithIndexObject = new Data_TraversableWithIndex.TraversableWithIndex(function() {
    return foldableWithIndexObject;
}, function() {
    return functorWithIndexObject;
}, function() {
    return traversableObject;
}, function(dictApplicative) {
    return function(f) {
        return function(ms) {
            return fold(function(acc) {
                return function(k) {
                    return function(v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                    };
                };
            })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
        };
    };
});
var traversableObject = new Data_Traversable.Traversable(function() {
    return foldableObject;
}, function() {
    return functorObject;
}, function(dictApplicative) {
    return Data_Traversable.traverse(traversableObject)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function(dictApplicative) {
    var $43 = Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative);
    return function($44) {
        return $43(Data_Function["const"]($44));
    };
});
var filterWithKey = function(predicate) {
    return function(m) {
        var go = function() {
            var step = function(acc) {
                return function(k) {
                    return function(v) {
                        var $33 = predicate(k)(v);
                        if ($33) return Foreign_Object_ST.poke(k)(v)(acc);
                        return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(acc);
                    };
                };
            };
            return function __do() {
                var m$prime = Foreign_Object_ST["new"]();
                return foldM(Control_Monad_ST_Internal.monadST)(step)(m$prime)(m)();
            };
        }();
        return $foreign.runST(go);
    };
};
var filterKeys = function(predicate) {
    return filterWithKey(function($45) {
        return Data_Function["const"](predicate($45));
    });
};
var filter = function(predicate) {
    return filterWithKey(Data_Function["const"](predicate));
};
var eqObject = function(dictEq) {
    return new Data_Eq.Eq(function(m1) {
        return function(m2) {
            return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
        };
    });
};
var ordObject = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqObject(dictOrd.Eq0());
    }, function(m1) {
        return function(m2) {
            return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd)))(toAscArray(m1))(toAscArray(m2));
        };
    });
};
var eq1Object = new Data_Eq.Eq1(function(dictEq) {
    return Data_Eq.eq(eqObject(dictEq));
});
var $$delete = function(k) {
    return mutate(Foreign_Object_ST["delete"](k));
};
var pop = function(k) {
    return function(m) {
        return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(lookup(k)(m))(function(a) {
            return new Data_Tuple.Tuple(a, $$delete(k)(m));
        });
    };
};
var alter = function(f) {
    return function(k) {
        return function(m) {
            var v = f(lookup(k)(m));
            if (v instanceof Data_Maybe.Nothing) return $$delete(k)(m);
            if (v instanceof Data_Maybe.Just) return insert(k)(v.value0)(m);
            throw new Error("Failed pattern match at Foreign.Object (line 209, column 15 - line 211, column 25): " + [
                v.constructor.name
            ]);
        };
    };
};
var update = function(f) {
    return function(k) {
        return function(m) {
            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
    };
};
module.exports = {
    isEmpty: isEmpty,
    singleton: singleton,
    insert: insert,
    lookup: lookup,
    toUnfoldable: toUnfoldable,
    toAscUnfoldable: toAscUnfoldable,
    fromFoldable: fromFoldable,
    fromFoldableWith: fromFoldableWith,
    fromHomogeneous: fromHomogeneous,
    "delete": $$delete,
    pop: pop,
    member: member,
    alter: alter,
    update: update,
    mapWithKey: mapWithKey,
    filterWithKey: filterWithKey,
    filterKeys: filterKeys,
    filter: filter,
    values: values,
    union: union,
    unionWith: unionWith,
    unions: unions,
    isSubmap: isSubmap,
    fold: fold,
    foldMap: foldMap,
    foldM: foldM,
    foldMaybe: foldMaybe,
    thawST: thawST,
    freezeST: freezeST,
    functorObject: functorObject,
    functorWithIndexObject: functorWithIndexObject,
    foldableObject: foldableObject,
    foldableWithIndexObject: foldableWithIndexObject,
    traversableObject: traversableObject,
    traversableWithIndexObject: traversableWithIndexObject,
    eqObject: eqObject,
    eq1Object: eq1Object,
    ordObject: ordObject,
    showObject: showObject,
    semigroupObject: semigroupObject,
    monoidObject: monoidObject,
    empty: $foreign.empty,
    size: $foreign.size,
    keys: $foreign.keys,
    all: $foreign.all,
    runST: $foreign.runST,
    toArrayWithKey: $foreign.toArrayWithKey
};

},{"./foreign.js":"gRhFg","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Monad.ST.Internal/index.js":"gv8IF","../Data.Array/index.js":"7x0bj","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.FoldableWithIndex/index.js":"b0hJn","../Data.Function/index.js":"cuwEt","../Data.Function.Uncurried/index.js":"69cE7","../Data.Functor/index.js":"iy1jO","../Data.FunctorWithIndex/index.js":"9mTwC","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW","../Data.Traversable/index.js":"i5Kon","../Data.TraversableWithIndex/index.js":"bLveW","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk","../Foreign.Object.ST/index.js":"7WhNb","../Unsafe.Coerce/index.js":"6gO81"}],"gRhFg":[function(require,module,exports) {
"use strict";
exports._copyST = function(m) {
    return function() {
        var r = {
        };
        for(var k in m)if (hasOwnProperty.call(m, k)) r[k] = m[k];
        return r;
    };
};
exports.empty = {
};
exports.runST = function(f) {
    return f();
};
exports._fmapObject = function(m0, f) {
    var m = {
    };
    for(var k in m0)if (hasOwnProperty.call(m0, k)) m[k] = f(m0[k]);
    return m;
};
exports._mapWithKey = function(m0, f) {
    var m = {
    };
    for(var k in m0)if (hasOwnProperty.call(m0, k)) m[k] = f(k)(m0[k]);
    return m;
};
exports._foldM = function(bind) {
    return function(f) {
        return function(mz) {
            return function(m) {
                var acc = mz;
                function g(k) {
                    return function(z) {
                        return f(z)(k)(m[k]);
                    };
                }
                for(var k in m)if (hasOwnProperty.call(m, k)) acc = bind(acc)(g(k));
                return acc;
            };
        };
    };
};
exports._foldSCObject = function(m, z, f, fromMaybe) {
    var acc = z;
    for(var k in m)if (hasOwnProperty.call(m, k)) {
        var maybeR = f(acc)(k)(m[k]);
        var r = fromMaybe(null)(maybeR);
        if (r === null) return acc;
        else acc = r;
    }
    return acc;
};
exports.all = function(f) {
    return function(m) {
        for(var k in m){
            if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
        }
        return true;
    };
};
exports.size = function(m) {
    var s = 0;
    for(var k in m)if (hasOwnProperty.call(m, k)) ++s;
    return s;
};
exports._lookup = function(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
};
exports._lookupST = function(no, yes, k, m) {
    return function() {
        return k in m ? yes(m[k]) : no;
    };
};
function toArrayWithKey(f) {
    return function(m) {
        var r = [];
        for(var k in m)if (hasOwnProperty.call(m, k)) r.push(f(k)(m[k]));
        return r;
    };
}
exports.toArrayWithKey = toArrayWithKey;
exports.keys = Object.keys || toArrayWithKey(function(k) {
    return function() {
        return k;
    };
});

},{}],"69cE7":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var runFn1 = function(f) {
    return f;
};
var mkFn1 = function(f) {
    return f;
};
module.exports = {
    mkFn1: mkFn1,
    runFn1: runFn1,
    mkFn0: $foreign.mkFn0,
    mkFn2: $foreign.mkFn2,
    mkFn3: $foreign.mkFn3,
    mkFn4: $foreign.mkFn4,
    mkFn5: $foreign.mkFn5,
    mkFn6: $foreign.mkFn6,
    mkFn7: $foreign.mkFn7,
    mkFn8: $foreign.mkFn8,
    mkFn9: $foreign.mkFn9,
    mkFn10: $foreign.mkFn10,
    runFn0: $foreign.runFn0,
    runFn2: $foreign.runFn2,
    runFn3: $foreign.runFn3,
    runFn4: $foreign.runFn4,
    runFn5: $foreign.runFn5,
    runFn6: $foreign.runFn6,
    runFn7: $foreign.runFn7,
    runFn8: $foreign.runFn8,
    runFn9: $foreign.runFn9,
    runFn10: $foreign.runFn10
};

},{"./foreign.js":"4sQnn"}],"4sQnn":[function(require,module,exports) {
"use strict";
// module Data.Function.Uncurried
exports.mkFn0 = function(fn) {
    return function() {
        return fn();
    };
};
exports.mkFn2 = function(fn) {
    /* jshint maxparams: 2 */ return function(a, b) {
        return fn(a)(b);
    };
};
exports.mkFn3 = function(fn) {
    /* jshint maxparams: 3 */ return function(a, b, c) {
        return fn(a)(b)(c);
    };
};
exports.mkFn4 = function(fn) {
    /* jshint maxparams: 4 */ return function(a, b, c, d) {
        return fn(a)(b)(c)(d);
    };
};
exports.mkFn5 = function(fn) {
    /* jshint maxparams: 5 */ return function(a, b, c, d, e) {
        return fn(a)(b)(c)(d)(e);
    };
};
exports.mkFn6 = function(fn) {
    /* jshint maxparams: 6 */ return function(a, b, c, d, e, f) {
        return fn(a)(b)(c)(d)(e)(f);
    };
};
exports.mkFn7 = function(fn) {
    /* jshint maxparams: 7 */ return function(a, b, c, d, e, f, g) {
        return fn(a)(b)(c)(d)(e)(f)(g);
    };
};
exports.mkFn8 = function(fn) {
    /* jshint maxparams: 8 */ return function(a, b, c, d, e, f, g, h) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h);
    };
};
exports.mkFn9 = function(fn) {
    /* jshint maxparams: 9 */ return function(a, b, c, d, e, f, g, h, i) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
    };
};
exports.mkFn10 = function(fn) {
    /* jshint maxparams: 10 */ return function(a, b, c, d, e, f, g, h, i, j) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
    };
};
exports.runFn0 = function(fn) {
    return fn();
};
exports.runFn2 = function(fn) {
    return function(a) {
        return function(b) {
            return fn(a, b);
        };
    };
};
exports.runFn3 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return fn(a, b, c);
            };
        };
    };
};
exports.runFn4 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return fn(a, b, c, d);
                };
            };
        };
    };
};
exports.runFn5 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return fn(a, b, c, d, e);
                    };
                };
            };
        };
    };
};
exports.runFn6 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return fn(a, b, c, d, e, f);
                        };
                    };
                };
            };
        };
    };
};
exports.runFn7 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return fn(a, b, c, d, e, f, g);
                            };
                        };
                    };
                };
            };
        };
    };
};
exports.runFn8 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return fn(a, b, c, d, e, f, g, h);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
exports.runFn9 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return fn(a, b, c, d, e, f, g, h, i);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
exports.runFn10 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function(j) {
                                            return fn(a, b, c, d, e, f, g, h, i, j);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

},{}],"7CNtl":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Applicative_Free = require("../Control.Applicative.Free/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Halogen_Data_Slot = require("../Halogen.Data.Slot/index.js");
var Halogen_Query_ChildQuery = require("../Halogen.Query.ChildQuery/index.js");
var Halogen_Subscription = require("../Halogen.Subscription/index.js");
var SubscriptionId = function(x) {
    return x;
};
var ForkId = function(x) {
    return x;
};
var State = function() {
    function State1(value0) {
        this.value0 = value0;
    }
    State1.create = function(value0) {
        return new State1(value0);
    };
    return State1;
}();
var Subscribe = function() {
    function Subscribe1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Subscribe1.create = function(value0) {
        return function(value1) {
            return new Subscribe1(value0, value1);
        };
    };
    return Subscribe1;
}();
var Unsubscribe = function() {
    function Unsubscribe1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Unsubscribe1.create = function(value0) {
        return function(value1) {
            return new Unsubscribe1(value0, value1);
        };
    };
    return Unsubscribe1;
}();
var Lift = function() {
    function Lift1(value0) {
        this.value0 = value0;
    }
    Lift1.create = function(value0) {
        return new Lift1(value0);
    };
    return Lift1;
}();
var ChildQuery = function() {
    function ChildQuery1(value0) {
        this.value0 = value0;
    }
    ChildQuery1.create = function(value0) {
        return new ChildQuery1(value0);
    };
    return ChildQuery1;
}();
var Raise = function() {
    function Raise1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Raise1.create = function(value0) {
        return function(value1) {
            return new Raise1(value0, value1);
        };
    };
    return Raise1;
}();
var Par = function() {
    function Par1(value0) {
        this.value0 = value0;
    }
    Par1.create = function(value0) {
        return new Par1(value0);
    };
    return Par1;
}();
var Fork = function() {
    function Fork1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Fork1.create = function(value0) {
        return function(value1) {
            return new Fork1(value0, value1);
        };
    };
    return Fork1;
}();
var Kill = function() {
    function Kill1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Kill1.create = function(value0) {
        return function(value1) {
            return new Kill1(value0, value1);
        };
    };
    return Kill1;
}();
var GetRef = function() {
    function GetRef1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    GetRef1.create = function(value0) {
        return function(value1) {
            return new GetRef1(value0, value1);
        };
    };
    return GetRef1;
}();
var HalogenAp = function(x) {
    return x;
};
var HalogenM = function(x) {
    return x;
};
var unsubscribe = function(sid) {
    return HalogenM(Control_Monad_Free.liftF(new Unsubscribe(sid, Data_Unit.unit)));
};
var subscribe$prime = function(esc) {
    return HalogenM(Control_Monad_Free.liftF(new Subscribe(esc, Data_Function["const"](Data_Unit.unit))));
};
var subscribe = function(es) {
    return HalogenM(Control_Monad_Free.liftF(new Subscribe(function(v) {
        return es;
    }, Control_Category.identity(Control_Category.categoryFn))));
};
var semigroupHalogenM = function(dictSemigroup) {
    return Control_Monad_Free.semigroupFree(dictSemigroup);
};
var raise = function(o) {
    return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
};
var queryAll = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(label) {
                return function(q) {
                    var catMapMaybes = function(dictOrd1) {
                        return Data_FoldableWithIndex.foldrWithIndex(Data_Map_Internal.foldableWithIndexMap)(function(k) {
                            return function(v) {
                                return function(acc) {
                                    return Data_Maybe.maybe(acc)(Data_Function.flip(Data_Map_Internal.insert(dictOrd1)(k))(acc))(v);
                                };
                            };
                        })(Data_Map_Internal.empty);
                    };
                    return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function(dictApplicative) {
                        return function(k) {
                            var $128 = Data_Functor.map(dictApplicative.Apply0().Functor0())(catMapMaybes(dictOrd));
                            var $129 = Data_Traversable.traverse(Data_Map_Internal.traversableMap)(dictApplicative)(k);
                            var $130 = Halogen_Data_Slot.slots()(dictIsSymbol)(dictOrd)(label);
                            return function($131) {
                                return $128($129($130($131)));
                            };
                        };
                    }, q, Control_Category.identity(Control_Category.categoryFn))))));
                };
            };
        };
    };
};
var query = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(label) {
                return function(p) {
                    return function(q) {
                        return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function(dictApplicative) {
                            return function(k) {
                                var $132 = Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value))(k);
                                var $133 = Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p);
                                return function($134) {
                                    return $132($133($134));
                                };
                            };
                        }, q, Control_Category.identity(Control_Category.categoryFn))))));
                    };
                };
            };
        };
    };
};
var ordSubscriptionId = Data_Ord.ordInt;
var ordForkId = Data_Ord.ordInt;
var newtypeHalogenAp = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monoidHalogenM = function(dictMonoid) {
    return Control_Monad_Free.monoidFree(dictMonoid);
};
var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
    return function($135) {
        return HalogenM(Control_Monad_Free.liftF(Lift.create($135)));
    };
});
var monadHalogenM = Control_Monad_Free.freeMonad;
var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function() {
    return monadHalogenM;
}, function($136) {
    return HalogenM(Control_Monad_Free.liftF(State.create($136)));
});
var monadTellHalogenM = function(dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function() {
        return monadHalogenM;
    }, dictMonadTell.Semigroup0, function() {
        var $137 = Control_Monad_Writer_Class.tell(dictMonadTell);
        return function($138) {
            return HalogenM(Control_Monad_Free.liftF(Lift.create($137($138))));
        };
    }());
};
var monadThrowHalogenM = function(dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function() {
        return monadHalogenM;
    }, function() {
        var $139 = Control_Monad_Error_Class.throwError(dictMonadThrow);
        return function($140) {
            return HalogenM(Control_Monad_Free.liftF(Lift.create($139($140))));
        };
    }());
};
var monadEffectHalogenM = function(dictMonadEffect) {
    return new Effect_Class.MonadEffect(function() {
        return monadHalogenM;
    }, function() {
        var $141 = Effect_Class.liftEffect(dictMonadEffect);
        return function($142) {
            return HalogenM(Control_Monad_Free.liftF(Lift.create($141($142))));
        };
    }());
};
var monadAskHalogenM = function(dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function() {
        return monadHalogenM;
    }, HalogenM(Control_Monad_Free.liftF(new Lift(Control_Monad_Reader_Class.ask(dictMonadAsk)))));
};
var monadAffHalogenM = function(dictMonadAff) {
    return new Effect_Aff_Class.MonadAff(function() {
        return monadEffectHalogenM(dictMonadAff.MonadEffect0());
    }, function() {
        var $143 = Effect_Aff_Class.liftAff(dictMonadAff);
        return function($144) {
            return HalogenM(Control_Monad_Free.liftF(Lift.create($143($144))));
        };
    }());
};
var mapOutput = function(f) {
    return function(v) {
        var go = function(v1) {
            if (v1 instanceof State) return new State(v1.value0);
            if (v1 instanceof Subscribe) return new Subscribe(v1.value0, v1.value1);
            if (v1 instanceof Unsubscribe) return new Unsubscribe(v1.value0, v1.value1);
            if (v1 instanceof Lift) return new Lift(v1.value0);
            if (v1 instanceof ChildQuery) return new ChildQuery(v1.value0);
            if (v1 instanceof Raise) return new Raise(f(v1.value0), v1.value1);
            if (v1 instanceof Par) return new Par(Data_Newtype.over()()(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapOutput(f)))(v1.value0));
            if (v1 instanceof Fork) return new Fork(mapOutput(f)(v1.value0), v1.value1);
            if (v1 instanceof Kill) return new Kill(v1.value0, v1.value1);
            if (v1 instanceof GetRef) return new GetRef(v1.value0, v1.value1);
            throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 279, column 8 - line 289, column 29): " + [
                v1.constructor.name
            ]);
        };
        return Control_Monad_Free.hoistFree(go)(v);
    };
};
var mapAction = function(dictFunctor) {
    return function(f) {
        return function(v) {
            var go = function(v1) {
                if (v1 instanceof State) return new State(v1.value0);
                if (v1 instanceof Subscribe) return new Subscribe(function() {
                    var $145 = Data_Functor.map(Halogen_Subscription.functorEmitter)(f);
                    return function($146) {
                        return $145(v1.value0($146));
                    };
                }(), v1.value1);
                if (v1 instanceof Unsubscribe) return new Unsubscribe(v1.value0, v1.value1);
                if (v1 instanceof Lift) return new Lift(v1.value0);
                if (v1 instanceof ChildQuery) return new ChildQuery(v1.value0);
                if (v1 instanceof Raise) return new Raise(v1.value0, v1.value1);
                if (v1 instanceof Par) return new Par(Data_Newtype.over()()(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapAction(dictFunctor)(f)))(v1.value0));
                if (v1 instanceof Fork) return new Fork(mapAction(dictFunctor)(f)(v1.value0), v1.value1);
                if (v1 instanceof Kill) return new Kill(v1.value0, v1.value1);
                if (v1 instanceof GetRef) return new GetRef(v1.value0, v1.value1);
                throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 259, column 8 - line 269, column 29): " + [
                    v1.constructor.name
                ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var kill = function(fid) {
    return HalogenM(Control_Monad_Free.liftF(new Kill(fid, Data_Unit.unit)));
};
var imapState = function(f) {
    return function(f$prime) {
        return function(v) {
            var go = function(v1) {
                if (v1 instanceof State) return new State(function() {
                    var $147 = Data_Functor.map(Data_Tuple.functorTuple)(f);
                    return function($148) {
                        return $147(v1.value0(f$prime($148)));
                    };
                }());
                if (v1 instanceof Subscribe) return new Subscribe(v1.value0, v1.value1);
                if (v1 instanceof Unsubscribe) return new Unsubscribe(v1.value0, v1.value1);
                if (v1 instanceof Lift) return new Lift(v1.value0);
                if (v1 instanceof ChildQuery) return new ChildQuery(v1.value0);
                if (v1 instanceof Raise) return new Raise(v1.value0, v1.value1);
                if (v1 instanceof Par) return new Par(Data_Newtype.over()()(HalogenAp)(Control_Applicative_Free.hoistFreeAp(imapState(f)(f$prime)))(v1.value0));
                if (v1 instanceof Fork) return new Fork(imapState(f)(f$prime)(v1.value0), v1.value1);
                if (v1 instanceof Kill) return new Kill(v1.value0, v1.value1);
                if (v1 instanceof GetRef) return new GetRef(v1.value0, v1.value1);
                throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 238, column 8 - line 248, column 29): " + [
                    v1.constructor.name
                ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var hoist = function(dictFunctor) {
    return function(nat) {
        return function(v) {
            var go = function(v1) {
                if (v1 instanceof State) return new State(v1.value0);
                if (v1 instanceof Subscribe) return new Subscribe(v1.value0, v1.value1);
                if (v1 instanceof Unsubscribe) return new Unsubscribe(v1.value0, v1.value1);
                if (v1 instanceof Lift) return new Lift(nat(v1.value0));
                if (v1 instanceof ChildQuery) return new ChildQuery(v1.value0);
                if (v1 instanceof Raise) return new Raise(v1.value0, v1.value1);
                if (v1 instanceof Par) return new Par(Data_Newtype.over()()(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));
                if (v1 instanceof Fork) return new Fork(hoist(dictFunctor)(nat)(v1.value0), v1.value1);
                if (v1 instanceof Kill) return new Kill(v1.value0, v1.value1);
                if (v1 instanceof GetRef) return new GetRef(v1.value0, v1.value1);
                throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 300, column 8 - line 310, column 29): " + [
                    v1.constructor.name
                ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var getRef = function(p) {
    return HalogenM(Control_Monad_Free.liftF(new GetRef(p, Control_Category.identity(Control_Category.categoryFn))));
};
var functorHalogenM = Control_Monad_Free.freeFunctor;
var functorHalogenAp = Control_Applicative_Free.functorFreeAp;
var functorHalogenF = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        return function(v) {
            if (v instanceof State) return new State(function() {
                var $149 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorTuple)(f);
                return function($150) {
                    return $149(v.value0($150));
                };
            }());
            if (v instanceof Subscribe) return new Subscribe(v.value0, function($151) {
                return f(v.value1($151));
            });
            if (v instanceof Unsubscribe) return new Unsubscribe(v.value0, f(v.value1));
            if (v instanceof Lift) return new Lift(Data_Functor.map(dictFunctor)(f)(v.value0));
            if (v instanceof ChildQuery) return new ChildQuery(Data_Functor.map(Halogen_Query_ChildQuery.functorChildQuery)(f)(v.value0));
            if (v instanceof Raise) return new Raise(v.value0, f(v.value1));
            if (v instanceof Par) return new Par(Data_Functor.map(functorHalogenAp)(f)(v.value0));
            if (v instanceof Fork) return new Fork(v.value0, function($152) {
                return f(v.value1($152));
            });
            if (v instanceof Kill) return new Kill(v.value0, f(v.value1));
            if (v instanceof GetRef) return new GetRef(v.value0, function($153) {
                return f(v.value1($153));
            });
            throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 56, column 11 - line 66, column 37): " + [
                v.constructor.name
            ]);
        };
    });
};
var fork = function(hmu) {
    return HalogenM(Control_Monad_Free.liftF(new Fork(hmu, Control_Category.identity(Control_Category.categoryFn))));
};
var eqSubscriptionId = Data_Eq.eqInt;
var eqForkId = Data_Eq.eqInt;
var bindHalogenM = Control_Monad_Free.freeBind;
var applyHalogenM = Control_Monad_Free.freeApply;
var applyHalogenAp = Control_Applicative_Free.applyFreeAp;
var applicativeHalogenM = Control_Monad_Free.freeApplicative;
var monadRecHalogenM = new Control_Monad_Rec_Class.MonadRec(function() {
    return monadHalogenM;
}, function(k) {
    return function(a) {
        return Control_Bind.bind(bindHalogenM)(k(a))(function(v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) return Control_Monad_Rec_Class.tailRecM(monadRecHalogenM)(k)(v.value0);
            if (v instanceof Control_Monad_Rec_Class.Done) return Control_Applicative.pure(applicativeHalogenM)(v.value0);
            throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 103, column 26 - line 105, column 21): " + [
                v.constructor.name
            ]);
        });
    };
});
var applicativeHalogenAp = Control_Applicative_Free.applicativeFreeAp;
var parallelHalogenM = new Control_Parallel_Class.Parallel(function() {
    return applicativeHalogenAp;
}, function() {
    return monadHalogenM;
}, function($154) {
    return HalogenAp(Control_Applicative_Free.liftFreeAp($154));
}, function($155) {
    return HalogenM(Control_Monad_Free.liftF(Par.create($155)));
});
module.exports = {
    State: State,
    Subscribe: Subscribe,
    Unsubscribe: Unsubscribe,
    Lift: Lift,
    ChildQuery: ChildQuery,
    Raise: Raise,
    Par: Par,
    Fork: Fork,
    Kill: Kill,
    GetRef: GetRef,
    HalogenM: HalogenM,
    HalogenAp: HalogenAp,
    raise: raise,
    query: query,
    queryAll: queryAll,
    SubscriptionId: SubscriptionId,
    subscribe: subscribe,
    "subscribe'": subscribe$prime,
    unsubscribe: unsubscribe,
    ForkId: ForkId,
    fork: fork,
    kill: kill,
    getRef: getRef,
    imapState: imapState,
    mapAction: mapAction,
    mapOutput: mapOutput,
    hoist: hoist,
    functorHalogenF: functorHalogenF,
    functorHalogenM: functorHalogenM,
    applyHalogenM: applyHalogenM,
    applicativeHalogenM: applicativeHalogenM,
    bindHalogenM: bindHalogenM,
    monadHalogenM: monadHalogenM,
    semigroupHalogenM: semigroupHalogenM,
    monoidHalogenM: monoidHalogenM,
    monadEffectHalogenM: monadEffectHalogenM,
    monadAffHalogenM: monadAffHalogenM,
    parallelHalogenM: parallelHalogenM,
    monadTransHalogenM: monadTransHalogenM,
    monadRecHalogenM: monadRecHalogenM,
    monadStateHalogenM: monadStateHalogenM,
    monadAskHalogenM: monadAskHalogenM,
    monadTellHalogenM: monadTellHalogenM,
    monadThrowHalogenM: monadThrowHalogenM,
    newtypeHalogenAp: newtypeHalogenAp,
    functorHalogenAp: functorHalogenAp,
    applyHalogenAp: applyHalogenAp,
    applicativeHalogenAp: applicativeHalogenAp,
    eqSubscriptionId: eqSubscriptionId,
    ordSubscriptionId: ordSubscriptionId,
    eqForkId: eqForkId,
    ordForkId: ordForkId
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Applicative.Free/index.js":"lm4tQ","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Monad.Error.Class/index.js":"acXO9","../Control.Monad.Free/index.js":"jYgqw","../Control.Monad.Reader.Class/index.js":"3BEj9","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Monad.State.Class/index.js":"enW6F","../Control.Monad.Trans.Class/index.js":"9pz5v","../Control.Monad.Writer.Class/index.js":"6wyz5","../Control.Parallel.Class/index.js":"3BOQZ","../Data.Bifunctor/index.js":"4aJ07","../Data.Eq/index.js":"c3b8F","../Data.FoldableWithIndex/index.js":"b0hJn","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Map.Internal/index.js":"iS1Sf","../Data.Maybe/index.js":"ePH81","../Data.Newtype/index.js":"czJbt","../Data.Ord/index.js":"f14nh","../Data.Traversable/index.js":"i5Kon","../Data.Tuple/index.js":"eOBbM","../Data.Unit/index.js":"d7oKp","../Effect.Aff.Class/index.js":"1okoq","../Effect.Class/index.js":"53rRA","../Halogen.Data.Slot/index.js":"elbaz","../Halogen.Query.ChildQuery/index.js":"7GVqs","../Halogen.Subscription/index.js":"4FimT"}],"lm4tQ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Const = require("../Data.Const/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Pure = function() {
    function Pure1(value0) {
        this.value0 = value0;
    }
    Pure1.create = function(value0) {
        return new Pure1(value0);
    };
    return Pure1;
}();
var Lift = function() {
    function Lift1(value0) {
        this.value0 = value0;
    }
    Lift1.create = function(value0) {
        return new Lift1(value0);
    };
    return Lift1;
}();
var Ap = function() {
    function Ap1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Ap1.create = function(value0) {
        return function(value1) {
            return new Ap1(value0, value1);
        };
    };
    return Ap1;
}();
var mkAp = function(fba) {
    return function(fb) {
        return new Ap(fba, fb);
    };
};
var liftFreeAp = Lift.create;
var goLeft = function($copy_dictApplicative) {
    return function($copy_fStack) {
        return function($copy_valStack) {
            return function($copy_nat) {
                return function($copy_func) {
                    return function($copy_count) {
                        var $tco_var_dictApplicative = $copy_dictApplicative;
                        var $tco_var_fStack = $copy_fStack;
                        var $tco_var_valStack = $copy_valStack;
                        var $tco_var_nat = $copy_nat;
                        var $tco_var_func = $copy_func;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
                            if (func instanceof Pure) {
                                $tco_done = true;
                                return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                    func: Control_Applicative.pure(dictApplicative)(func.value0),
                                    count: count
                                }, fStack), valStack);
                            }
                            if (func instanceof Lift) {
                                $tco_done = true;
                                return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                    func: nat(func.value0),
                                    count: count
                                }, fStack), valStack);
                            }
                            if (func instanceof Ap) {
                                $tco_var_dictApplicative = dictApplicative;
                                $tco_var_fStack = fStack;
                                $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                                $tco_var_nat = nat;
                                $tco_var_func = func.value0;
                                $copy_count = count + 1 | 0;
                                return;
                            }
                            throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [
                                func.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
                        return $tco_result;
                    };
                };
            };
        };
    };
};
var goApply = function($copy_dictApplicative) {
    return function($copy_fStack) {
        return function($copy_vals) {
            return function($copy_gVal) {
                var $tco_var_dictApplicative = $copy_dictApplicative;
                var $tco_var_fStack = $copy_fStack;
                var $tco_var_vals = $copy_vals;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(dictApplicative, fStack, vals, gVal) {
                    if (fStack instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return new Data_Either.Left(gVal);
                    }
                    if (fStack instanceof Data_List_Types.Cons) {
                        var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
                        var $14 = fStack.value0.count === 1;
                        if ($14) {
                            if (fStack.value1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return new Data_Either.Left(gRes);
                            }
                            $tco_var_dictApplicative = dictApplicative;
                            $tco_var_fStack = fStack.value1;
                            $tco_var_vals = vals;
                            $copy_gVal = gRes;
                            return;
                        }
                        if (vals instanceof Data_List_Types.Nil) {
                            $tco_done = true;
                            return new Data_Either.Left(gRes);
                        }
                        if (vals instanceof Data_List_Types.Cons) {
                            $tco_done = true;
                            return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                func: gRes,
                                count: fStack.value0.count - 1 | 0
                            }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
                        }
                        throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [
                            vals.constructor.name
                        ]);
                    }
                    throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [
                        fStack.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
                return $tco_result;
            };
        };
    };
};
var functorFreeAp = new Data_Functor.Functor(function(f) {
    return function(x) {
        return mkAp(new Pure(f))(x);
    };
});
var foldFreeAp = function(dictApplicative) {
    return function(nat) {
        return function(z) {
            var go = function($copy_v) {
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v) {
                    if (v.value1.value0 instanceof Pure) {
                        var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));
                        if (v1 instanceof Data_Either.Left) {
                            $tco_done = true;
                            return v1.value0;
                        }
                        if (v1 instanceof Data_Either.Right) {
                            $copy_v = v1.value0;
                            return;
                        }
                        throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [
                            v1.constructor.name
                        ]);
                    }
                    if (v.value1.value0 instanceof Lift) {
                        var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
                        if (v1 instanceof Data_Either.Left) {
                            $tco_done = true;
                            return v1.value0;
                        }
                        if (v1 instanceof Data_Either.Right) {
                            $copy_v = v1.value0;
                            return;
                        }
                        throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [
                            v1.constructor.name
                        ]);
                    }
                    if (v.value1.value0 instanceof Ap) {
                        var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
                        $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
                        return;
                    }
                    throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [
                        v.value1.value0.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($copy_v);
                return $tco_result;
            };
            return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
        };
    };
};
var retractFreeAp = function(dictApplicative) {
    return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
};
var applyFreeAp = new Control_Apply.Apply(function() {
    return functorFreeAp;
}, function(fba) {
    return function(fb) {
        return mkAp(fba)(fb);
    };
});
var applicativeFreeAp = new Control_Applicative.Applicative(function() {
    return applyFreeAp;
}, Pure.create);
var hoistFreeAp = function(f) {
    return foldFreeAp(applicativeFreeAp)(function($37) {
        return liftFreeAp(f($37));
    });
};
var analyzeFreeAp = function(dictMonoid) {
    return function(k) {
        var $38 = Data_Newtype.unwrap();
        var $39 = foldFreeAp(Data_Const.applicativeConst(dictMonoid))(function($41) {
            return Data_Const.Const(k($41));
        });
        return function($40) {
            return $38($39($40));
        };
    };
};
module.exports = {
    liftFreeAp: liftFreeAp,
    retractFreeAp: retractFreeAp,
    foldFreeAp: foldFreeAp,
    hoistFreeAp: hoistFreeAp,
    analyzeFreeAp: analyzeFreeAp,
    functorFreeAp: functorFreeAp,
    applyFreeAp: applyFreeAp,
    applicativeFreeAp: applicativeFreeAp
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Category/index.js":"dfcPK","../Data.Const/index.js":"hlexi","../Data.Either/index.js":"3WZha","../Data.Functor/index.js":"iy1jO","../Data.List.NonEmpty/index.js":"4sog1","../Data.List.Types/index.js":"80Bba","../Data.Newtype/index.js":"czJbt","../Data.NonEmpty/index.js":"4pAZZ","../Data.Tuple/index.js":"eOBbM"}],"jYgqw":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_CatList = require("../Data.CatList/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var ExpF = function(x) {
    return x;
};
var Free = function() {
    function Free1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Free1.create = function(value0) {
        return function(value1) {
            return new Free1(value0, value1);
        };
    };
    return Free1;
}();
var Return = function() {
    function Return1(value0) {
        this.value0 = value0;
    }
    Return1.create = function(value0) {
        return new Return1(value0);
    };
    return Return1;
}();
var Bind = function() {
    function Bind1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Bind1.create = function(value0) {
        return function(value1) {
            return new Bind1(value0, value1);
        };
    };
    return Bind1;
}();
var toView = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        var runExpF = function(v2) {
            return v2;
        };
        var concatF = function(v2) {
            return function(r) {
                return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
            };
        };
        if (v.value0 instanceof Return) {
            var v2 = Data_CatList.uncons(v.value1);
            if (v2 instanceof Data_Maybe.Nothing) {
                $tco_done = true;
                return new Return(v.value0.value0);
            }
            if (v2 instanceof Data_Maybe.Just) {
                $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                return;
            }
            throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [
                v2.constructor.name
            ]);
        }
        if (v.value0 instanceof Bind) {
            $tco_done = true;
            return new Bind(v.value0.value0, function(a) {
                return concatF(v.value0.value1(a))(v.value1);
            });
        }
        throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [
            v.value0.constructor.name
        ]);
    }
    while(!$tco_done)$tco_result = $tco_loop($copy_v);
    return $tco_result;
};
var runFreeM = function(dictFunctor) {
    return function(dictMonadRec) {
        return function(k) {
            var go = function(f) {
                var v = toView(f);
                if (v instanceof Return) return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));
                if (v instanceof Bind) return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Loop.create)(k(Data_Functor.map(dictFunctor)(v.value1)(v.value0)));
                throw new Error("Failed pattern match at Control.Monad.Free (line 194, column 10 - line 196, column 37): " + [
                    v.constructor.name
                ]);
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
        };
    };
};
var runFree = function(dictFunctor) {
    return function(k) {
        var go = function($copy_f) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(f) {
                var v = toView(f);
                if (v instanceof Return) {
                    $tco_done = true;
                    return v.value0;
                }
                if (v instanceof Bind) {
                    $copy_f = k(Data_Functor.map(dictFunctor)(v.value1)(v.value0));
                    return;
                }
                throw new Error("Failed pattern match at Control.Monad.Free (line 178, column 10 - line 180, column 33): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($copy_f);
            return $tco_result;
        };
        return go;
    };
};
var resume$prime = function(k) {
    return function(j) {
        return function(f) {
            var v = toView(f);
            if (v instanceof Return) return j(v.value0);
            if (v instanceof Bind) return k(v.value0)(v.value1);
            throw new Error("Failed pattern match at Control.Monad.Free (line 213, column 17 - line 215, column 20): " + [
                v.constructor.name
            ]);
        };
    };
};
var resume = function(dictFunctor) {
    return resume$prime(function(g) {
        return function(i) {
            return new Data_Either.Left(Data_Functor.map(dictFunctor)(i)(g));
        };
    })(Data_Either.Right.create);
};
var fromView = function(f) {
    return new Free(f, Data_CatList.empty);
};
var wrap = function(f) {
    return fromView(new Bind(f, Unsafe_Coerce.unsafeCoerce));
};
var suspendF = function(dictApplicative) {
    return function(f) {
        return wrap(Control_Applicative.pure(dictApplicative)(f));
    };
};
var freeMonad = new Control_Monad.Monad(function() {
    return freeApplicative;
}, function() {
    return freeBind;
});
var freeFunctor = new Data_Functor.Functor(function(k) {
    return function(f) {
        return Control_Bind.bindFlipped(freeBind)(function() {
            var $119 = Control_Applicative.pure(freeApplicative);
            return function($120) {
                return $119(k($120));
            };
        }())(f);
    };
});
var freeBind = new Control_Bind.Bind(function() {
    return freeApply;
}, function(v) {
    return function(k) {
        return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
    };
});
var freeApply = new Control_Apply.Apply(function() {
    return freeFunctor;
}, Control_Monad.ap(freeMonad));
var freeApplicative = new Control_Applicative.Applicative(function() {
    return freeApply;
}, function($121) {
    return fromView(Return.create($121));
});
var semigroupFree = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(freeApply)(Data_Semigroup.append(dictSemigroup)));
};
var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function() {
    return freeMonad;
}, function(k) {
    return function(a) {
        return Control_Bind.bind(freeBind)(k(a))(function(v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);
            if (v instanceof Control_Monad_Rec_Class.Done) return Control_Applicative.pure(freeApplicative)(v.value0);
            throw new Error("Failed pattern match at Control.Monad.Free (line 86, column 26 - line 88, column 21): " + [
                v.constructor.name
            ]);
        });
    };
});
var liftF = function(f) {
    return fromView(new Bind(f, function() {
        var $122 = Control_Applicative.pure(freeApplicative);
        return function($123) {
            return $122($123);
        };
    }()));
};
var freeMonadTrans = new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
    return liftF;
});
var monoidFree = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupFree(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(freeApplicative)(Data_Monoid.mempty(dictMonoid)));
};
var substFree = function(k) {
    var go = function(f) {
        var v = toView(f);
        if (v instanceof Return) return Control_Applicative.pure(freeApplicative)(v.value0);
        if (v instanceof Bind) return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));
        throw new Error("Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): " + [
            v.constructor.name
        ]);
    };
    return go;
};
var hoistFree = function(k) {
    return substFree(function($124) {
        return liftF(k($124));
    });
};
var foldableFree = function(dictFunctor) {
    return function(dictFoldable) {
        return new Data_Foldable.Foldable(function(dictMonoid) {
            return function(f) {
                var go = function() {
                    var $125 = resume(dictFunctor);
                    return function($126) {
                        return (function(v) {
                            if (v instanceof Data_Either.Left) return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(go)(v.value0);
                            if (v instanceof Data_Either.Right) return f(v.value0);
                            throw new Error("Failed pattern match at Control.Monad.Free (line 93, column 21 - line 95, column 21): " + [
                                v.constructor.name
                            ]);
                        })($125($126));
                    };
                }();
                return go;
            };
        }, function(f) {
            var go = function(r) {
                var $127 = resume(dictFunctor);
                return function($128) {
                    return (function(v) {
                        if (v instanceof Data_Either.Left) return Data_Foldable.foldl(dictFoldable)(go)(r)(v.value0);
                        if (v instanceof Data_Either.Right) return f(r)(v.value0);
                        throw new Error("Failed pattern match at Control.Monad.Free (line 98, column 23 - line 100, column 23): " + [
                            v.constructor.name
                        ]);
                    })($127($128));
                };
            };
            return go;
        }, function(f) {
            var go = function(r) {
                var $129 = resume(dictFunctor);
                return function($130) {
                    return (function(v) {
                        if (v instanceof Data_Either.Left) return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(go))(r)(v.value0);
                        if (v instanceof Data_Either.Right) return f(v.value0)(r);
                        throw new Error("Failed pattern match at Control.Monad.Free (line 103, column 23 - line 105, column 23): " + [
                            v.constructor.name
                        ]);
                    })($129($130));
                };
            };
            return go;
        });
    };
};
var traversableFree = function(dictTraversable) {
    return new Data_Traversable.Traversable(function() {
        return foldableFree(dictTraversable.Functor0())(dictTraversable.Foldable1());
    }, function() {
        return freeFunctor;
    }, function(dictApplicative) {
        return function(tma) {
            return Data_Traversable.traverse(traversableFree(dictTraversable))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(tma);
        };
    }, function(dictApplicative) {
        return function(f) {
            var go = function() {
                var $131 = resume(dictTraversable.Functor0());
                return function($132) {
                    return (function(v) {
                        if (v instanceof Data_Either.Left) return Data_Functor.map(dictApplicative.Apply0().Functor0())(function() {
                            var $133 = Control_Bind.join(freeBind);
                            return function($134) {
                                return $133(liftF($134));
                            };
                        }())(Data_Traversable.traverse(dictTraversable)(dictApplicative)(go)(v.value0));
                        if (v instanceof Data_Either.Right) return Data_Functor.map(dictApplicative.Apply0().Functor0())(Control_Applicative.pure(freeApplicative))(f(v.value0));
                        throw new Error("Failed pattern match at Control.Monad.Free (line 110, column 21 - line 112, column 30): " + [
                            v.constructor.name
                        ]);
                    })($131($132));
                };
            }();
            return go;
        };
    });
};
var foldFree = function(dictMonadRec) {
    return function(k) {
        var go = function(f) {
            var v = toView(f);
            if (v instanceof Return) return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));
            if (v instanceof Bind) return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(function($135) {
                return Control_Monad_Rec_Class.Loop.create(v.value1($135));
            })(k(v.value0));
            throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [
                v.constructor.name
            ]);
        };
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
};
var eqFree = function(dictFunctor) {
    return function(dictEq1) {
        return function(dictEq) {
            return new Data_Eq.Eq(function(x) {
                return function(y) {
                    var v = resume(dictFunctor)(y);
                    var v1 = resume(dictFunctor)(x);
                    if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) return Data_Eq.eq1(dictEq1)(eqFree(dictFunctor)(dictEq1)(dictEq))(v1.value0)(v.value0);
                    if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) return Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                    return false;
                };
            });
        };
    };
};
var ordFree = function(dictFunctor) {
    return function(dictOrd1) {
        return function(dictOrd) {
            return new Data_Ord.Ord(function() {
                return eqFree(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
            }, function(x) {
                return function(y) {
                    var v = resume(dictFunctor)(y);
                    var v1 = resume(dictFunctor)(x);
                    if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) return Data_Ord.compare1(dictOrd1)(ordFree(dictFunctor)(dictOrd1)(dictOrd))(v1.value0)(v.value0);
                    if (v1 instanceof Data_Either.Left) return Data_Ordering.LT.value;
                    if (v instanceof Data_Either.Left) return Data_Ordering.GT.value;
                    if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) return Data_Ord.compare(dictOrd)(v1.value0)(v.value0);
                    throw new Error("Failed pattern match at Control.Monad.Free (line 56, column 17 - line 60, column 36): " + [
                        v1.constructor.name,
                        v.constructor.name
                    ]);
                };
            });
        };
    };
};
var eq1Free = function(dictFunctor) {
    return function(dictEq1) {
        return new Data_Eq.Eq1(function(dictEq) {
            return Data_Eq.eq(eqFree(dictFunctor)(dictEq1)(dictEq));
        });
    };
};
var ord1Free = function(dictFunctor) {
    return function(dictOrd1) {
        return new Data_Ord.Ord1(function() {
            return eq1Free(dictFunctor)(dictOrd1.Eq10());
        }, function(dictOrd) {
            return Data_Ord.compare(ordFree(dictFunctor)(dictOrd1)(dictOrd));
        });
    };
};
module.exports = {
    suspendF: suspendF,
    wrap: wrap,
    liftF: liftF,
    hoistFree: hoistFree,
    foldFree: foldFree,
    substFree: substFree,
    runFree: runFree,
    runFreeM: runFreeM,
    resume: resume,
    "resume'": resume$prime,
    eqFree: eqFree,
    eq1Free: eq1Free,
    ordFree: ordFree,
    ord1Free: ord1Free,
    freeFunctor: freeFunctor,
    freeBind: freeBind,
    freeApplicative: freeApplicative,
    freeApply: freeApply,
    freeMonad: freeMonad,
    freeMonadTrans: freeMonadTrans,
    freeMonadRec: freeMonadRec,
    foldableFree: foldableFree,
    traversableFree: traversableFree,
    semigroupFree: semigroupFree,
    monoidFree: monoidFree
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Monad/index.js":"alCn2","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Monad.Trans.Class/index.js":"9pz5v","../Data.CatList/index.js":"dNkxT","../Data.Either/index.js":"3WZha","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Traversable/index.js":"i5Kon","../Unsafe.Coerce/index.js":"6gO81"}],"dNkxT":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_CatQueue = require("../Data.CatQueue/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var CatNil = function() {
    function CatNil1() {
    }
    CatNil1.value = new CatNil1();
    return CatNil1;
}();
var CatCons = function() {
    function CatCons1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    CatCons1.create = function(value0) {
        return function(value1) {
            return new CatCons1(value0, value1);
        };
    };
    return CatCons1;
}();
var showCatList = function(dictShow) {
    return new Data_Show.Show(function(v) {
        if (v instanceof CatNil) return "CatNil";
        if (v instanceof CatCons) return "(CatList " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + ")")));
        throw new Error("Failed pattern match at Data.CatList (line 148, column 1 - line 150, column 71): " + [
            v.constructor.name
        ]);
    });
};
var $$null = function(v) {
    if (v instanceof CatNil) return true;
    return false;
};
var link = function(v) {
    return function(v1) {
        if (v instanceof CatNil) return v1;
        if (v1 instanceof CatNil) return v;
        if (v instanceof CatCons) return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
        throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
};
var foldr = function(k) {
    return function(b) {
        return function(q) {
            var foldl = function($copy_v) {
                return function($copy_c) {
                    return function($copy_v1) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_c = $copy_c;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, c, v1) {
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return c;
                            }
                            if (v1 instanceof Data_List_Types.Cons) {
                                $tco_var_v = v;
                                $tco_var_c = v(c)(v1.value0);
                                $copy_v1 = v1.value1;
                                return;
                            }
                            throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [
                                v.constructor.name,
                                c.constructor.name,
                                v1.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                        return $tco_result;
                    };
                };
            };
            var go = function($copy_xs) {
                return function($copy_ys) {
                    var $tco_var_xs = $copy_xs;
                    var $tco_done1 = false;
                    var $tco_result;
                    function $tco_loop(xs, ys) {
                        var v = Data_CatQueue.uncons(xs);
                        if (v instanceof Data_Maybe.Nothing) {
                            $tco_done1 = true;
                            return foldl(function(x) {
                                return function(i) {
                                    return i(x);
                                };
                            })(b)(ys);
                        }
                        if (v instanceof Data_Maybe.Just) {
                            $tco_var_xs = v.value0.value1;
                            $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                            return;
                        }
                        throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [
                            v.constructor.name
                        ]);
                    }
                    while(!$tco_done1)$tco_result = $tco_loop($tco_var_xs, $copy_ys);
                    return $tco_result;
                };
            };
            return go(q)(Data_List_Types.Nil.value);
        };
    };
};
var uncons = function(v) {
    if (v instanceof CatNil) return Data_Maybe.Nothing.value;
    if (v instanceof CatCons) return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, function() {
        var $45 = Data_CatQueue["null"](v.value1);
        if ($45) return CatNil.value;
        return foldr(link)(CatNil.value)(v.value1);
    }()));
    throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [
        v.constructor.name
    ]);
};
var foldableCatList = new Data_Foldable.Foldable(function(dictMonoid) {
    return Data_Foldable.foldMapDefaultL(foldableCatList)(dictMonoid);
}, function(f) {
    var go = function($copy_acc) {
        return function($copy_q) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, q) {
                var v = uncons(q);
                if (v instanceof Data_Maybe.Just) {
                    $tco_var_acc = f(acc)(v.value0.value0);
                    $copy_q = v.value0.value1;
                    return;
                }
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return acc;
                }
                throw new Error("Failed pattern match at Data.CatList (line 157, column 16 - line 159, column 22): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_acc, $copy_q);
            return $tco_result;
        };
    };
    return go;
}, function(f) {
    return function(s) {
        return function(l) {
            return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);
        };
    };
});
var length = Data_Foldable.length(foldableCatList)(Data_Semiring.semiringInt);
var foldMap = function(dictMonoid) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof CatNil) return Data_Monoid.mempty(dictMonoid);
            if (v1 instanceof CatCons) {
                var d = function() {
                    var $54 = Data_CatQueue["null"](v1.value1);
                    if ($54) return CatNil.value;
                    return foldr(link)(CatNil.value)(v1.value1);
                }();
                return Data_Semigroup.append(dictMonoid.Semigroup0())(v(v1.value0))(foldMap(dictMonoid)(v)(d));
            }
            throw new Error("Failed pattern match at Data.CatList (line 135, column 1 - line 135, column 62): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
var empty = CatNil.value;
var append = link;
var cons = function(a) {
    return function(cat) {
        return append(new CatCons(a, Data_CatQueue.empty))(cat);
    };
};
var functorCatList = new Data_Functor.Functor(function(v) {
    return function(v1) {
        if (v1 instanceof CatNil) return CatNil.value;
        if (v1 instanceof CatCons) {
            var d = function() {
                var $59 = Data_CatQueue["null"](v1.value1);
                if ($59) return CatNil.value;
                return foldr(link)(CatNil.value)(v1.value1);
            }();
            return cons(v(v1.value0))(Data_Functor.map(functorCatList)(v)(d));
        }
        throw new Error("Failed pattern match at Data.CatList (line 185, column 1 - line 189, column 26): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
});
var singleton = function(a) {
    return cons(a)(CatNil.value);
};
var traversableCatList = new Data_Traversable.Traversable(function() {
    return foldableCatList;
}, function() {
    return functorCatList;
}, function(dictApplicative) {
    return function(v) {
        if (v instanceof CatNil) return Control_Applicative.pure(dictApplicative)(CatNil.value);
        if (v instanceof CatCons) {
            var d = function() {
                var $63 = Data_CatQueue["null"](v.value1);
                if ($63) return CatNil.value;
                return foldr(link)(CatNil.value)(v.value1);
            }();
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));
        }
        throw new Error("Failed pattern match at Data.CatList (line 175, column 1 - line 183, column 33): " + [
            v.constructor.name
        ]);
    };
}, function(dictApplicative) {
    return function(v) {
        return function(v1) {
            if (v1 instanceof CatNil) return Control_Applicative.pure(dictApplicative)(CatNil.value);
            if (v1 instanceof CatCons) {
                var d = function() {
                    var $68 = Data_CatQueue["null"](v1.value1);
                    if ($68) return CatNil.value;
                    return foldr(link)(CatNil.value)(v1.value1);
                }();
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));
            }
            throw new Error("Failed pattern match at Data.CatList (line 175, column 1 - line 183, column 33): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
});
var semigroupCatList = new Data_Semigroup.Semigroup(append);
var monoidCatList = new Data_Monoid.Monoid(function() {
    return semigroupCatList;
}, CatNil.value);
var monadCatList = new Control_Monad.Monad(function() {
    return applicativeCatList;
}, function() {
    return bindCatList;
});
var bindCatList = new Control_Bind.Bind(function() {
    return applyCatList;
}, Data_Function.flip(foldMap(monoidCatList)));
var applyCatList = new Control_Apply.Apply(function() {
    return functorCatList;
}, Control_Monad.ap(monadCatList));
var applicativeCatList = new Control_Applicative.Applicative(function() {
    return applyCatList;
}, singleton);
var fromFoldable = function(dictFoldable) {
    return function(f) {
        return Data_Foldable.foldMap(dictFoldable)(monoidCatList)(singleton)(f);
    };
};
var snoc = function(cat) {
    return function(a) {
        return append(cat)(new CatCons(a, Data_CatQueue.empty));
    };
};
var unfoldable1CatList = new Data_Unfoldable1.Unfoldable1(function(f) {
    return function(b) {
        var go = function($copy_source) {
            return function($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v.value1 instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return snoc(memo)(v.value0);
                    }
                    if (v.value1 instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value1.value0;
                        $copy_memo = snoc(memo)(v.value0);
                        return;
                    }
                    throw new Error("Failed pattern match at Data.CatList (line 171, column 24 - line 173, column 57): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_source, $copy_memo);
                return $tco_result;
            };
        };
        return go(b)(CatNil.value);
    };
});
var unfoldableCatList = new Data_Unfoldable.Unfoldable(function() {
    return unfoldable1CatList;
}, function(f) {
    return function(b) {
        var go = function($copy_source) {
            return function($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return memo;
                    }
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = snoc(memo)(v.value0.value0);
                        return;
                    }
                    throw new Error("Failed pattern match at Data.CatList (line 164, column 24 - line 166, column 57): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_source, $copy_memo);
                return $tco_result;
            };
        };
        return go(b)(CatNil.value);
    };
});
var altCatList = new Control_Alt.Alt(function() {
    return functorCatList;
}, append);
var plusCatList = new Control_Plus.Plus(function() {
    return altCatList;
}, empty);
var alternativeCatList = new Control_Alternative.Alternative(function() {
    return applicativeCatList;
}, function() {
    return plusCatList;
});
var monadPlusCatList = new Control_MonadPlus.MonadPlus(function() {
    return alternativeCatList;
}, function() {
    return monadCatList;
});
var monadZeroCatList = new Control_MonadZero.MonadZero(function() {
    return alternativeCatList;
}, function() {
    return monadCatList;
}, function() {
    return undefined;
});
module.exports = {
    CatNil: CatNil,
    CatCons: CatCons,
    empty: empty,
    "null": $$null,
    singleton: singleton,
    length: length,
    append: append,
    cons: cons,
    snoc: snoc,
    uncons: uncons,
    fromFoldable: fromFoldable,
    semigroupCatList: semigroupCatList,
    monoidCatList: monoidCatList,
    showCatList: showCatList,
    foldableCatList: foldableCatList,
    unfoldableCatList: unfoldableCatList,
    unfoldable1CatList: unfoldable1CatList,
    traversableCatList: traversableCatList,
    functorCatList: functorCatList,
    applyCatList: applyCatList,
    applicativeCatList: applicativeCatList,
    bindCatList: bindCatList,
    monadCatList: monadCatList,
    altCatList: altCatList,
    plusCatList: plusCatList,
    alternativeCatList: alternativeCatList,
    monadZeroCatList: monadZeroCatList,
    monadPlusCatList: monadPlusCatList
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.CatQueue/index.js":"4DnQH","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.List.Types/index.js":"80Bba","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Semigroup/index.js":"4sNah","../Data.Semiring/index.js":"39btI","../Data.Show/index.js":"b6tNW","../Data.Traversable/index.js":"i5Kon","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk","../Data.Unfoldable1/index.js":"Daf7x"}],"4DnQH":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var CatQueue = function() {
    function CatQueue1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    CatQueue1.create = function(value0) {
        return function(value1) {
            return new CatQueue1(value0, value1);
        };
    };
    return CatQueue1;
}();
var unsnoc = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v.value1 instanceof Data_List_Types.Cons) {
            $tco_done = true;
            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value1.value0, new CatQueue(v.value0, v.value1.value1)));
        }
        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
        }
        if (v.value1 instanceof Data_List_Types.Nil) {
            $copy_v = new CatQueue(Data_List_Types.Nil.value, Data_List.reverse(v.value0));
            return;
        }
        throw new Error("Failed pattern match at Data.CatQueue (line 93, column 1 - line 93, column 63): " + [
            v.constructor.name
        ]);
    }
    while(!$tco_done)$tco_result = $tco_loop($copy_v);
    return $tco_result;
};
var uncons = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
        }
        if (v.value0 instanceof Data_List_Types.Nil) {
            $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
            return;
        }
        if (v.value0 instanceof Data_List_Types.Cons) {
            $tco_done = true;
            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
        }
        throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [
            v.constructor.name
        ]);
    }
    while(!$tco_done)$tco_result = $tco_loop($copy_v);
    return $tco_result;
};
var snoc = function(v) {
    return function(a) {
        return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
    };
};
var showCatQueue = function(dictShow) {
    return new Data_Show.Show(function(v) {
        return "(CatQueue " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value0) + (" " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value1) + ")")));
    });
};
var $$null = function(v) {
    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) return true;
    return false;
};
var length = function(v) {
    return Data_List.length(v.value0) + Data_List.length(v.value1) | 0;
};
var functorCatQueue = new Data_Functor.Functor(function(f) {
    return function(v) {
        return new CatQueue(Data_Functor.map(Data_List_Types.functorList)(f)(v.value0), Data_Functor.map(Data_List_Types.functorList)(f)(v.value1));
    };
});
var foldableCatQueue = new Data_Foldable.Foldable(function(dictMonoid) {
    return Data_Foldable.foldMapDefaultL(foldableCatQueue)(dictMonoid);
}, function(f) {
    var go = function($copy_acc) {
        return function($copy_q) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, q) {
                var v = uncons(q);
                if (v instanceof Data_Maybe.Just) {
                    $tco_var_acc = f(acc)(v.value0.value0);
                    $copy_q = v.value0.value1;
                    return;
                }
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return acc;
                }
                throw new Error("Failed pattern match at Data.CatQueue (line 148, column 16 - line 150, column 22): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_acc, $copy_q);
            return $tco_result;
        };
    };
    return go;
}, function(f) {
    return Data_Foldable.foldrDefault(foldableCatQueue)(f);
});
var semigroupCatQueue = new Data_Semigroup.Semigroup(Data_Foldable.foldl(foldableCatQueue)(snoc));
var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
var monoidCatQueue = new Data_Monoid.Monoid(function() {
    return semigroupCatQueue;
}, empty);
var singleton = snoc(empty);
var fromFoldable = function(dictFoldable) {
    return function(f) {
        return Data_Foldable.foldMap(dictFoldable)(monoidCatQueue)(singleton)(f);
    };
};
var traversableCatQueue = new Data_Traversable.Traversable(function() {
    return foldableCatQueue;
}, function() {
    return functorCatQueue;
}, function(dictApplicative) {
    return Data_Traversable.sequenceDefault(traversableCatQueue)(dictApplicative);
}, function(dictApplicative) {
    return function(f) {
        var $100 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableCatQueue)(snoc)(empty));
        var $101 = Data_Foldable.foldl(foldableCatQueue)(function(acc) {
            var $103 = Control_Apply.lift2(dictApplicative.Apply0())(snoc)(acc);
            return function($104) {
                return $103(f($104));
            };
        })(Control_Applicative.pure(dictApplicative)(empty));
        return function($102) {
            return $100($101($102));
        };
    };
});
var unfoldable1CatQueue = new Data_Unfoldable1.Unfoldable1(function(f) {
    return function(b) {
        var go = function($copy_source) {
            return function($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v.value1 instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return snoc(memo)(v.value0);
                    }
                    if (v.value1 instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value1.value0;
                        $copy_memo = snoc(memo)(v.value0);
                        return;
                    }
                    throw new Error("Failed pattern match at Data.CatQueue (line 155, column 24 - line 157, column 57): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_source, $copy_memo);
                return $tco_result;
            };
        };
        return go(b)(empty);
    };
});
var unfoldableCatQueue = new Data_Unfoldable.Unfoldable(function() {
    return unfoldable1CatQueue;
}, function(f) {
    return function(b) {
        var go = function($copy_source) {
            return function($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return memo;
                    }
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = snoc(memo)(v.value0.value0);
                        return;
                    }
                    throw new Error("Failed pattern match at Data.CatQueue (line 162, column 24 - line 164, column 57): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_source, $copy_memo);
                return $tco_result;
            };
        };
        return go(b)(empty);
    };
});
var cqEq = function(dictEq) {
    var elemEq = Data_Eq.eq(dictEq);
    var go = function($copy_xs) {
        return function($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
                var v = uncons(ys);
                var v1 = uncons(xs);
                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just && elemEq(v1.value0.value0)(v.value0.value0)) {
                    $tco_var_xs = v1.value0.value1;
                    $copy_ys = v.value0.value1;
                    return;
                }
                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return true;
                }
                $tco_done = true;
                return false;
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_xs, $copy_ys);
            return $tco_result;
        };
    };
    return go;
};
var eqCatQueue = function(dictEq) {
    return new Data_Eq.Eq(cqEq(dictEq));
};
var cqCompare = function(dictOrd) {
    var elemCompare = Data_Ord.compare(dictOrd);
    var go = function($copy_xs) {
        return function($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
                var v = uncons(ys);
                var v1 = uncons(xs);
                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just) {
                    var v2 = elemCompare(v1.value0.value0)(v.value0.value0);
                    if (v2 instanceof Data_Ordering.EQ) {
                        $tco_var_xs = v1.value0.value1;
                        $copy_ys = v.value0.value1;
                        return;
                    }
                    $tco_done = true;
                    return v2;
                }
                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return Data_Ordering.GT.value;
                }
                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Just) {
                    $tco_done = true;
                    return Data_Ordering.LT.value;
                }
                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return Data_Ordering.EQ.value;
                }
                throw new Error("Failed pattern match at Data.CatQueue (line 118, column 16 - line 125, column 30): " + [
                    v1.constructor.name,
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_xs, $copy_ys);
            return $tco_result;
        };
    };
    return go;
};
var ordCatQueue = function(dictOrd) {
    return new Data_Ord.Ord(function() {
        return eqCatQueue(dictOrd.Eq0());
    }, cqCompare(dictOrd));
};
var cons = function(a) {
    return function(v) {
        return new CatQueue(new Data_List_Types.Cons(a, v.value0), v.value1);
    };
};
var monadCatQueue = new Control_Monad.Monad(function() {
    return applicativeCatQueue;
}, function() {
    return bindCatQueue;
});
var bindCatQueue = new Control_Bind.Bind(function() {
    return applyCatQueue;
}, Data_Function.flip(Data_Foldable.foldMap(foldableCatQueue)(monoidCatQueue)));
var applyCatQueue = new Control_Apply.Apply(function() {
    return functorCatQueue;
}, Control_Monad.ap(monadCatQueue));
var applicativeCatQueue = new Control_Applicative.Applicative(function() {
    return applyCatQueue;
}, singleton);
var altCatQueue = new Control_Alt.Alt(function() {
    return functorCatQueue;
}, Data_Semigroup.append(semigroupCatQueue));
var plusCatQueue = new Control_Plus.Plus(function() {
    return altCatQueue;
}, empty);
var alternativeCatQueue = new Control_Alternative.Alternative(function() {
    return applicativeCatQueue;
}, function() {
    return plusCatQueue;
});
var monadPlusCatQueue = new Control_MonadPlus.MonadPlus(function() {
    return alternativeCatQueue;
}, function() {
    return monadCatQueue;
});
var monadZeroCatQueue = new Control_MonadZero.MonadZero(function() {
    return alternativeCatQueue;
}, function() {
    return monadCatQueue;
}, function() {
    return undefined;
});
module.exports = {
    CatQueue: CatQueue,
    empty: empty,
    "null": $$null,
    singleton: singleton,
    length: length,
    cons: cons,
    snoc: snoc,
    uncons: uncons,
    unsnoc: unsnoc,
    fromFoldable: fromFoldable,
    eqCatQueue: eqCatQueue,
    ordCatQueue: ordCatQueue,
    semigroupCatQueue: semigroupCatQueue,
    monoidCatQueue: monoidCatQueue,
    showCatQueue: showCatQueue,
    foldableCatQueue: foldableCatQueue,
    unfoldable1CatQueue: unfoldable1CatQueue,
    unfoldableCatQueue: unfoldableCatQueue,
    traversableCatQueue: traversableCatQueue,
    functorCatQueue: functorCatQueue,
    applyCatQueue: applyCatQueue,
    applicativeCatQueue: applicativeCatQueue,
    bindCatQueue: bindCatQueue,
    monadCatQueue: monadCatQueue,
    altCatQueue: altCatQueue,
    plusCatQueue: plusCatQueue,
    alternativeCatQueue: alternativeCatQueue,
    monadZeroCatQueue: monadZeroCatQueue,
    monadPlusCatQueue: monadPlusCatQueue
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Eq/index.js":"c3b8F","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.List/index.js":"iZK6y","../Data.List.Types/index.js":"80Bba","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd","../Data.Semigroup/index.js":"4sNah","../Data.Show/index.js":"b6tNW","../Data.Traversable/index.js":"i5Kon","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk","../Data.Unfoldable1/index.js":"Daf7x"}],"1okoq":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_List_Trans = require("../Control.Monad.List.Trans/index.js");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");
var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var MonadAff = function(MonadEffect0, liftAff) {
    this.MonadEffect0 = MonadEffect0;
    this.liftAff = liftAff;
};
var monadAffAff = new MonadAff(function() {
    return Effect_Aff.monadEffectAff;
}, Control_Category.identity(Control_Category.categoryFn));
var liftAff = function(dict) {
    return dict.liftAff;
};
var monadAffContT = function(dictMonadAff) {
    return new MonadAff(function() {
        return Control_Monad_Cont_Trans.monadEffectContT(dictMonadAff.MonadEffect0());
    }, function() {
        var $10 = Control_Monad_Trans_Class.lift(Control_Monad_Cont_Trans.monadTransContT)(dictMonadAff.MonadEffect0().Monad0());
        var $11 = liftAff(dictMonadAff);
        return function($12) {
            return $10($11($12));
        };
    }());
};
var monadAffExceptT = function(dictMonadAff) {
    return new MonadAff(function() {
        return Control_Monad_Except_Trans.monadEffectExceptT(dictMonadAff.MonadEffect0());
    }, function() {
        var $13 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonadAff.MonadEffect0().Monad0());
        var $14 = liftAff(dictMonadAff);
        return function($15) {
            return $13($14($15));
        };
    }());
};
var monadAffListT = function(dictMonadAff) {
    return new MonadAff(function() {
        return Control_Monad_List_Trans.monadEffectListT(dictMonadAff.MonadEffect0());
    }, function() {
        var $16 = Control_Monad_Trans_Class.lift(Control_Monad_List_Trans.monadTransListT)(dictMonadAff.MonadEffect0().Monad0());
        var $17 = liftAff(dictMonadAff);
        return function($18) {
            return $16($17($18));
        };
    }());
};
var monadAffMaybe = function(dictMonadAff) {
    return new MonadAff(function() {
        return Control_Monad_Maybe_Trans.monadEffectMaybe(dictMonadAff.MonadEffect0());
    }, function() {
        var $19 = Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(dictMonadAff.MonadEffect0().Monad0());
        var $20 = liftAff(dictMonadAff);
        return function($21) {
            return $19($20($21));
        };
    }());
};
var monadAffRWS = function(dictMonadAff) {
    return function(dictMonoid) {
        return new MonadAff(function() {
            return Control_Monad_RWS_Trans.monadEffectRWS(dictMonoid)(dictMonadAff.MonadEffect0());
        }, function() {
            var $22 = Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(dictMonadAff.MonadEffect0().Monad0());
            var $23 = liftAff(dictMonadAff);
            return function($24) {
                return $22($23($24));
            };
        }());
    };
};
var monadAffReader = function(dictMonadAff) {
    return new MonadAff(function() {
        return Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0());
    }, function() {
        var $25 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadAff.MonadEffect0().Monad0());
        var $26 = liftAff(dictMonadAff);
        return function($27) {
            return $25($26($27));
        };
    }());
};
var monadAffState = function(dictMonadAff) {
    return new MonadAff(function() {
        return Control_Monad_State_Trans.monadEffectState(dictMonadAff.MonadEffect0());
    }, function() {
        var $28 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadAff.MonadEffect0().Monad0());
        var $29 = liftAff(dictMonadAff);
        return function($30) {
            return $28($29($30));
        };
    }());
};
var monadAffWriter = function(dictMonadAff) {
    return function(dictMonoid) {
        return new MonadAff(function() {
            return Control_Monad_Writer_Trans.monadEffectWriter(dictMonoid)(dictMonadAff.MonadEffect0());
        }, function() {
            var $31 = Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(dictMonadAff.MonadEffect0().Monad0());
            var $32 = liftAff(dictMonadAff);
            return function($33) {
                return $31($32($33));
            };
        }());
    };
};
module.exports = {
    liftAff: liftAff,
    MonadAff: MonadAff,
    monadAffAff: monadAffAff,
    monadAffContT: monadAffContT,
    monadAffExceptT: monadAffExceptT,
    monadAffListT: monadAffListT,
    monadAffMaybe: monadAffMaybe,
    monadAffReader: monadAffReader,
    monadAffRWS: monadAffRWS,
    monadAffState: monadAffState,
    monadAffWriter: monadAffWriter
};

},{"../Control.Category/index.js":"dfcPK","../Control.Monad.Cont.Trans/index.js":"9BSpt","../Control.Monad.Except.Trans/index.js":"jlllv","../Control.Monad.List.Trans/index.js":"g5Mdc","../Control.Monad.Maybe.Trans/index.js":"dvmae","../Control.Monad.RWS.Trans/index.js":"5exqO","../Control.Monad.Reader.Trans/index.js":"eiBpm","../Control.Monad.State.Trans/index.js":"3CUYm","../Control.Monad.Trans.Class/index.js":"9pz5v","../Control.Monad.Writer.Trans/index.js":"av8fT","../Effect.Aff/index.js":"3YiSJ"}],"g5Mdc":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Yield = function() {
    function Yield1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Yield1.create = function(value0) {
        return function(value1) {
            return new Yield1(value0, value1);
        };
    };
    return Yield1;
}();
var Skip = function() {
    function Skip1(value0) {
        this.value0 = value0;
    }
    Skip1.create = function(value0) {
        return new Skip1(value0);
    };
    return Skip1;
}();
var Done = function() {
    function Done1() {
    }
    Done1.value = new Done1();
    return Done1;
}();
var ListT = function(x) {
    return x;
};
var wrapLazy = function(dictApplicative) {
    return function(v) {
        return ListT(Control_Applicative.pure(dictApplicative)(new Skip(v)));
    };
};
var wrapEffect = function(dictFunctor) {
    return function(v) {
        return ListT(Data_Functor.map(dictFunctor)(function($181) {
            return Skip.create(Data_Lazy.defer(Data_Function["const"]($181)));
        })(v));
    };
};
var unfold = function(dictMonad) {
    return function(f) {
        return function(z) {
            var g = function(v) {
                if (v instanceof Data_Maybe.Just) return new Yield(v.value0.value1, Data_Lazy.defer(function(v1) {
                    return unfold(dictMonad)(f)(v.value0.value0);
                }));
                if (v instanceof Data_Maybe.Nothing) return Done.value;
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 130, column 3 - line 130, column 60): " + [
                    v.constructor.name
                ]);
            };
            return ListT(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(g)(f(z)));
        };
    };
};
var uncons = function(dictMonad) {
    return function(v) {
        var g = function(v1) {
            if (v1 instanceof Yield) return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create(new Data_Tuple.Tuple(v1.value0, Data_Lazy.force(v1.value1))));
            if (v1 instanceof Skip) return uncons(dictMonad)(Data_Lazy.force(v1.value0));
            if (v1 instanceof Done) return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 195, column 3 - line 195, column 50): " + [
                v1.constructor.name
            ]);
        };
        return Control_Bind.bind(dictMonad.Bind1())(v)(g);
    };
};
var tail = function(dictMonad) {
    return function(l) {
        return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(dictMonad)(l));
    };
};
var stepMap = function(dictFunctor) {
    return function(f) {
        return function(v) {
            return ListT(Data_Functor.map(dictFunctor)(f)(v));
        };
    };
};
var takeWhile = function(dictApplicative) {
    return function(f) {
        var g = function(v) {
            if (v instanceof Yield) {
                var $98 = f(v.value0);
                if ($98) return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value1));
                return Done.value;
            }
            if (v instanceof Skip) return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value0));
            if (v instanceof Done) return Done.value;
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 154, column 3 - line 154, column 68): " + [
                v.constructor.name
            ]);
        };
        return stepMap(dictApplicative.Apply0().Functor0())(g);
    };
};
var scanl = function(dictMonad) {
    return function(f) {
        return function(b) {
            return function(l) {
                var g = function(v) {
                    var h = function(v1) {
                        if (v1 instanceof Yield) {
                            var b$prime$prime = f(v.value0)(v1.value0);
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime$prime, Data_Lazy.force(v1.value1)), v.value0));
                        }
                        if (v1 instanceof Skip) return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, Data_Lazy.force(v1.value0)), v.value0));
                        if (v1 instanceof Done) return Data_Maybe.Nothing.value;
                        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 248, column 5 - line 248, column 78): " + [
                            v1.constructor.name
                        ]);
                    };
                    return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(h)(v.value1);
                };
                return unfold(dictMonad)(g)(new Data_Tuple.Tuple(b, l));
            };
        };
    };
};
var prepend$prime = function(dictApplicative) {
    return function(h) {
        return function(t) {
            return ListT(Control_Applicative.pure(dictApplicative)(new Yield(h, t)));
        };
    };
};
var prepend = function(dictApplicative) {
    return function(h) {
        return function(t) {
            return prepend$prime(dictApplicative)(h)(Data_Lazy.defer(Data_Function["const"](t)));
        };
    };
};
var nil = function(dictApplicative) {
    return ListT(Control_Applicative.pure(dictApplicative)(Done.value));
};
var singleton = function(dictApplicative) {
    return function(a) {
        return prepend(dictApplicative)(a)(nil(dictApplicative));
    };
};
var take = function(dictApplicative) {
    return function(v) {
        return function(v1) {
            if (v === 0) return nil(dictApplicative);
            var f = function(v2) {
                if (v2 instanceof Yield) return new Yield(v2.value0, Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v - 1 | 0))(v2.value1));
                if (v2 instanceof Skip) return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v))(v2.value0));
                if (v2 instanceof Done) return Done.value;
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 147, column 3 - line 147, column 47): " + [
                    v2.constructor.name
                ]);
            };
            return stepMap(dictApplicative.Apply0().Functor0())(f)(v1);
        };
    };
};
var zipWith$prime = function(dictMonad) {
    return function(f) {
        var g = function(v) {
            return function(v1) {
                if (v1 instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
                if (v instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
                if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Function.flip(prepend$prime(dictMonad.Applicative0()))(Data_Lazy.defer(function(v2) {
                    return zipWith$prime(dictMonad)(f)(v.value0.value1)(v1.value0.value1);
                })))(f(v.value0.value0)(v1.value0.value0));
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 260, column 3 - line 260, column 25): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
        var loop = function(fa) {
            return function(fb) {
                return wrapEffect(dictMonad.Bind1().Apply0().Functor0())(Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fa))(function(ua) {
                    return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fb))(function(ub) {
                        return g(ua)(ub);
                    });
                }));
            };
        };
        return loop;
    };
};
var zipWith = function(dictMonad) {
    return function(f) {
        var g = function(a) {
            return function(b) {
                return Control_Applicative.pure(dictMonad.Applicative0())(f(a)(b));
            };
        };
        return zipWith$prime(dictMonad)(g);
    };
};
var newtypeListT = new Data_Newtype.Newtype(function() {
    return undefined;
});
var mapMaybe = function(dictFunctor) {
    return function(f) {
        var g = function(v) {
            if (v instanceof Yield) return Data_Maybe.fromMaybe(Skip.create)(Data_Functor.map(Data_Maybe.functorMaybe)(Yield.create)(f(v.value0)))(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value1));
            if (v instanceof Skip) return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value0));
            if (v instanceof Done) return Done.value;
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 183, column 3 - line 183, column 72): " + [
                v.constructor.name
            ]);
        };
        return stepMap(dictFunctor)(g);
    };
};
var iterate = function(dictMonad) {
    return function(f) {
        return function(a) {
            var g = function(x) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(x), x)));
            };
            return unfold(dictMonad)(g)(a);
        };
    };
};
var repeat = function(dictMonad) {
    return iterate(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
};
var head = function(dictMonad) {
    return function(l) {
        return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(dictMonad)(l));
    };
};
var functorListT = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        var g = function(v) {
            if (v instanceof Yield) return new Yield(f(v.value0), Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value1));
            if (v instanceof Skip) return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value0));
            if (v instanceof Done) return Done.value;
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 280, column 5 - line 280, column 48): " + [
                v.constructor.name
            ]);
        };
        return stepMap(dictFunctor)(g);
    });
};
var fromEffect = function(dictApplicative) {
    return function(fa) {
        return ListT(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Function.flip(Yield.create)(Data_Lazy.defer(function(v) {
            return nil(dictApplicative);
        })))(fa));
    };
};
var monadTransListT = new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
    return fromEffect(dictMonad.Applicative0());
});
var foldlRec$prime = function(dictMonadRec) {
    return function(f) {
        var loop = function(b) {
            return function(l) {
                var g = function(v) {
                    if (v instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(b));
                    if (v instanceof Data_Maybe.Just) return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(f(b)(v.value0.value0))(function(b$prime) {
                        return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
                            a: b$prime,
                            b: v.value0.value1
                        }));
                    });
                    throw new Error("Failed pattern match at Control.Monad.List.Trans (line 221, column 5 - line 221, column 45): " + [
                        v.constructor.name
                    ]);
                };
                return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
            };
        };
        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
    };
};
var runListTRec = function(dictMonadRec) {
    return foldlRec$prime(dictMonadRec)(function(v) {
        return function(v1) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(Data_Unit.unit);
        };
    })(Data_Unit.unit);
};
var foldlRec = function(dictMonadRec) {
    return function(f) {
        var loop = function(b) {
            return function(l) {
                var g = function(v) {
                    if (v instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(b));
                    if (v instanceof Data_Maybe.Just) return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
                        a: f(b)(v.value0.value0),
                        b: v.value0.value1
                    }));
                    throw new Error("Failed pattern match at Control.Monad.List.Trans (line 239, column 7 - line 239, column 47): " + [
                        v.constructor.name
                    ]);
                };
                return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
            };
        };
        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
    };
};
var foldl$prime = function(dictMonad) {
    return function(f) {
        var loop = function(b) {
            return function(l) {
                var g = function(v) {
                    if (v instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictMonad.Applicative0())(b);
                    if (v instanceof Data_Maybe.Just) return Control_Bind.bind(dictMonad.Bind1())(f(b)(v.value0.value0))(Data_Function.flip(loop)(v.value0.value1));
                    throw new Error("Failed pattern match at Control.Monad.List.Trans (line 212, column 5 - line 212, column 35): " + [
                        v.constructor.name
                    ]);
                };
                return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
            };
        };
        return loop;
    };
};
var runListT = function(dictMonad) {
    return foldl$prime(dictMonad)(function(v) {
        return function(v1) {
            return Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit);
        };
    })(Data_Unit.unit);
};
var foldl = function(dictMonad) {
    return function(f) {
        var loop = function(b) {
            return function(l) {
                var g = function(v) {
                    if (v instanceof Data_Maybe.Nothing) return Control_Applicative.pure(dictMonad.Applicative0())(b);
                    if (v instanceof Data_Maybe.Just) return loop(f(b)(v.value0.value0))(v.value0.value1);
                    throw new Error("Failed pattern match at Control.Monad.List.Trans (line 229, column 5 - line 229, column 35): " + [
                        v.constructor.name
                    ]);
                };
                return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
            };
        };
        return loop;
    };
};
var filter = function(dictFunctor) {
    return function(f) {
        var g = function(v) {
            if (v instanceof Yield) {
                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value1);
                var $148 = f(v.value0);
                if ($148) return new Yield(v.value0, s$prime);
                return new Skip(s$prime);
            }
            if (v instanceof Skip) {
                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value0);
                return new Skip(s$prime);
            }
            if (v instanceof Done) return Done.value;
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 176, column 3 - line 176, column 80): " + [
                v.constructor.name
            ]);
        };
        return stepMap(dictFunctor)(g);
    };
};
var dropWhile = function(dictApplicative) {
    return function(f) {
        var g = function(v) {
            if (v instanceof Yield) {
                var $153 = f(v.value0);
                if ($153) return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value1));
                return new Yield(v.value0, v.value1);
            }
            if (v instanceof Skip) return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value0));
            if (v instanceof Done) return Done.value;
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 169, column 3 - line 169, column 70): " + [
                v.constructor.name
            ]);
        };
        return stepMap(dictApplicative.Apply0().Functor0())(g);
    };
};
var drop = function(dictApplicative) {
    return function(v) {
        return function(fa) {
            if (v === 0) return fa;
            var f = function(v1) {
                if (v1 instanceof Yield) return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v - 1 | 0))(v1.value1));
                if (v1 instanceof Skip) return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v))(v1.value0));
                if (v1 instanceof Done) return Done.value;
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 162, column 3 - line 162, column 44): " + [
                    v1.constructor.name
                ]);
            };
            return stepMap(dictApplicative.Apply0().Functor0())(f)(fa);
        };
    };
};
var cons = function(dictApplicative) {
    return function(lh) {
        return function(t) {
            return ListT(Control_Applicative.pure(dictApplicative)(new Yield(Data_Lazy.force(lh), t)));
        };
    };
};
var unfoldable1ListT = function(dictMonad) {
    return new Data_Unfoldable1.Unfoldable1(function(f) {
        return function(b) {
            var go = function(v) {
                if (v.value1 instanceof Data_Maybe.Nothing) return singleton(dictMonad.Applicative0())(v.value0);
                if (v.value1 instanceof Data_Maybe.Just) return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0))(Data_Lazy.defer(function(v1) {
                    return go(f(v.value1.value0));
                }));
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 294, column 12 - line 296, column 67): " + [
                    v.constructor.name
                ]);
            };
            return go(f(b));
        };
    });
};
var unfoldableListT = function(dictMonad) {
    return new Data_Unfoldable.Unfoldable(function() {
        return unfoldable1ListT(dictMonad);
    }, function(f) {
        return function(b) {
            var go = function(v) {
                if (v instanceof Data_Maybe.Nothing) return nil(dictMonad.Applicative0());
                if (v instanceof Data_Maybe.Just) return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0.value0))(Data_Lazy.defer(function(v1) {
                    return go(f(v.value0.value1));
                }));
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 287, column 12 - line 289, column 67): " + [
                    v.constructor.name
                ]);
            };
            return go(f(b));
        };
    });
};
var semigroupListT = function(dictApplicative) {
    return new Data_Semigroup.Semigroup(concat(dictApplicative));
};
var concat = function(dictApplicative) {
    return function(x) {
        return function(y) {
            var f = function(v) {
                if (v instanceof Yield) return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(function(v1) {
                    return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
                })(v.value1));
                if (v instanceof Skip) return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function(v1) {
                    return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
                })(v.value0));
                if (v instanceof Done) return new Skip(Data_Lazy.defer(Data_Function["const"](y)));
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 106, column 3 - line 106, column 43): " + [
                    v.constructor.name
                ]);
            };
            return stepMap(dictApplicative.Apply0().Functor0())(f)(x);
        };
    };
};
var monoidListT = function(dictApplicative) {
    return new Data_Monoid.Monoid(function() {
        return semigroupListT(dictApplicative);
    }, nil(dictApplicative));
};
var catMaybes = function(dictFunctor) {
    return mapMaybe(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
};
var monadListT = function(dictMonad) {
    return new Control_Monad.Monad(function() {
        return applicativeListT(dictMonad);
    }, function() {
        return bindListT(dictMonad);
    });
};
var bindListT = function(dictMonad) {
    return new Control_Bind.Bind(function() {
        return applyListT(dictMonad);
    }, function(fa) {
        return function(f) {
            var g = function(v) {
                if (v instanceof Yield) {
                    var h = function(s$prime) {
                        return Data_Semigroup.append(semigroupListT(dictMonad.Applicative0()))(f(v.value0))(Control_Bind.bind(bindListT(dictMonad))(s$prime)(f));
                    };
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(h)(v.value1));
                }
                if (v instanceof Skip) return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function(v1) {
                    return Control_Bind.bind(bindListT(dictMonad))(v1)(f);
                })(v.value0));
                if (v instanceof Done) return Done.value;
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 306, column 5 - line 308, column 31): " + [
                    v.constructor.name
                ]);
            };
            return stepMap(dictMonad.Bind1().Apply0().Functor0())(g)(fa);
        };
    });
};
var applyListT = function(dictMonad) {
    return new Control_Apply.Apply(function() {
        return functorListT(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadListT(dictMonad)));
};
var applicativeListT = function(dictMonad) {
    return new Control_Applicative.Applicative(function() {
        return applyListT(dictMonad);
    }, singleton(dictMonad.Applicative0()));
};
var monadEffectListT = function(dictMonadEffect) {
    return new Effect_Class.MonadEffect(function() {
        return monadListT(dictMonadEffect.Monad0());
    }, function() {
        var $182 = Control_Monad_Trans_Class.lift(monadTransListT)(dictMonadEffect.Monad0());
        var $183 = Effect_Class.liftEffect(dictMonadEffect);
        return function($184) {
            return $182($183($184));
        };
    }());
};
var altListT = function(dictApplicative) {
    return new Control_Alt.Alt(function() {
        return functorListT(dictApplicative.Apply0().Functor0());
    }, concat(dictApplicative));
};
var plusListT = function(dictMonad) {
    return new Control_Plus.Plus(function() {
        return altListT(dictMonad.Applicative0());
    }, nil(dictMonad.Applicative0()));
};
var alternativeListT = function(dictMonad) {
    return new Control_Alternative.Alternative(function() {
        return applicativeListT(dictMonad);
    }, function() {
        return plusListT(dictMonad);
    });
};
var monadPlusListT = function(dictMonad) {
    return new Control_MonadPlus.MonadPlus(function() {
        return alternativeListT(dictMonad);
    }, function() {
        return monadListT(dictMonad);
    });
};
var monadZeroListT = function(dictMonad) {
    return new Control_MonadZero.MonadZero(function() {
        return alternativeListT(dictMonad);
    }, function() {
        return monadListT(dictMonad);
    }, function() {
        return undefined;
    });
};
module.exports = {
    ListT: ListT,
    Yield: Yield,
    Skip: Skip,
    Done: Done,
    catMaybes: catMaybes,
    cons: cons,
    drop: drop,
    dropWhile: dropWhile,
    filter: filter,
    foldl: foldl,
    foldlRec: foldlRec,
    "foldl'": foldl$prime,
    "foldlRec'": foldlRec$prime,
    fromEffect: fromEffect,
    head: head,
    iterate: iterate,
    mapMaybe: mapMaybe,
    nil: nil,
    prepend: prepend,
    "prepend'": prepend$prime,
    repeat: repeat,
    runListT: runListT,
    runListTRec: runListTRec,
    scanl: scanl,
    singleton: singleton,
    tail: tail,
    take: take,
    takeWhile: takeWhile,
    uncons: uncons,
    unfold: unfold,
    wrapEffect: wrapEffect,
    wrapLazy: wrapLazy,
    zipWith: zipWith,
    "zipWith'": zipWith$prime,
    newtypeListT: newtypeListT,
    semigroupListT: semigroupListT,
    monoidListT: monoidListT,
    functorListT: functorListT,
    unfoldableListT: unfoldableListT,
    unfoldable1ListT: unfoldable1ListT,
    applyListT: applyListT,
    applicativeListT: applicativeListT,
    bindListT: bindListT,
    monadListT: monadListT,
    monadTransListT: monadTransListT,
    altListT: altListT,
    plusListT: plusListT,
    alternativeListT: alternativeListT,
    monadZeroListT: monadZeroListT,
    monadPlusListT: monadPlusListT,
    monadEffectListT: monadEffectListT,
    MonadTrans: Control_Monad_Trans_Class.MonadTrans,
    lift: Control_Monad_Trans_Class.lift
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Monad/index.js":"alCn2","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Monad.Trans.Class/index.js":"9pz5v","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Lazy/index.js":"520Le","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk","../Data.Unfoldable1/index.js":"Daf7x","../Data.Unit/index.js":"d7oKp","../Effect.Class/index.js":"53rRA"}],"5exqO":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var RWSResult = function() {
    function RWSResult1(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    RWSResult1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new RWSResult1(value0, value1, value2);
            };
        };
    };
    return RWSResult1;
}();
var RWST = function(x) {
    return x;
};
var withRWST = function(f) {
    return function(m) {
        return function(r) {
            return function(s) {
                return Data_Tuple.uncurry(m)(f(r)(s));
            };
        };
    };
};
var runRWST = function(v) {
    return v;
};
var newtypeRWST = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monadTransRWST = function(dictMonoid) {
    return new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
        return function(m) {
            return function(v) {
                return function(s) {
                    return Control_Bind.bind(dictMonad.Bind1())(m)(function(a) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                    });
                };
            };
        };
    });
};
var mapRWST = function(f) {
    return function(v) {
        return function(r) {
            return function(s) {
                return f(v(r)(s));
            };
        };
    };
};
var lazyRWST = new Control_Lazy.Lazy(function(f) {
    return function(r) {
        return function(s) {
            var v = f(Data_Unit.unit);
            return v(r)(s);
        };
    };
});
var functorRWST = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        return function(v) {
            return function(r) {
                return function(s) {
                    return Data_Functor.map(dictFunctor)(function(v1) {
                        return new RWSResult(v1.value0, f(v1.value1), v1.value2);
                    })(v(r)(s));
                };
            };
        };
    });
};
var execRWST = function(dictMonad) {
    return function(v) {
        return function(r) {
            return function(s) {
                return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function(v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value2));
                });
            };
        };
    };
};
var evalRWST = function(dictMonad) {
    return function(v) {
        return function(r) {
            return function(s) {
                return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function(v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value1, v1.value2));
                });
            };
        };
    };
};
var applyRWST = function(dictBind) {
    return function(dictMonoid) {
        return new Control_Apply.Apply(function() {
            return functorRWST(dictBind.Apply0().Functor0());
        }, function(v) {
            return function(v1) {
                return function(r) {
                    return function(s) {
                        return Control_Bind.bind(dictBind)(v(r)(s))(function(v2) {
                            return Data_Functor.mapFlipped(dictBind.Apply0().Functor0())(v1(r)(v2.value0))(function(v3) {
                                return new RWSResult(v3.value0, v2.value1(v3.value1), Data_Semigroup.append(dictMonoid.Semigroup0())(v2.value2)(v3.value2));
                            });
                        });
                    };
                };
            };
        });
    };
};
var bindRWST = function(dictBind) {
    return function(dictMonoid) {
        return new Control_Bind.Bind(function() {
            return applyRWST(dictBind)(dictMonoid);
        }, function(v) {
            return function(f) {
                return function(r) {
                    return function(s) {
                        return Control_Bind.bind(dictBind)(v(r)(s))(function(v1) {
                            var v2 = f(v1.value1);
                            return Data_Functor.mapFlipped(dictBind.Apply0().Functor0())(v2(r)(v1.value0))(function(v3) {
                                return new RWSResult(v3.value0, v3.value1, Data_Semigroup.append(dictMonoid.Semigroup0())(v1.value2)(v3.value2));
                            });
                        });
                    };
                };
            };
        });
    };
};
var semigroupRWST = function(dictBind) {
    return function(dictMonoid) {
        return function(dictSemigroup) {
            return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyRWST(dictBind)(dictMonoid))(Data_Semigroup.append(dictSemigroup)));
        };
    };
};
var applicativeRWST = function(dictMonad) {
    return function(dictMonoid) {
        return new Control_Applicative.Applicative(function() {
            return applyRWST(dictMonad.Bind1())(dictMonoid);
        }, function(a) {
            return function(v) {
                return function(s) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                };
            };
        });
    };
};
var monadRWST = function(dictMonad) {
    return function(dictMonoid) {
        return new Control_Monad.Monad(function() {
            return applicativeRWST(dictMonad)(dictMonoid);
        }, function() {
            return bindRWST(dictMonad.Bind1())(dictMonoid);
        });
    };
};
var monadAskRWST = function(dictMonad) {
    return function(dictMonoid) {
        return new Control_Monad_Reader_Class.MonadAsk(function() {
            return monadRWST(dictMonad)(dictMonoid);
        }, function(r) {
            return function(s) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, r, Data_Monoid.mempty(dictMonoid)));
            };
        });
    };
};
var monadReaderRWST = function(dictMonad) {
    return function(dictMonoid) {
        return new Control_Monad_Reader_Class.MonadReader(function() {
            return monadAskRWST(dictMonad)(dictMonoid);
        }, function(f) {
            return function(m) {
                return function(r) {
                    return function(s) {
                        return m(f(r))(s);
                    };
                };
            };
        });
    };
};
var monadEffectRWS = function(dictMonoid) {
    return function(dictMonadEffect) {
        return new Effect_Class.MonadEffect(function() {
            return monadRWST(dictMonadEffect.Monad0())(dictMonoid);
        }, function() {
            var $158 = Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadEffect.Monad0());
            var $159 = Effect_Class.liftEffect(dictMonadEffect);
            return function($160) {
                return $158($159($160));
            };
        }());
    };
};
var monadRecRWST = function(dictMonadRec) {
    return function(dictMonoid) {
        return new Control_Monad_Rec_Class.MonadRec(function() {
            return monadRWST(dictMonadRec.Monad0())(dictMonoid);
        }, function(k) {
            return function(a) {
                var k$prime = function(r) {
                    return function(v) {
                        var v1 = k(v.value1);
                        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1(r)(v.value0))(function(v2) {
                            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function() {
                                if (v2.value1 instanceof Control_Monad_Rec_Class.Loop) return new Control_Monad_Rec_Class.Loop(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                                if (v2.value1 instanceof Control_Monad_Rec_Class.Done) return new Control_Monad_Rec_Class.Done(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                                throw new Error("Failed pattern match at Control.Monad.RWS.Trans (line 128, column 16 - line 130, column 68): " + [
                                    v2.value1.constructor.name
                                ]);
                            }());
                        });
                    };
                };
                return function(r) {
                    return function(s) {
                        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                    };
                };
            };
        });
    };
};
var monadStateRWST = function(dictMonad) {
    return function(dictMonoid) {
        return new Control_Monad_State_Class.MonadState(function() {
            return monadRWST(dictMonad)(dictMonoid);
        }, function(f) {
            return function(v) {
                return function(s) {
                    var v1 = f(s);
                    return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v1.value1, v1.value0, Data_Monoid.mempty(dictMonoid)));
                };
            };
        });
    };
};
var monadTellRWST = function(dictMonad) {
    return function(dictMonoid) {
        return new Control_Monad_Writer_Class.MonadTell(function() {
            return monadRWST(dictMonad)(dictMonoid);
        }, dictMonoid.Semigroup0, function(w) {
            return function(v) {
                return function(s) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, Data_Unit.unit, w));
                };
            };
        });
    };
};
var monadWriterRWST = function(dictMonad) {
    return function(dictMonoid) {
        return new Control_Monad_Writer_Class.MonadWriter(function() {
            return monadTellRWST(dictMonad)(dictMonoid);
        }, function() {
            return dictMonoid;
        }, function(m) {
            return function(r) {
                return function(s) {
                    return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function(v) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, new Data_Tuple.Tuple(v.value1, v.value2), v.value2));
                    });
                };
            };
        }, function(m) {
            return function(r) {
                return function(s) {
                    return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function(v) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, v.value1.value0, v.value1.value1(v.value2)));
                    });
                };
            };
        });
    };
};
var monadThrowRWST = function(dictMonadThrow) {
    return function(dictMonoid) {
        return new Control_Monad_Error_Class.MonadThrow(function() {
            return monadRWST(dictMonadThrow.Monad0())(dictMonoid);
        }, function(e) {
            return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
        });
    };
};
var monadErrorRWST = function(dictMonadError) {
    return function(dictMonoid) {
        return new Control_Monad_Error_Class.MonadError(function() {
            return monadThrowRWST(dictMonadError.MonadThrow0())(dictMonoid);
        }, function(m) {
            return function(h) {
                return RWST(function(r) {
                    return function(s) {
                        return Control_Monad_Error_Class.catchError(dictMonadError)(m(r)(s))(function(e) {
                            var v = h(e);
                            return v(r)(s);
                        });
                    };
                });
            };
        });
    };
};
var monoidRWST = function(dictMonad) {
    return function(dictMonoid) {
        return function(dictMonoid1) {
            return new Data_Monoid.Monoid(function() {
                return semigroupRWST(dictMonad.Bind1())(dictMonoid)(dictMonoid1.Semigroup0());
            }, Control_Applicative.pure(applicativeRWST(dictMonad)(dictMonoid))(Data_Monoid.mempty(dictMonoid1)));
        };
    };
};
var altRWST = function(dictAlt) {
    return new Control_Alt.Alt(function() {
        return functorRWST(dictAlt.Functor0());
    }, function(v) {
        return function(v1) {
            return RWST(function(r) {
                return function(s) {
                    return Control_Alt.alt(dictAlt)(v(r)(s))(v1(r)(s));
                };
            });
        };
    });
};
var plusRWST = function(dictPlus) {
    return new Control_Plus.Plus(function() {
        return altRWST(dictPlus.Alt0());
    }, function(v) {
        return function(v1) {
            return Control_Plus.empty(dictPlus);
        };
    });
};
var alternativeRWST = function(dictMonoid) {
    return function(dictAlternative) {
        return function(dictMonad) {
            return new Control_Alternative.Alternative(function() {
                return applicativeRWST(dictMonad)(dictMonoid);
            }, function() {
                return plusRWST(dictAlternative.Plus1());
            });
        };
    };
};
module.exports = {
    RWSResult: RWSResult,
    RWST: RWST,
    runRWST: runRWST,
    evalRWST: evalRWST,
    execRWST: execRWST,
    mapRWST: mapRWST,
    withRWST: withRWST,
    newtypeRWST: newtypeRWST,
    functorRWST: functorRWST,
    applyRWST: applyRWST,
    altRWST: altRWST,
    alternativeRWST: alternativeRWST,
    bindRWST: bindRWST,
    applicativeRWST: applicativeRWST,
    monadRWST: monadRWST,
    monadTransRWST: monadTransRWST,
    lazyRWST: lazyRWST,
    monadEffectRWS: monadEffectRWS,
    monadAskRWST: monadAskRWST,
    monadReaderRWST: monadReaderRWST,
    monadStateRWST: monadStateRWST,
    monadTellRWST: monadTellRWST,
    monadWriterRWST: monadWriterRWST,
    monadThrowRWST: monadThrowRWST,
    monadErrorRWST: monadErrorRWST,
    monadRecRWST: monadRecRWST,
    plusRWST: plusRWST,
    semigroupRWST: semigroupRWST,
    monoidRWST: monoidRWST,
    MonadTrans: Control_Monad_Trans_Class.MonadTrans,
    lift: Control_Monad_Trans_Class.lift
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Lazy/index.js":"chn7k","../Control.Monad/index.js":"alCn2","../Control.Monad.Error.Class/index.js":"acXO9","../Control.Monad.Reader.Class/index.js":"3BEj9","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Monad.State.Class/index.js":"enW6F","../Control.Monad.Trans.Class/index.js":"9pz5v","../Control.Monad.Writer.Class/index.js":"6wyz5","../Control.Plus/index.js":"5lCU5","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Tuple/index.js":"eOBbM","../Data.Unit/index.js":"d7oKp","../Effect.Class/index.js":"53rRA"}],"3CUYm":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var StateT = function(x) {
    return x;
};
var withStateT = function(f) {
    return function(v) {
        return function($106) {
            return v(f($106));
        };
    };
};
var runStateT = function(v) {
    return v;
};
var newtypeStateT = new Data_Newtype.Newtype(function() {
    return undefined;
});
var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function(dictMonad) {
    return function(m) {
        return function(s) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(function(x) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(x, s));
            });
        };
    };
});
var mapStateT = function(f) {
    return function(v) {
        return function($107) {
            return f(v($107));
        };
    };
};
var lazyStateT = new Control_Lazy.Lazy(function(f) {
    return function(s) {
        var v = f(Data_Unit.unit);
        return v(s);
    };
});
var functorStateT = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        return function(v) {
            return function(s) {
                return Data_Functor.map(dictFunctor)(function(v1) {
                    return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                })(v(s));
            };
        };
    });
};
var execStateT = function(dictFunctor) {
    return function(v) {
        return function(s) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
        };
    };
};
var evalStateT = function(dictFunctor) {
    return function(v) {
        return function(s) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
        };
    };
};
var monadStateT = function(dictMonad) {
    return new Control_Monad.Monad(function() {
        return applicativeStateT(dictMonad);
    }, function() {
        return bindStateT(dictMonad);
    });
};
var bindStateT = function(dictMonad) {
    return new Control_Bind.Bind(function() {
        return applyStateT(dictMonad);
    }, function(v) {
        return function(f) {
            return function(s) {
                return Control_Bind.bind(dictMonad.Bind1())(v(s))(function(v1) {
                    var v3 = f(v1.value0);
                    return v3(v1.value1);
                });
            };
        };
    });
};
var applyStateT = function(dictMonad) {
    return new Control_Apply.Apply(function() {
        return functorStateT(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadStateT(dictMonad)));
};
var applicativeStateT = function(dictMonad) {
    return new Control_Applicative.Applicative(function() {
        return applyStateT(dictMonad);
    }, function(a) {
        return function(s) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
        };
    });
};
var semigroupStateT = function(dictMonad) {
    return function(dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyStateT(dictMonad))(Data_Semigroup.append(dictSemigroup)));
    };
};
var monadAskStateT = function(dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function() {
        return monadStateT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderStateT = function(dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function() {
        return monadAskStateT(dictMonadReader.MonadAsk0());
    }, function() {
        var $108 = Control_Monad_Reader_Class.local(dictMonadReader);
        return function($109) {
            return mapStateT($108($109));
        };
    }());
};
var monadContStateT = function(dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function() {
        return monadStateT(dictMonadCont.Monad0());
    }, function(f) {
        return function(s) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function(c) {
                var v = f(function(a) {
                    return function(s$prime) {
                        return c(new Data_Tuple.Tuple(a, s$prime));
                    };
                });
                return v(s);
            });
        };
    });
};
var monadEffectState = function(dictMonadEffect) {
    return new Effect_Class.MonadEffect(function() {
        return monadStateT(dictMonadEffect.Monad0());
    }, function() {
        var $110 = Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEffect.Monad0());
        var $111 = Effect_Class.liftEffect(dictMonadEffect);
        return function($112) {
            return $110($111($112));
        };
    }());
};
var monadRecStateT = function(dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function() {
        return monadStateT(dictMonadRec.Monad0());
    }, function(f) {
        return function(a) {
            var f$prime = function(v) {
                var v1 = f(v.value0);
                return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1(v.value1))(function(v2) {
                    return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function() {
                        if (v2.value0 instanceof Control_Monad_Rec_Class.Loop) return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v2.value0.value0, v2.value1));
                        if (v2.value0 instanceof Control_Monad_Rec_Class.Done) return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v2.value0.value0, v2.value1));
                        throw new Error("Failed pattern match at Control.Monad.State.Trans (line 88, column 16 - line 90, column 40): " + [
                            v2.value0.constructor.name
                        ]);
                    }());
                });
            };
            return function(s) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
            };
        };
    });
};
var monadStateStateT = function(dictMonad) {
    return new Control_Monad_State_Class.MonadState(function() {
        return monadStateT(dictMonad);
    }, function(f) {
        return StateT(function() {
            var $113 = Control_Applicative.pure(dictMonad.Applicative0());
            return function($114) {
                return $113(f($114));
            };
        }());
    });
};
var monadTellStateT = function(dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function() {
        return monadStateT(dictMonadTell.Monad1());
    }, dictMonadTell.Semigroup0, function() {
        var $115 = Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadTell.Monad1());
        var $116 = Control_Monad_Writer_Class.tell(dictMonadTell);
        return function($117) {
            return $115($116($117));
        };
    }());
};
var monadWriterStateT = function(dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function() {
        return monadTellStateT(dictMonadWriter.MonadTell1());
    }, dictMonadWriter.Monoid0, function(m) {
        return function(s) {
            return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function(v) {
                return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
            });
        };
    }, function(m) {
        return function(s) {
            return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m(s))(function(v) {
                return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
            }));
        };
    });
};
var monadThrowStateT = function(dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function() {
        return monadStateT(dictMonadThrow.Monad0());
    }, function(e) {
        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
};
var monadErrorStateT = function(dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function() {
        return monadThrowStateT(dictMonadError.MonadThrow0());
    }, function(v) {
        return function(h) {
            return function(s) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function(e) {
                    var v1 = h(e);
                    return v1(s);
                });
            };
        };
    });
};
var monoidStateT = function(dictMonad) {
    return function(dictMonoid) {
        return new Data_Monoid.Monoid(function() {
            return semigroupStateT(dictMonad)(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeStateT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var altStateT = function(dictMonad) {
    return function(dictAlt) {
        return new Control_Alt.Alt(function() {
            return functorStateT(dictAlt.Functor0());
        }, function(v) {
            return function(v1) {
                return function(s) {
                    return Control_Alt.alt(dictAlt)(v(s))(v1(s));
                };
            };
        });
    };
};
var plusStateT = function(dictMonad) {
    return function(dictPlus) {
        return new Control_Plus.Plus(function() {
            return altStateT(dictMonad)(dictPlus.Alt0());
        }, function(v) {
            return Control_Plus.empty(dictPlus);
        });
    };
};
var alternativeStateT = function(dictMonad) {
    return function(dictAlternative) {
        return new Control_Alternative.Alternative(function() {
            return applicativeStateT(dictMonad);
        }, function() {
            return plusStateT(dictMonad)(dictAlternative.Plus1());
        });
    };
};
var monadPlusStateT = function(dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function() {
        return alternativeStateT(dictMonadPlus.Monad0())(dictMonadPlus.Alternative1());
    }, function() {
        return monadStateT(dictMonadPlus.Monad0());
    });
};
var monadZeroStateT = function(dictMonadZero) {
    return new Control_MonadZero.MonadZero(function() {
        return alternativeStateT(dictMonadZero.Monad0())(dictMonadZero.Alternative1());
    }, function() {
        return monadStateT(dictMonadZero.Monad0());
    }, function() {
        return undefined;
    });
};
module.exports = {
    StateT: StateT,
    runStateT: runStateT,
    evalStateT: evalStateT,
    execStateT: execStateT,
    mapStateT: mapStateT,
    withStateT: withStateT,
    newtypeStateT: newtypeStateT,
    functorStateT: functorStateT,
    applyStateT: applyStateT,
    applicativeStateT: applicativeStateT,
    altStateT: altStateT,
    plusStateT: plusStateT,
    alternativeStateT: alternativeStateT,
    bindStateT: bindStateT,
    monadStateT: monadStateT,
    monadRecStateT: monadRecStateT,
    monadZeroStateT: monadZeroStateT,
    monadPlusStateT: monadPlusStateT,
    monadTransStateT: monadTransStateT,
    lazyStateT: lazyStateT,
    monadEffectState: monadEffectState,
    monadContStateT: monadContStateT,
    monadThrowStateT: monadThrowStateT,
    monadErrorStateT: monadErrorStateT,
    monadAskStateT: monadAskStateT,
    monadReaderStateT: monadReaderStateT,
    monadStateStateT: monadStateStateT,
    monadTellStateT: monadTellStateT,
    monadWriterStateT: monadWriterStateT,
    semigroupStateT: semigroupStateT,
    monoidStateT: monoidStateT,
    MonadState: Control_Monad_State_Class.MonadState,
    get: Control_Monad_State_Class.get,
    gets: Control_Monad_State_Class.gets,
    modify: Control_Monad_State_Class.modify,
    modify_: Control_Monad_State_Class.modify_,
    put: Control_Monad_State_Class.put,
    state: Control_Monad_State_Class.state,
    MonadTrans: Control_Monad_Trans_Class.MonadTrans,
    lift: Control_Monad_Trans_Class.lift
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Lazy/index.js":"chn7k","../Control.Monad/index.js":"alCn2","../Control.Monad.Cont.Class/index.js":"kWCMf","../Control.Monad.Error.Class/index.js":"acXO9","../Control.Monad.Reader.Class/index.js":"3BEj9","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Monad.State.Class/index.js":"enW6F","../Control.Monad.Trans.Class/index.js":"9pz5v","../Control.Monad.Writer.Class/index.js":"6wyz5","../Control.MonadPlus/index.js":"jUJh4","../Control.MonadZero/index.js":"aqmZo","../Control.Plus/index.js":"5lCU5","../Data.Functor/index.js":"iy1jO","../Data.Monoid/index.js":"94fxC","../Data.Newtype/index.js":"czJbt","../Data.Semigroup/index.js":"4sNah","../Data.Tuple/index.js":"eOBbM","../Data.Unit/index.js":"d7oKp","../Effect.Class/index.js":"53rRA"}],"7GVqs":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Functor = require("../Data.Functor/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var ChildQuery = function() {
    function ChildQuery1(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    ChildQuery1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new ChildQuery1(value0, value1, value2);
            };
        };
    };
    return ChildQuery1;
}();
var unChildQueryBox = Unsafe_Coerce.unsafeCoerce;
var mkChildQueryBox = Unsafe_Coerce.unsafeCoerce;
var functorChildQuery = new Data_Functor.Functor(function(f) {
    return unChildQueryBox(function(v) {
        return mkChildQueryBox(new ChildQuery(function(dictApplicative) {
            return v.value0(dictApplicative);
        }, v.value1, function($6) {
            return f(v.value2($6));
        }));
    });
});
module.exports = {
    ChildQuery: ChildQuery,
    mkChildQueryBox: mkChildQueryBox,
    unChildQueryBox: unChildQueryBox,
    functorChildQuery: functorChildQuery
};

},{"../Data.Functor/index.js":"iy1jO","../Unsafe.Coerce/index.js":"6gO81"}],"4FimT":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Effect_Unsafe = require("../Effect.Unsafe/index.js");
var Safe_Coerce = require("../Safe.Coerce/index.js");
var Unsafe_Reference = require("../Unsafe.Reference/index.js");
var Subscription = function(x) {
    return x;
};
var Listener = function(x) {
    return x;
};
var Emitter = function(x) {
    return x;
};
var unsubscribe = function(v) {
    return v;
};
var subscribe = function(v) {
    return function(k) {
        return v(function() {
            var $55 = Data_Functor["void"](Effect.functorEffect);
            return function($56) {
                return $55(k($56));
            };
        }());
    };
};
var semigroupSubscription = Effect.semigroupEffect(Data_Semigroup.semigroupUnit);
var notify = function(v) {
    return function(a) {
        return v(a);
    };
};
var monoidSubscription = Effect.monoidEffect(Data_Monoid.monoidUnit);
var makeEmitter = Safe_Coerce.coerce();
var functorEmitter = new Data_Functor.Functor(function(f) {
    return function(v) {
        return function(k) {
            return v(function($57) {
                return k(f($57));
            });
        };
    };
});
var fold = function(f) {
    return function(v) {
        return function(b) {
            return function(k) {
                return function __do() {
                    var result = Effect_Ref["new"](b)();
                    return v(function(a) {
                        return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.modify(f(a))(result))(k);
                    })();
                };
            };
        };
    };
};
var filter = function(p) {
    return function(v) {
        return function(k) {
            return v(function(a) {
                var $36 = p(a);
                if ($36) return k(a);
                return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
            });
        };
    };
};
var create = function __do() {
    var subscribers = Effect_Ref["new"]([])();
    return {
        emitter: function(k) {
            return function __do1() {
                Effect_Ref.modify_(function(v) {
                    return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([
                        k
                    ]);
                })(subscribers)();
                return Effect_Ref.modify_(Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k))(subscribers);
            };
        },
        listener: function(a) {
            return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(subscribers))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(function(k) {
                return k(a);
            }));
        }
    };
};
var fix = function(f) {
    var v = Effect_Unsafe.unsafePerformEffect(create);
    var v1 = f(v.emitter);
    return function(k) {
        return function __do1() {
            var v2 = subscribe(v1.input)(notify(v.listener))();
            var v3 = subscribe(v1.output)(k)();
            return Control_Apply.applySecond(Effect.applyEffect)(v2)(v3);
        };
    };
};
var contravariantListener = new Data_Functor_Contravariant.Contravariant(function(f) {
    return function(v) {
        return Safe_Coerce.coerce()(function($58) {
            return v(f($58));
        });
    };
});
var applyEmitter = new Control_Apply.Apply(function() {
    return functorEmitter;
}, function(v) {
    return function(v1) {
        return function(k) {
            return function __do1() {
                var latestA = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                var latestB = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                var v2 = v(function(a) {
                    return function __do2() {
                        Effect_Ref.write(new Data_Maybe.Just(a))(latestA)();
                        return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(latestB))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function($59) {
                            return k(a($59));
                        }))();
                    };
                })();
                var v3 = v1(function(b) {
                    return function __do2() {
                        Effect_Ref.write(new Data_Maybe.Just(b))(latestB)();
                        return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(latestA))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function($60) {
                            return k(function(v31) {
                                return v31(b);
                            }($60));
                        }))();
                    };
                })();
                return Control_Apply.applySecond(Effect.applyEffect)(v2)(v3);
            };
        };
    };
});
var semigroupEmitter = function(dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEmitter)(Data_Semigroup.append(dictSemigroup)));
};
var monoidEmitter = function(dictMonoid) {
    return new Data_Monoid.Monoid(function() {
        return semigroupEmitter(dictMonoid.Semigroup0());
    }, Data_Monoid.mempty(Data_Monoid.monoidFn(Effect.monoidEffect(monoidSubscription))));
};
var applicativeEmitter = new Control_Applicative.Applicative(function() {
    return applyEmitter;
}, function(a) {
    return function(k) {
        return function __do1() {
            k(a)();
            return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
        };
    };
});
var altEmitter = new Control_Alt.Alt(function() {
    return functorEmitter;
}, function(v) {
    return function(v1) {
        return function(k) {
            return function __do1() {
                var v2 = v(k)();
                var v3 = v1(k)();
                return Control_Apply.applySecond(Effect.applyEffect)(v2)(v3);
            };
        };
    };
});
var plusEmitter = new Control_Plus.Plus(function() {
    return altEmitter;
}, function(v) {
    return Control_Applicative.pure(Effect.applicativeEffect)(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
});
var alternativeEmitter = new Control_Alternative.Alternative(function() {
    return applicativeEmitter;
}, function() {
    return plusEmitter;
});
module.exports = {
    create: create,
    notify: notify,
    makeEmitter: makeEmitter,
    subscribe: subscribe,
    unsubscribe: unsubscribe,
    fold: fold,
    filter: filter,
    fix: fix,
    functorEmitter: functorEmitter,
    applyEmitter: applyEmitter,
    applicativeEmitter: applicativeEmitter,
    altEmitter: altEmitter,
    plusEmitter: plusEmitter,
    alternativeEmitter: alternativeEmitter,
    semigroupEmitter: semigroupEmitter,
    monoidEmitter: monoidEmitter,
    contravariantListener: contravariantListener,
    semigroupSubscription: semigroupSubscription,
    monoidSubscription: monoidSubscription
};

},{"../Control.Alt/index.js":"82RIG","../Control.Alternative/index.js":"bgcOZ","../Control.Applicative/index.js":"dG9TO","../Control.Apply/index.js":"cnlqg","../Control.Bind/index.js":"7Sory","../Control.Plus/index.js":"5lCU5","../Data.Array/index.js":"7x0bj","../Data.Foldable/index.js":"jWmFN","../Data.Functor/index.js":"iy1jO","../Data.Functor.Contravariant/index.js":"1SKFf","../Data.Maybe/index.js":"ePH81","../Data.Monoid/index.js":"94fxC","../Data.Semigroup/index.js":"4sNah","../Data.Unit/index.js":"d7oKp","../Effect/index.js":"bKbtZ","../Effect.Ref/index.js":"8AWDF","../Effect.Unsafe/index.js":"7GTyi","../Safe.Coerce/index.js":"GOTPB","../Unsafe.Reference/index.js":"cv0FE"}],"cv0FE":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var UnsafeRefEqFallback = function(x) {
    return x;
};
var UnsafeRefEq = function(x) {
    return x;
};
var unsafeRefEq = $foreign.reallyUnsafeRefEq;
var eqUnsafeRefEqFallback = function(dictEq) {
    return new Data_Eq.Eq(function(v) {
        return function(v1) {
            return unsafeRefEq(v)(v1) || Data_Eq.eq(dictEq)(v)(v1);
        };
    });
};
var eqUnsafeRefEq = new Data_Eq.Eq(function(v) {
    return function(v1) {
        return unsafeRefEq(v)(v1);
    };
});
module.exports = {
    unsafeRefEq: unsafeRefEq,
    UnsafeRefEq: UnsafeRefEq,
    UnsafeRefEqFallback: UnsafeRefEqFallback,
    eqUnsafeRefEq: eqUnsafeRefEq,
    eqUnsafeRefEqFallback: eqUnsafeRefEqFallback,
    reallyUnsafeRefEq: $foreign.reallyUnsafeRefEq
};

},{"./foreign.js":"6KmKU","../Data.Eq/index.js":"c3b8F"}],"6KmKU":[function(require,module,exports) {
"use strict";
exports.reallyUnsafeRefEq = function(a) {
    return function(b) {
        return a === b;
    };
};

},{}],"fSFYt":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Coyoneda = require("../Data.Coyoneda/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Initialize = function() {
    function Initialize1(value0) {
        this.value0 = value0;
    }
    Initialize1.create = function(value0) {
        return new Initialize1(value0);
    };
    return Initialize1;
}();
var Finalize = function() {
    function Finalize1(value0) {
        this.value0 = value0;
    }
    Finalize1.create = function(value0) {
        return new Finalize1(value0);
    };
    return Finalize1;
}();
var Receive = function() {
    function Receive1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Receive1.create = function(value0) {
        return function(value1) {
            return new Receive1(value0, value1);
        };
    };
    return Receive1;
}();
var Action = function() {
    function Action1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Action1.create = function(value0) {
        return function(value1) {
            return new Action1(value0, value1);
        };
    };
    return Action1;
}();
var Query = function() {
    function Query1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Query1.create = function(value0) {
        return function(value1) {
            return new Query1(value0, value1);
        };
    };
    return Query1;
}();
var functorHalogenQ = new Data_Functor.Functor(function(f) {
    return function(m) {
        if (m instanceof Initialize) return new Initialize(f(m.value0));
        if (m instanceof Finalize) return new Finalize(f(m.value0));
        if (m instanceof Receive) return new Receive(m.value0, f(m.value1));
        if (m instanceof Action) return new Action(m.value0, f(m.value1));
        if (m instanceof Query) return new Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(f)(m.value0), Data_Functor.map(Data_Functor.functorFn)(f)(m.value1));
        throw new Error("Failed pattern match at Halogen.Query.HalogenQ (line 23, column 1 - line 23, column 73): " + [
            m.constructor.name
        ]);
    };
});
var bifunctorHalogenQ = new Data_Bifunctor.Bifunctor(function(f) {
    return function(g) {
        return function(v) {
            if (v instanceof Initialize) return new Initialize(g(v.value0));
            if (v instanceof Finalize) return new Finalize(g(v.value0));
            if (v instanceof Receive) return new Receive(f(v.value0), g(v.value1));
            if (v instanceof Action) return new Action(v.value0, g(v.value1));
            if (v instanceof Query) return new Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(g)(v.value0), Data_Functor.map(Data_Functor.functorFn)(g)(v.value1));
            throw new Error("Failed pattern match at Halogen.Query.HalogenQ (line 16, column 15 - line 21, column 45): " + [
                v.constructor.name
            ]);
        };
    };
});
module.exports = {
    Initialize: Initialize,
    Finalize: Finalize,
    Receive: Receive,
    Action: Action,
    Query: Query,
    bifunctorHalogenQ: bifunctorHalogenQ,
    functorHalogenQ: functorHalogenQ
};

},{"../Data.Bifunctor/index.js":"4aJ07","../Data.Coyoneda/index.js":"aCCay","../Data.Functor/index.js":"iy1jO"}],"eijHo":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Halogen_VDom_DOM = require("../Halogen.VDom.DOM/index.js");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");
var Halogen_VDom_Util = require("../Halogen.VDom.Util/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Thunk = function() {
    function Thunk1(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    Thunk1.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new Thunk1(value0, value1, value2, value3);
                };
            };
        };
    };
    return Thunk1;
}();
var unsafeThunkId = Unsafe_Coerce.unsafeCoerce;
var unsafeEqThunk = function(v, v1) {
    return Halogen_VDom_Util.refEq(v.value0, v1.value0) && Halogen_VDom_Util.refEq(v.value1, v1.value1) && v.value1(v.value3, v1.value3);
};
var thunk = function(tid, eqFn, f, a) {
    return new Thunk(tid, eqFn, f, a);
};
var thunk1 = function(f, a) {
    return thunk(unsafeThunkId(f), Halogen_VDom_Util.refEq, f, a);
};
var thunk2 = function() {
    var eqFn = function(a, b) {
        return Halogen_VDom_Util.refEq(a["_1"], b["_1"]) && Halogen_VDom_Util.refEq(a["_2"], b["_2"]);
    };
    return function(f, a, b) {
        return thunk(unsafeThunkId(f), eqFn, function(v) {
            return f(v["_1"])(v["_2"]);
        }, {
            "_1": a,
            "_2": b
        });
    };
}();
var thunk3 = function() {
    var eqFn = function(a, b) {
        return Halogen_VDom_Util.refEq(a["_1"], b["_1"]) && Halogen_VDom_Util.refEq(a["_2"], b["_2"]) && Halogen_VDom_Util.refEq(a["_3"], b["_3"]);
    };
    return function(f, a, b, c) {
        return thunk(unsafeThunkId(f), eqFn, function(v) {
            return f(v["_1"])(v["_2"])(v["_3"]);
        }, {
            "_1": a,
            "_2": b,
            "_3": c
        });
    };
}();
var thunked = function(eqFn) {
    return function(f) {
        var tid = unsafeThunkId({
            f: f
        });
        var eqFn$prime = Data_Function_Uncurried.mkFn2(eqFn);
        return function(a) {
            return thunk(tid, eqFn$prime, f, a);
        };
    };
};
var runThunk = function(v) {
    return v.value2(v.value3);
};
var mapThunk = function(k) {
    return function(v) {
        return new Thunk(v.value0, v.value1, function($46) {
            return k(v.value2($46));
        }, v.value3);
    };
};
var hoist = mapThunk;
var functorThunk = function(dictFunctor) {
    return new Data_Functor.Functor(function(f) {
        return function(v) {
            return new Thunk(v.value0, v.value1, function() {
                var $47 = Data_Functor.map(dictFunctor)(f);
                return function($48) {
                    return $47(v.value2($48));
                };
            }(), v.value3);
        };
    });
};
var buildThunk = function(toVDom) {
    var haltThunk = function(state) {
        return Halogen_VDom_Machine.halt(state.vdom);
    };
    var patchThunk = function(state, t2) {
        var $43 = unsafeEqThunk(state.thunk, t2);
        if ($43) return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
        var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
            vdom: vdom,
            thunk: t2
        }, patchThunk, haltThunk));
    };
    var renderThunk = function(spec) {
        return function(t) {
            var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
                thunk: t,
                vdom: vdom
            }, patchThunk, haltThunk));
        };
    };
    return renderThunk;
};
module.exports = {
    buildThunk: buildThunk,
    runThunk: runThunk,
    hoist: hoist,
    mapThunk: mapThunk,
    thunked: thunked,
    thunk1: thunk1,
    thunk2: thunk2,
    thunk3: thunk3,
    functorThunk: functorThunk
};

},{"../Data.Function.Uncurried/index.js":"69cE7","../Data.Functor/index.js":"iy1jO","../Halogen.VDom.DOM/index.js":"39yIR","../Halogen.VDom.Machine/index.js":"dgwzB","../Halogen.VDom.Util/index.js":"4ny50","../Unsafe.Coerce/index.js":"6gO81"}],"lpFvC":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");
var withKeys_ = function(ctor) {
    return function(children) {
        var v = ctor([]);
        if (v instanceof Halogen_VDom_Types.Elem) return new Halogen_VDom_Types.Keyed(v.value0, v.value1, v.value2, children);
        return v;
    };
};
var withKeys = function(ctor) {
    return function(props) {
        return function(children) {
            var v = ctor(props)([]);
            if (v instanceof Halogen_VDom_Types.Elem) return new Halogen_VDom_Types.Keyed(v.value0, v.value1, v.value2, children);
            return v;
        };
    };
};
var keyedNS = function() {
    var $12 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
    return function($13) {
        return Halogen_HTML_Core.keyed($12($13));
    };
}();
var keyed = Halogen_HTML_Core.keyed(Data_Maybe.Nothing.value);
var elementNS = function() {
    var $14 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
    return function($15) {
        return Halogen_HTML_Core.element($14($15));
    };
}();
var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
var em = element("em");
var em_ = em([]);
var embed = element("embed");
var embed_ = embed([]);
var fieldset = element("fieldset");
var fieldset_ = fieldset([]);
var figcaption = element("figcaption");
var figcaption_ = figcaption([]);
var figure = element("figure");
var figure_ = figure([]);
var footer = element("footer");
var footer_ = footer([]);
var form = element("form");
var form_ = form([]);
var h1 = element("h1");
var h1_ = h1([]);
var h2 = element("h2");
var h2_ = h2([]);
var h3 = element("h3");
var h3_ = h3([]);
var h4 = element("h4");
var h4_ = h4([]);
var h5 = element("h5");
var h5_ = h5([]);
var h6 = element("h6");
var h6_ = h6([]);
var head = element("head");
var head_ = head([]);
var header = element("header");
var header_ = header([]);
var hr = function(props) {
    return element("hr")(props)([]);
};
var hr_ = hr([]);
var html = element("html");
var html_ = html([]);
var i = element("i");
var i_ = i([]);
var iframe = function(props) {
    return element("iframe")(props)([]);
};
var img = function(props) {
    return element("img")(props)([]);
};
var input = function(props) {
    return element("input")(props)([]);
};
var ins = element("ins");
var ins_ = ins([]);
var kbd = element("kbd");
var kbd_ = kbd([]);
var label = element("label");
var label_ = label([]);
var legend = element("legend");
var legend_ = legend([]);
var li = element("li");
var li_ = li([]);
var link = function(props) {
    return element("link")(props)([]);
};
var main = element("main");
var main_ = main([]);
var map = element("map");
var map_ = map([]);
var mark = element("mark");
var mark_ = mark([]);
var menu = element("menu");
var menu_ = menu([]);
var menuitem = element("menuitem");
var menuitem_ = menuitem([]);
var meta = function(props) {
    return element("meta")(props)([]);
};
var meter = element("meter");
var meter_ = meter([]);
var nav = element("nav");
var nav_ = nav([]);
var noscript = element("noscript");
var noscript_ = noscript([]);
var object = element("object");
var object_ = object([]);
var ol = element("ol");
var ol_ = ol([]);
var optgroup = element("optgroup");
var optgroup_ = optgroup([]);
var option = element("option");
var option_ = option([]);
var output = element("output");
var output_ = output([]);
var p = element("p");
var p_ = p([]);
var param = function(props) {
    return element("param")(props)([]);
};
var pre = element("pre");
var pre_ = pre([]);
var progress = element("progress");
var progress_ = progress([]);
var q = element("q");
var q_ = q([]);
var rp = element("rp");
var rp_ = rp([]);
var rt = element("rt");
var rt_ = rt([]);
var ruby = element("ruby");
var ruby_ = ruby([]);
var samp = element("samp");
var samp_ = samp([]);
var script = element("script");
var script_ = script([]);
var section = element("section");
var section_ = section([]);
var select = element("select");
var select_ = select([]);
var small = element("small");
var small_ = small([]);
var source = function(props) {
    return element("source")(props)([]);
};
var span = element("span");
var span_ = span([]);
var strong = element("strong");
var strong_ = strong([]);
var style = element("style");
var style_ = style([]);
var sub = element("sub");
var sub_ = sub([]);
var summary = element("summary");
var summary_ = summary([]);
var sup = element("sup");
var sup_ = sup([]);
var table = element("table");
var table_ = table([]);
var tbody = element("tbody");
var tbody_ = tbody([]);
var td = element("td");
var td_ = td([]);
var textarea = function(es) {
    return element("textarea")(es)([]);
};
var tfoot = element("tfoot");
var tfoot_ = tfoot([]);
var th = element("th");
var th_ = th([]);
var thead = element("thead");
var thead_ = thead([]);
var time = element("time");
var time_ = time([]);
var title = element("title");
var title_ = title([]);
var tr = element("tr");
var tr_ = tr([]);
var track = function(props) {
    return element("track")(props)([]);
};
var u = element("u");
var u_ = u([]);
var ul = element("ul");
var ul_ = ul([]);
var $$var = element("var");
var var_ = $$var([]);
var video = element("video");
var video_ = video([]);
var wbr = function(props) {
    return element("wbr")(props)([]);
};
var dt = element("dt");
var dt_ = dt([]);
var dl = element("dl");
var dl_ = dl([]);
var div = element("div");
var div_ = div([]);
var dialog = element("dialog");
var dialog_ = dialog([]);
var dfn = element("dfn");
var dfn_ = dfn([]);
var details = element("details");
var details_ = details([]);
var del = element("del");
var del_ = del([]);
var dd = element("dd");
var dd_ = dd([]);
var datalist = element("datalist");
var datalist_ = datalist([]);
var command = function(props) {
    return element("command")(props)([]);
};
var colgroup = element("colgroup");
var colgroup_ = colgroup([]);
var col = function(props) {
    return element("col")(props)([]);
};
var code = element("code");
var code_ = code([]);
var cite = element("cite");
var cite_ = cite([]);
var caption = element("caption");
var caption_ = caption([]);
var canvas = function(props) {
    return element("canvas")(props)([]);
};
var button = element("button");
var button_ = button([]);
var br = function(props) {
    return element("br")(props)([]);
};
var br_ = br([]);
var body = element("body");
var body_ = body([]);
var blockquote = element("blockquote");
var blockquote_ = blockquote([]);
var bdo = element("bdo");
var bdo_ = bdo([]);
var bdi = element("bdi");
var bdi_ = bdi([]);
var base = function(props) {
    return element("base")(props)([]);
};
var b = element("b");
var b_ = b([]);
var audio = element("audio");
var audio_ = audio([]);
var aside = element("aside");
var aside_ = aside([]);
var article = element("article");
var article_ = article([]);
var area = function(props) {
    return element("area")(props)([]);
};
var address = element("address");
var address_ = address([]);
var abbr = element("abbr");
var abbr_ = abbr([]);
var a = element("a");
var a_ = a([]);
module.exports = {
    element: element,
    elementNS: elementNS,
    keyed: keyed,
    keyedNS: keyedNS,
    withKeys: withKeys,
    withKeys_: withKeys_,
    a: a,
    a_: a_,
    abbr: abbr,
    abbr_: abbr_,
    address: address,
    address_: address_,
    area: area,
    article: article,
    article_: article_,
    aside: aside,
    aside_: aside_,
    audio: audio,
    audio_: audio_,
    b: b,
    b_: b_,
    base: base,
    bdi: bdi,
    bdi_: bdi_,
    bdo: bdo,
    bdo_: bdo_,
    blockquote: blockquote,
    blockquote_: blockquote_,
    body: body,
    body_: body_,
    br: br,
    br_: br_,
    button: button,
    button_: button_,
    canvas: canvas,
    caption: caption,
    caption_: caption_,
    cite: cite,
    cite_: cite_,
    code: code,
    code_: code_,
    col: col,
    colgroup: colgroup,
    colgroup_: colgroup_,
    command: command,
    datalist: datalist,
    datalist_: datalist_,
    dd: dd,
    dd_: dd_,
    del: del,
    del_: del_,
    details: details,
    details_: details_,
    dfn: dfn,
    dfn_: dfn_,
    dialog: dialog,
    dialog_: dialog_,
    div: div,
    div_: div_,
    dl: dl,
    dl_: dl_,
    dt: dt,
    dt_: dt_,
    em: em,
    em_: em_,
    embed: embed,
    embed_: embed_,
    fieldset: fieldset,
    fieldset_: fieldset_,
    figcaption: figcaption,
    figcaption_: figcaption_,
    figure: figure,
    figure_: figure_,
    footer: footer,
    footer_: footer_,
    form: form,
    form_: form_,
    h1: h1,
    h1_: h1_,
    h2: h2,
    h2_: h2_,
    h3: h3,
    h3_: h3_,
    h4: h4,
    h4_: h4_,
    h5: h5,
    h5_: h5_,
    h6: h6,
    h6_: h6_,
    head: head,
    head_: head_,
    header: header,
    header_: header_,
    hr: hr,
    hr_: hr_,
    html: html,
    html_: html_,
    i: i,
    i_: i_,
    iframe: iframe,
    img: img,
    input: input,
    ins: ins,
    ins_: ins_,
    kbd: kbd,
    kbd_: kbd_,
    label: label,
    label_: label_,
    legend: legend,
    legend_: legend_,
    li: li,
    li_: li_,
    link: link,
    main: main,
    main_: main_,
    map: map,
    map_: map_,
    mark: mark,
    mark_: mark_,
    menu: menu,
    menu_: menu_,
    menuitem: menuitem,
    menuitem_: menuitem_,
    meta: meta,
    meter: meter,
    meter_: meter_,
    nav: nav,
    nav_: nav_,
    noscript: noscript,
    noscript_: noscript_,
    object: object,
    object_: object_,
    ol: ol,
    ol_: ol_,
    optgroup: optgroup,
    optgroup_: optgroup_,
    option: option,
    option_: option_,
    output: output,
    output_: output_,
    p: p,
    p_: p_,
    param: param,
    pre: pre,
    pre_: pre_,
    progress: progress,
    progress_: progress_,
    q: q,
    q_: q_,
    rp: rp,
    rp_: rp_,
    rt: rt,
    rt_: rt_,
    ruby: ruby,
    ruby_: ruby_,
    samp: samp,
    samp_: samp_,
    script: script,
    script_: script_,
    section: section,
    section_: section_,
    select: select,
    select_: select_,
    small: small,
    small_: small_,
    source: source,
    span: span,
    span_: span_,
    strong: strong,
    strong_: strong_,
    style: style,
    style_: style_,
    sub: sub,
    sub_: sub_,
    summary: summary,
    summary_: summary_,
    sup: sup,
    sup_: sup_,
    table: table,
    table_: table_,
    tbody: tbody,
    tbody_: tbody_,
    td: td,
    td_: td_,
    textarea: textarea,
    tfoot: tfoot,
    tfoot_: tfoot_,
    th: th,
    th_: th_,
    thead: thead,
    thead_: thead_,
    time: time,
    time_: time_,
    title: title,
    title_: title_,
    tr: tr,
    tr_: tr_,
    track: track,
    u: u,
    u_: u_,
    ul: ul,
    ul_: ul_,
    "var": $$var,
    var_: var_,
    video: video,
    video_: video_,
    wbr: wbr
};

},{"../Control.Applicative/index.js":"dG9TO","../Data.Maybe/index.js":"ePH81","../Halogen.HTML.Core/index.js":"eONdi","../Halogen.VDom.Types/index.js":"1EH1q"}],"hq5Vq":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Except = require("../Control.Monad.Except/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Effect_Unsafe = require("../Effect.Unsafe/index.js");
var Foreign = require("../Foreign/index.js");
var Foreign_Index = require("../Foreign.Index/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Clipboard_ClipboardEvent_EventTypes = require("../Web.Clipboard.ClipboardEvent.EventTypes/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_File_FileList = require("../Web.File.FileList/index.js");
var Web_HTML_Event_DragEvent_EventTypes = require("../Web.HTML.Event.DragEvent.EventTypes/index.js");
var Web_HTML_Event_EventTypes = require("../Web.HTML.Event.EventTypes/index.js");
var Web_HTML_HTMLInputElement = require("../Web.HTML.HTMLInputElement/index.js");
var Web_UIEvent_FocusEvent_EventTypes = require("../Web.UIEvent.FocusEvent.EventTypes/index.js");
var Web_UIEvent_KeyboardEvent_EventTypes = require("../Web.UIEvent.KeyboardEvent.EventTypes/index.js");
var Web_UIEvent_MouseEvent_EventTypes = require("../Web.UIEvent.MouseEvent.EventTypes/index.js");
var Web_UIEvent_WheelEvent_EventTypes = require("../Web.UIEvent.WheelEvent.EventTypes/index.js");
var wheelHandler = Unsafe_Coerce.unsafeCoerce;
var touchHandler = Unsafe_Coerce.unsafeCoerce;
var mouseHandler = Unsafe_Coerce.unsafeCoerce;
var keyHandler = Unsafe_Coerce.unsafeCoerce;
var handler$prime = function(et) {
    return function(f) {
        return Halogen_HTML_Core.handler(et)(function(ev) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_Input.Action.create)(f(ev));
        });
    };
};
var handler = function(et) {
    return function(f) {
        return Halogen_HTML_Core.handler(et)(function(ev) {
            return new Data_Maybe.Just(new Halogen_Query_Input.Action(f(ev)));
        });
    };
};
var onAbort = handler("abort");
var onChange = handler(Web_HTML_Event_EventTypes.change);
var onClick = function() {
    var $1 = handler(Web_UIEvent_MouseEvent_EventTypes.click);
    return function($2) {
        return $1(mouseHandler($2));
    };
}();
var onDoubleClick = function() {
    var $3 = handler(Web_UIEvent_MouseEvent_EventTypes.dblclick);
    return function($4) {
        return $3(mouseHandler($4));
    };
}();
var onError = handler(Web_HTML_Event_EventTypes.error);
var onFileUpload = function(dictUnfoldable) {
    return function(f) {
        return handler(Web_HTML_Event_EventTypes.change)(function() {
            var $5 = Data_Maybe.maybe(Data_Unfoldable.none(dictUnfoldable))(Web_File_FileList.items(dictUnfoldable));
            var $6 = Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.target)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_HTML_HTMLInputElement.fromEventTarget)(function($8) {
                return Effect_Unsafe.unsafePerformEffect(Web_HTML_HTMLInputElement.files($8));
            }));
            return function($7) {
                return f($5($6($7)));
            };
        }());
    };
};
var onInput = handler(Web_HTML_Event_EventTypes.input);
var onInvalid = handler(Web_HTML_Event_EventTypes.invalid);
var onKeyDown = function() {
    var $9 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown);
    return function($10) {
        return $9(keyHandler($10));
    };
}();
var onKeyUp = function() {
    var $11 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keyup);
    return function($12) {
        return $11(keyHandler($12));
    };
}();
var onLoad = handler(Web_HTML_Event_EventTypes.load);
var onMouseDown = function() {
    var $13 = handler(Web_UIEvent_MouseEvent_EventTypes.mousedown);
    return function($14) {
        return $13(mouseHandler($14));
    };
}();
var onMouseEnter = function() {
    var $15 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseenter);
    return function($16) {
        return $15(mouseHandler($16));
    };
}();
var onMouseLeave = function() {
    var $17 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseleave);
    return function($18) {
        return $17(mouseHandler($18));
    };
}();
var onMouseMove = function() {
    var $19 = handler(Web_UIEvent_MouseEvent_EventTypes.mousemove);
    return function($20) {
        return $19(mouseHandler($20));
    };
}();
var onMouseOut = function() {
    var $21 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseout);
    return function($22) {
        return $21(mouseHandler($22));
    };
}();
var onMouseOver = function() {
    var $23 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseover);
    return function($24) {
        return $23(mouseHandler($24));
    };
}();
var onMouseUp = function() {
    var $25 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseup);
    return function($26) {
        return $25(mouseHandler($26));
    };
}();
var onReset = handler("reset");
var onResize = handler("resize");
var onScroll = handler("scroll");
var onSelect = handler(Web_HTML_Event_EventTypes.select);
var onSubmit = handler("submit");
var onTouchCancel = function() {
    var $27 = handler("touchcancel");
    return function($28) {
        return $27(touchHandler($28));
    };
}();
var onTouchEnd = function() {
    var $29 = handler("touchend");
    return function($30) {
        return $29(touchHandler($30));
    };
}();
var onTouchEnter = function() {
    var $31 = handler("touchenter");
    return function($32) {
        return $31(touchHandler($32));
    };
}();
var onTouchLeave = function() {
    var $33 = handler("touchleave");
    return function($34) {
        return $33(touchHandler($34));
    };
}();
var onTouchMove = function() {
    var $35 = handler("touchmove");
    return function($36) {
        return $35(touchHandler($36));
    };
}();
var onTouchStart = function() {
    var $37 = handler("touchstart");
    return function($38) {
        return $37(touchHandler($38));
    };
}();
var onTransitionEnd = handler("transitionend");
var onWheel = function() {
    var $39 = handler(Web_UIEvent_WheelEvent_EventTypes.wheel);
    return function($40) {
        return $39(wheelHandler($40));
    };
}();
var focusHandler = Unsafe_Coerce.unsafeCoerce;
var onBlur = function() {
    var $41 = handler(Web_HTML_Event_EventTypes.blur);
    return function($42) {
        return $41(focusHandler($42));
    };
}();
var onFocus = function() {
    var $43 = handler(Web_UIEvent_FocusEvent_EventTypes.focus);
    return function($44) {
        return $43(focusHandler($44));
    };
}();
var onFocusIn = function() {
    var $45 = handler(Web_UIEvent_FocusEvent_EventTypes.focusin);
    return function($46) {
        return $45(focusHandler($46));
    };
}();
var onFocusOut = function() {
    var $47 = handler(Web_UIEvent_FocusEvent_EventTypes.focusout);
    return function($48) {
        return $47(focusHandler($48));
    };
}();
var dragHandler = Unsafe_Coerce.unsafeCoerce;
var onDrag = function() {
    var $49 = handler(Web_HTML_Event_DragEvent_EventTypes.drag);
    return function($50) {
        return $49(dragHandler($50));
    };
}();
var onDragEnd = function() {
    var $51 = handler(Web_HTML_Event_DragEvent_EventTypes.dragend);
    return function($52) {
        return $51(dragHandler($52));
    };
}();
var onDragEnter = function() {
    var $53 = handler(Web_HTML_Event_DragEvent_EventTypes.dragenter);
    return function($54) {
        return $53(dragHandler($54));
    };
}();
var onDragExit = function() {
    var $55 = handler(Web_HTML_Event_DragEvent_EventTypes.dragexit);
    return function($56) {
        return $55(dragHandler($56));
    };
}();
var onDragLeave = function() {
    var $57 = handler(Web_HTML_Event_DragEvent_EventTypes.dragleave);
    return function($58) {
        return $57(dragHandler($58));
    };
}();
var onDragOver = function() {
    var $59 = handler(Web_HTML_Event_DragEvent_EventTypes.dragover);
    return function($60) {
        return $59(dragHandler($60));
    };
}();
var onDragStart = function() {
    var $61 = handler(Web_HTML_Event_DragEvent_EventTypes.dragstart);
    return function($62) {
        return $61(dragHandler($62));
    };
}();
var onDrop = function() {
    var $63 = handler(Web_HTML_Event_DragEvent_EventTypes.drop);
    return function($64) {
        return $63(dragHandler($64));
    };
}();
var clipboardHandler = Unsafe_Coerce.unsafeCoerce;
var onCopy = function() {
    var $65 = handler(Web_Clipboard_ClipboardEvent_EventTypes.copy);
    return function($66) {
        return $65(clipboardHandler($66));
    };
}();
var onCut = function() {
    var $67 = handler(Web_Clipboard_ClipboardEvent_EventTypes.cut);
    return function($68) {
        return $67(clipboardHandler($68));
    };
}();
var onPaste = function() {
    var $69 = handler(Web_Clipboard_ClipboardEvent_EventTypes.paste);
    return function($70) {
        return $69(clipboardHandler($70));
    };
}();
var addForeignPropHandler = function(key) {
    return function(prop) {
        return function(reader) {
            return function(f) {
                var go = function(a) {
                    return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(Data_Identity.monadIdentity)(prop))(Foreign.unsafeToForeign(a));
                };
                return handler$prime(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function(e) {
                    return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(function($71) {
                        return Data_Maybe.Just.create(f($71));
                    })(Control_Monad_Except.runExcept(go(e)));
                }));
            };
        };
    };
};
var onChecked = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("checked")(Foreign.readBoolean(Data_Identity.monadIdentity));
var onSelectedIndexChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("selectedIndex")(Foreign.readInt(Data_Identity.monadIdentity));
var onValueChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("value")(Foreign.readString(Data_Identity.monadIdentity));
var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString(Data_Identity.monadIdentity));
module.exports = {
    handler: handler,
    "handler'": handler$prime,
    onAbort: onAbort,
    onError: onError,
    onLoad: onLoad,
    onScroll: onScroll,
    onChange: onChange,
    onFileUpload: onFileUpload,
    onInput: onInput,
    onInvalid: onInvalid,
    onReset: onReset,
    onSelect: onSelect,
    onSubmit: onSubmit,
    onTransitionEnd: onTransitionEnd,
    onCopy: onCopy,
    onPaste: onPaste,
    onCut: onCut,
    onClick: onClick,
    onDoubleClick: onDoubleClick,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseMove: onMouseMove,
    onMouseOver: onMouseOver,
    onMouseOut: onMouseOut,
    onMouseUp: onMouseUp,
    onWheel: onWheel,
    onKeyDown: onKeyDown,
    onKeyUp: onKeyUp,
    onBlur: onBlur,
    onFocus: onFocus,
    onFocusIn: onFocusIn,
    onFocusOut: onFocusOut,
    onDrag: onDrag,
    onDragEnd: onDragEnd,
    onDragExit: onDragExit,
    onDragEnter: onDragEnter,
    onDragLeave: onDragLeave,
    onDragOver: onDragOver,
    onDragStart: onDragStart,
    onDrop: onDrop,
    onTouchCancel: onTouchCancel,
    onTouchEnd: onTouchEnd,
    onTouchEnter: onTouchEnter,
    onTouchLeave: onTouchLeave,
    onTouchMove: onTouchMove,
    onTouchStart: onTouchStart,
    onResize: onResize,
    onValueChange: onValueChange,
    onValueInput: onValueInput,
    onSelectedIndexChange: onSelectedIndexChange,
    onChecked: onChecked
};

},{"../Control.Bind/index.js":"7Sory","../Control.Monad.Except/index.js":"oPQUY","../Control.Monad.Except.Trans/index.js":"jlllv","../Data.Either/index.js":"3WZha","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Identity/index.js":"3qeSN","../Data.Maybe/index.js":"ePH81","../Data.Unfoldable/index.js":"5NUrk","../Effect.Unsafe/index.js":"7GTyi","../Foreign/index.js":"4Lrqs","../Foreign.Index/index.js":"5zMj7","../Halogen.HTML.Core/index.js":"eONdi","../Halogen.Query.Input/index.js":"cBedG","../Unsafe.Coerce/index.js":"6gO81","../Web.Clipboard.ClipboardEvent.EventTypes/index.js":"9dWWB","../Web.Event.Event/index.js":"6Rhmd","../Web.File.FileList/index.js":"e0q3E","../Web.HTML.Event.DragEvent.EventTypes/index.js":"kF6Sv","../Web.HTML.Event.EventTypes/index.js":"6J0bq","../Web.HTML.HTMLInputElement/index.js":"Bjhju","../Web.UIEvent.FocusEvent.EventTypes/index.js":"bfJlq","../Web.UIEvent.KeyboardEvent.EventTypes/index.js":"1oGOx","../Web.UIEvent.MouseEvent.EventTypes/index.js":"285OU","../Web.UIEvent.WheelEvent.EventTypes/index.js":"kaRhh"}],"oPQUY":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
var runExcept = function() {
    var $0 = Data_Newtype.unwrap();
    return function($1) {
        return $0(Control_Monad_Except_Trans.runExceptT($1));
    };
}();
var mapExcept = function(f) {
    return Control_Monad_Except_Trans.mapExceptT(function() {
        var $2 = Data_Newtype.unwrap();
        return function($3) {
            return Data_Identity.Identity(f($2($3)));
        };
    }());
};
module.exports = {
    runExcept: runExcept,
    mapExcept: mapExcept,
    withExcept: withExcept,
    MonadError: Control_Monad_Error_Class.MonadError,
    catchError: Control_Monad_Error_Class.catchError,
    catchJust: Control_Monad_Error_Class.catchJust,
    throwError: Control_Monad_Error_Class.throwError,
    ExceptT: Control_Monad_Except_Trans.ExceptT,
    MonadTrans: Control_Monad_Except_Trans.MonadTrans,
    except: Control_Monad_Except_Trans.except,
    lift: Control_Monad_Except_Trans.lift,
    mapExceptT: Control_Monad_Except_Trans.mapExceptT,
    runExceptT: Control_Monad_Except_Trans.runExceptT,
    withExceptT: Control_Monad_Except_Trans.withExceptT
};

},{"../Control.Monad.Error.Class/index.js":"acXO9","../Control.Monad.Except.Trans/index.js":"jlllv","../Data.Identity/index.js":"3qeSN","../Data.Newtype/index.js":"czJbt"}],"5zMj7":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Function = require("../Data.Function/index.js");
var Foreign = require("../Foreign/index.js");
var Index = function(errorAt, hasOwnProperty, hasProperty, index) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.index = index;
};
var Indexable = function(ix) {
    this.ix = ix;
};
var unsafeReadProp = function(dictMonad) {
    return function(k) {
        return function(value) {
            return $foreign.unsafeReadPropImpl(Foreign.fail(dictMonad)(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad)), k, value);
        };
    };
};
var readProp = function(dictMonad) {
    return unsafeReadProp(dictMonad);
};
var readIndex = function(dictMonad) {
    return unsafeReadProp(dictMonad);
};
var ix = function(dict) {
    return dict.ix;
};
var index = function(dict) {
    return dict.index;
};
var indexableExceptT = function(dictMonad) {
    return new Indexable(function(dictIndex) {
        return function(f) {
            return function(i) {
                return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(dictMonad))(Data_Function.flip(index(dictIndex))(i))(f);
            };
        };
    });
};
var indexableForeign = function(dictMonad) {
    return new Indexable(function(dictIndex) {
        return index(dictIndex);
    });
};
var hasPropertyImpl = function(v) {
    return function(v1) {
        if (Foreign.isNull(v1)) return false;
        if (Foreign.isUndefined(v1)) return false;
        if (Foreign.typeOf(v1) === "object" || Foreign.typeOf(v1) === "function") return $foreign.unsafeHasProperty(v, v1);
        return false;
    };
};
var hasProperty = function(dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function(v) {
    return function(v1) {
        if (Foreign.isNull(v1)) return false;
        if (Foreign.isUndefined(v1)) return false;
        if (Foreign.typeOf(v1) === "object" || Foreign.typeOf(v1) === "function") return $foreign.unsafeHasOwnProperty(v, v1);
        return false;
    };
};
var indexInt = function(dictMonad) {
    return new Index(Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readIndex(dictMonad)));
};
var indexString = function(dictMonad) {
    return new Index(Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp(dictMonad)));
};
var hasOwnProperty = function(dict) {
    return dict.hasOwnProperty;
};
var errorAt = function(dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index,
    Indexable: Indexable,
    readProp: readProp,
    readIndex: readIndex,
    ix: ix,
    index: index,
    hasProperty: hasProperty,
    hasOwnProperty: hasOwnProperty,
    errorAt: errorAt,
    indexString: indexString,
    indexInt: indexInt,
    indexableForeign: indexableForeign,
    indexableExceptT: indexableExceptT
};

},{"./foreign.js":"b7X0S","../Control.Applicative/index.js":"dG9TO","../Control.Bind/index.js":"7Sory","../Control.Monad.Except.Trans/index.js":"jlllv","../Data.Function/index.js":"cuwEt","../Foreign/index.js":"4Lrqs"}],"b7X0S":[function(require,module,exports) {
"use strict";
exports.unsafeReadPropImpl = function(f, s, key, value) {
    return value == null ? f : s(value[key]);
};
exports.unsafeHasOwnProperty = function(prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
};
exports.unsafeHasProperty = function(prop, value) {
    return prop in value;
};

},{}],"9dWWB":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var paste = "paste";
var cut = "cut";
var copy = "copy";
var clipboardchange = "clipboardchange";
module.exports = {
    clipboardchange: clipboardchange,
    copy: copy,
    cut: cut,
    paste: paste
};

},{}],"6Rhmd":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Web_Event_EventPhase = require("../Web.Event.EventPhase/index.js");
var Web_Event_Internal_Types = require("../Web.Event.Internal.Types/index.js");
var EventType = function(x) {
    return x;
};
var target = function($1) {
    return Data_Nullable.toMaybe($foreign["_target"]($1));
};
var ordEventType = Data_Ord.ordString;
var newtypeEventType = new Data_Newtype.Newtype(function() {
    return undefined;
});
var eventPhase = function(dictPartial) {
    var $2 = Data_Maybe.fromJust();
    var $3 = Data_Enum.toEnum(Web_Event_EventPhase.boundedEnumEventPhase);
    return function($4) {
        return $2($3($foreign.eventPhaseIndex($4)));
    };
};
var eqEventType = Data_Eq.eqString;
var currentTarget = function($5) {
    return Data_Nullable.toMaybe($foreign["_currentTarget"]($5));
};
module.exports = {
    EventType: EventType,
    target: target,
    currentTarget: currentTarget,
    eventPhase: eventPhase,
    newtypeEventType: newtypeEventType,
    eqEventType: eqEventType,
    ordEventType: ordEventType,
    type_: $foreign.type_,
    stopPropagation: $foreign.stopPropagation,
    stopImmediatePropagation: $foreign.stopImmediatePropagation,
    bubbles: $foreign.bubbles,
    cancelable: $foreign.cancelable,
    preventDefault: $foreign.preventDefault,
    defaultPrevented: $foreign.defaultPrevented,
    timeStamp: $foreign.timeStamp
};

},{"./foreign.js":"4gbFP","../Data.Enum/index.js":"1zIX3","../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Newtype/index.js":"czJbt","../Data.Nullable/index.js":"5SdGN","../Data.Ord/index.js":"f14nh","../Web.Event.EventPhase/index.js":"37ihj","../Web.Event.Internal.Types/index.js":"iitC1"}],"4gbFP":[function(require,module,exports) {
"use strict";
exports.bubbles = function(e) {
    return e.bubbles;
};
exports.cancelable = function(e) {
    return e.cancelable;
};
exports._currentTarget = function(e) {
    return e.currentTarget;
};
exports.defaultPrevented = function(e) {
    return function() {
        return e.defaultPrevented;
    };
};
exports.eventPhaseIndex = function(e) {
    return e.eventPhase;
};
exports._target = function(e) {
    return e.target;
};
exports.timeStamp = function(e) {
    return e.timeStamp;
};
exports.type_ = function(e) {
    return e.type;
};
exports.preventDefault = function(e) {
    return function() {
        return e.preventDefault();
    };
};
exports.stopImmediatePropagation = function(e) {
    return function() {
        return e.stopImmediatePropagation();
    };
};
exports.stopPropagation = function(e) {
    return function() {
        return e.stopPropagation();
    };
};

},{}],"37ihj":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var None = function() {
    function None1() {
    }
    None1.value = new None1();
    return None1;
}();
var Capturing = function() {
    function Capturing1() {
    }
    Capturing1.value = new Capturing1();
    return Capturing1;
}();
var AtTarget = function() {
    function AtTarget1() {
    }
    AtTarget1.value = new AtTarget1();
    return AtTarget1;
}();
var Bubbling = function() {
    function Bubbling1() {
    }
    Bubbling1.value = new Bubbling1();
    return Bubbling1;
}();
var toEnumEventPhase = function(v) {
    if (v === 0) return new Data_Maybe.Just(None.value);
    if (v === 1) return new Data_Maybe.Just(Capturing.value);
    if (v === 2) return new Data_Maybe.Just(AtTarget.value);
    if (v === 3) return new Data_Maybe.Just(Bubbling.value);
    return Data_Maybe.Nothing.value;
};
var fromEnumEventPhase = function(v) {
    if (v instanceof None) return 0;
    if (v instanceof Capturing) return 1;
    if (v instanceof AtTarget) return 2;
    if (v instanceof Bubbling) return 3;
    throw new Error("Failed pattern match at Web.Event.EventPhase (line 40, column 3 - line 44, column 18): " + [
        v.constructor.name
    ]);
};
var eqEventPhase = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof None && y instanceof None) return true;
        if (x instanceof Capturing && y instanceof Capturing) return true;
        if (x instanceof AtTarget && y instanceof AtTarget) return true;
        if (x instanceof Bubbling && y instanceof Bubbling) return true;
        return false;
    };
});
var ordEventPhase = new Data_Ord.Ord(function() {
    return eqEventPhase;
}, function(x) {
    return function(y) {
        if (x instanceof None && y instanceof None) return Data_Ordering.EQ.value;
        if (x instanceof None) return Data_Ordering.LT.value;
        if (y instanceof None) return Data_Ordering.GT.value;
        if (x instanceof Capturing && y instanceof Capturing) return Data_Ordering.EQ.value;
        if (x instanceof Capturing) return Data_Ordering.LT.value;
        if (y instanceof Capturing) return Data_Ordering.GT.value;
        if (x instanceof AtTarget && y instanceof AtTarget) return Data_Ordering.EQ.value;
        if (x instanceof AtTarget) return Data_Ordering.LT.value;
        if (y instanceof AtTarget) return Data_Ordering.GT.value;
        if (x instanceof Bubbling && y instanceof Bubbling) return Data_Ordering.EQ.value;
        throw new Error("Failed pattern match at Web.Event.EventPhase (line 14, column 1 - line 14, column 48): " + [
            x.constructor.name,
            y.constructor.name
        ]);
    };
});
var enumEventPhase = new Data_Enum.Enum(function() {
    return ordEventPhase;
}, Data_Enum.defaultPred(toEnumEventPhase)(fromEnumEventPhase), Data_Enum.defaultSucc(toEnumEventPhase)(fromEnumEventPhase));
var boundedEventPhase = new Data_Bounded.Bounded(function() {
    return ordEventPhase;
}, None.value, Bubbling.value);
var boundedEnumEventPhase = new Data_Enum.BoundedEnum(function() {
    return boundedEventPhase;
}, function() {
    return enumEventPhase;
}, 4, fromEnumEventPhase, toEnumEventPhase);
module.exports = {
    None: None,
    Capturing: Capturing,
    AtTarget: AtTarget,
    Bubbling: Bubbling,
    toEnumEventPhase: toEnumEventPhase,
    fromEnumEventPhase: fromEnumEventPhase,
    eqEventPhase: eqEventPhase,
    ordEventPhase: ordEventPhase,
    boundedEventPhase: boundedEventPhase,
    enumEventPhase: enumEventPhase,
    boundedEnumEventPhase: boundedEnumEventPhase
};

},{"../Data.Bounded/index.js":"jzt4h","../Data.Enum/index.js":"1zIX3","../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Ordering/index.js":"lEtyd"}],"e0q3E":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var item = function(i) {
    var $1 = $foreign["_item"](i);
    return function($2) {
        return Data_Nullable.toMaybe($1($2));
    };
};
var items = function(dictUnfoldable) {
    return function(fl) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function(i) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(i + 1 | 0))(item(i)(fl));
        })(0);
    };
};
module.exports = {
    item: item,
    items: items,
    length: $foreign.length
};

},{"./foreign.js":"dUSzh","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Nullable/index.js":"5SdGN","../Data.Tuple/index.js":"eOBbM","../Data.Unfoldable/index.js":"5NUrk"}],"dUSzh":[function(require,module,exports) {
"use strict";
exports.length = function(fileList) {
    return fileList.length;
};
exports._item = function(index) {
    return function(fileList) {
        return fileList.item(index);
    };
};

},{}],"kF6Sv":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var drop = "drop";
var dragstart = "dragstart";
var dragover = "dragover";
var dragleave = "dragleave";
var dragexit = "dragexit";
var dragenter = "dragenter";
var dragend = "dragend";
var drag = "drag";
module.exports = {
    dragstart: dragstart,
    drag: drag,
    dragenter: dragenter,
    dragexit: dragexit,
    dragleave: dragleave,
    dragover: dragover,
    drop: drop,
    dragend: dragend
};

},{}],"bfJlq":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var focusout = "focusout";
var focusin = "focusin";
var focus = "focus";
var blur = "blur";
module.exports = {
    blur: blur,
    focus: focus,
    focusin: focusin,
    focusout: focusout
};

},{}],"1oGOx":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var keyup = "keyup";
var keydown = "keydown";
module.exports = {
    keydown: keydown,
    keyup: keyup
};

},{}],"285OU":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var mouseup = "mouseup";
var mouseover = "mouseover";
var mouseout = "mouseout";
var mousemove = "mousemove";
var mouseleave = "mouseleave";
var mouseenter = "mouseenter";
var mousedown = "mousedown";
var dblclick = "dblclick";
var click = "click";
module.exports = {
    click: click,
    dblclick: dblclick,
    mousedown: mousedown,
    mouseenter: mouseenter,
    mouseleave: mouseleave,
    mousemove: mousemove,
    mouseout: mouseout,
    mouseover: mouseover,
    mouseup: mouseup
};

},{}],"kaRhh":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var wheel = "wheel";
module.exports = {
    wheel: wheel
};

},{}],"bmPQn":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Halogen_Aff_Driver = require("../Halogen.Aff.Driver/index.js");
var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_VDom_DOM = require("../Halogen.VDom.DOM/index.js");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");
var Halogen_VDom_Thunk = require("../Halogen.VDom.Thunk/index.js");
var Unsafe_Reference = require("../Unsafe.Reference/index.js");
var Web_DOM_Node = require("../Web.DOM.Node/index.js");
var Web_HTML = require("../Web.HTML/index.js");
var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_Window = require("../Web.HTML.Window/index.js");
var RenderState = function(x) {
    return x;
};
var substInParent = function(v) {
    return function(v1) {
        return function(v2) {
            if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
            if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
            return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
        };
    };
};
var removeChild = function(v) {
    return function __do() {
        var npn = Web_DOM_Node.parentNode(v.node)();
        return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function(pn) {
            return Web_DOM_Node.removeChild(v.node)(pn);
        })(npn)();
    };
};
var mkSpec = function(handler) {
    return function(renderChildRef) {
        return function(document) {
            var getNode = Halogen_Aff_Driver_State.unRenderStateX(function(v) {
                return v.node;
            });
            var done = function(st) {
                if (st instanceof Data_Maybe.Just) return Halogen_VDom_Machine.halt(st.value0);
                return Data_Unit.unit;
            };
            var buildWidget = function(spec) {
                var buildThunk = Halogen_VDom_Thunk.buildThunk(Data_Newtype.unwrap())(spec);
                var renderComponentSlot = function(cs) {
                    var renderChild = Effect_Ref.read(renderChildRef)();
                    var rsx = renderChild(cs)();
                    var node = getNode(rsx);
                    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, patch, done));
                };
                var render = function(slot) {
                    if (slot instanceof Halogen_Component.ComponentSlot) return renderComponentSlot(slot.value0);
                    if (slot instanceof Halogen_Component.ThunkSlot) {
                        var step = buildThunk(slot.value0);
                        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step), new Data_Maybe.Just(step), patch, done));
                    }
                    throw new Error("Failed pattern match at Halogen.VDom.Driver (line 85, column 7 - line 90, column 75): " + [
                        slot.constructor.name
                    ]);
                };
                var patch = function(st, slot) {
                    if (st instanceof Data_Maybe.Just) {
                        if (slot instanceof Halogen_Component.ComponentSlot) {
                            Halogen_VDom_Machine.halt(st.value0);
                            return renderComponentSlot(slot.value0);
                        }
                        if (slot instanceof Halogen_Component.ThunkSlot) {
                            var step$prime = Halogen_VDom_Machine.step(st.value0, slot.value0);
                            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step$prime), new Data_Maybe.Just(step$prime), patch, done));
                        }
                        throw new Error("Failed pattern match at Halogen.VDom.Driver (line 98, column 22 - line 104, column 79): " + [
                            slot.constructor.name
                        ]);
                    }
                    return render(slot);
                };
                return render;
            };
            var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
            return {
                buildWidget: buildWidget,
                buildAttributes: buildAttributes,
                document: document
            };
        };
    };
};
var renderSpec = function(document) {
    return function(container) {
        var render = function(handler) {
            return function(child) {
                return function(v) {
                    return function(v1) {
                        if (v1 instanceof Data_Maybe.Nothing) return function __do() {
                            var renderChildRef = Effect_Ref["new"](child)();
                            var spec = mkSpec(handler)(renderChildRef)(document);
                            var machine = Halogen_VDom_DOM.buildVDom(spec)(v);
                            var node = Halogen_VDom_Machine.extract(machine);
                            Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                            return {
                                machine: machine,
                                node: node,
                                renderChildRef: renderChildRef
                            };
                        };
                        if (v1 instanceof Data_Maybe.Just) return function __do1() {
                            Effect_Ref.write(child)(v1.value0.renderChildRef)();
                            var parent = Web_DOM_Node.parentNode(v1.value0.node)();
                            var nextSib = Web_DOM_Node.nextSibling(v1.value0.node)();
                            var machine$prime = Halogen_VDom_Machine.step(v1.value0.machine, v);
                            var newNode = Halogen_VDom_Machine.extract(machine$prime);
                            Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent))();
                            return {
                                machine: machine$prime,
                                node: newNode,
                                renderChildRef: v1.value0.renderChildRef
                            };
                        };
                        throw new Error("Failed pattern match at Halogen.VDom.Driver (line 159, column 5 - line 175, column 80): " + [
                            v1.constructor.name
                        ]);
                    };
                };
            };
        };
        return {
            render: render,
            renderChild: Control_Category.identity(Control_Category.categoryFn),
            removeChild: removeChild,
            dispose: removeChild
        };
    };
};
var runUI = function(component) {
    return function(i) {
        return function(element) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function(document) {
                return Halogen_Aff_Driver.runUI(renderSpec(document)(element))(component)(i);
            });
        };
    };
};
module.exports = {
    runUI: runUI
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Data.Foldable/index.js":"jWmFN","../Data.Functor/index.js":"iy1jO","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.Maybe/index.js":"ePH81","../Data.Newtype/index.js":"czJbt","../Data.Unit/index.js":"d7oKp","../Effect/index.js":"bKbtZ","../Effect.Aff/index.js":"3YiSJ","../Effect.Class/index.js":"53rRA","../Effect.Ref/index.js":"8AWDF","../Halogen.Aff.Driver/index.js":"geSHn","../Halogen.Aff.Driver.State/index.js":"aVy4v","../Halogen.Component/index.js":"2KBrj","../Halogen.VDom.DOM/index.js":"39yIR","../Halogen.VDom.DOM.Prop/index.js":"lN1qa","../Halogen.VDom.Machine/index.js":"dgwzB","../Halogen.VDom.Thunk/index.js":"eijHo","../Unsafe.Reference/index.js":"cv0FE","../Web.DOM.Node/index.js":"hcVer","../Web.HTML/index.js":"gCjev","../Web.HTML.HTMLDocument/index.js":"i3hAZ","../Web.HTML.HTMLElement/index.js":"60xVV","../Web.HTML.Window/index.js":"iseED"}],"geSHn":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_Aff_Driver_Eval = require("../Halogen.Aff.Driver.Eval/index.js");
var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_Data_Slot = require("../Halogen.Data.Slot/index.js");
var Halogen_Query_HalogenQ = require("../Halogen.Query.HalogenQ/index.js");
var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");
var Halogen_Subscription = require("../Halogen.Subscription/index.js");
var newLifecycleHandlers = Effect_Ref["new"]({
    initializers: Data_List_Types.Nil.value,
    finalizers: Data_List_Types.Nil.value
});
var handlePending = function(ref) {
    return function __do() {
        var queue = Effect_Ref.read(ref)();
        Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
        return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(queue)(function() {
            var $28 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
            return function($29) {
                return Halogen_Aff_Driver_Eval.handleAff($28(Data_List.reverse($29)));
            };
        }())();
    };
};
var cleanupSubscriptionsAndForks = function(v) {
    return function __do() {
        Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(Halogen_Subscription.unsubscribe)))(Effect_Ref.read(v.subscriptions))();
        Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
        Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function() {
            var $30 = Effect_Aff.killFiber(Effect_Exception.error("finalized"));
            return function($31) {
                return Halogen_Aff_Driver_Eval.handleAff($30($31));
            };
        }()))(Effect_Ref.read(v.forks))();
        return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();
    };
};
var runUI = function(renderSpec) {
    return function(component) {
        return function(i) {
            var squashChildInitializers = function(lchs) {
                return function(preInits) {
                    return Halogen_Aff_Driver_State.unDriverStateX(function(st) {
                        var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));
                        return Effect_Ref.modify_(function(handlers) {
                            return {
                                initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function() {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(parentInitializer)(function() {
                                        return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                            handlePending(st.pendingQueries)();
                                            return handlePending(st.pendingOuts)();
                                        });
                                    });
                                }), preInits),
                                finalizers: handlers.finalizers
                            };
                        })(lchs);
                    });
                };
            };
            var runComponent = function(lchs) {
                return function(handler) {
                    return function(j) {
                        return Halogen_Component.unComponent(function(c) {
                            return function __do() {
                                var lchs$prime = newLifecycleHandlers();
                                var $$var = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(lchs$prime)();
                                var pre = Effect_Ref.read(lchs)();
                                Effect_Ref.write({
                                    initializers: Data_List_Types.Nil.value,
                                    finalizers: pre.finalizers
                                })(lchs)();
                                Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX(function() {
                                    var $32 = render(lchs);
                                    return function($33) {
                                        return $32(function(v) {
                                            return v.selfRef;
                                        }($33));
                                    };
                                }()))(Effect_Ref.read($$var))();
                                Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(pre.initializers))(Effect_Ref.read($$var))();
                                return $$var;
                            };
                        });
                    };
                };
            };
            var renderChild = function(lchs) {
                return function(handler) {
                    return function(childrenInRef) {
                        return function(childrenOutRef) {
                            return Halogen_Component.unComponentSlot(function(slot) {
                                return function __do() {
                                    var childrenIn = Data_Functor.map(Effect.functorEffect)(slot.pop)(Effect_Ref.read(childrenInRef))();
                                    var $$var = function() {
                                        if (childrenIn instanceof Data_Maybe.Just) {
                                            Effect_Ref.write(childrenIn.value0.value1)(childrenInRef)();
                                            var dsx = Effect_Ref.read(childrenIn.value0.value0)();
                                            Halogen_Aff_Driver_State.unDriverStateX(function(st) {
                                                return function __do1() {
                                                    Data_Function.flip(Effect_Ref.write)(st.handlerRef)(function() {
                                                        var $34 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                        return function($35) {
                                                            return $34(slot.output($35));
                                                        };
                                                    }())();
                                                    return Halogen_Aff_Driver_Eval.handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Receive(slot.input, Data_Unit.unit))))();
                                                };
                                            })(dsx)();
                                            return childrenIn.value0.value0;
                                        }
                                        if (childrenIn instanceof Data_Maybe.Nothing) return runComponent(lchs)(function() {
                                            var $36 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                            return function($37) {
                                                return $36(slot.output($37));
                                            };
                                        }())(slot.input)(slot.component)();
                                        throw new Error("Failed pattern match at Halogen.Aff.Driver (line 210, column 14 - line 219, column 98): " + [
                                            childrenIn.constructor.name
                                        ]);
                                    }();
                                    var isDuplicate = Data_Functor.map(Effect.functorEffect)(function($38) {
                                        return Data_Maybe.isJust(slot.get($38));
                                    })(Effect_Ref.read(childrenOutRef))();
                                    Control_Applicative.when(Effect.applicativeEffect)(isDuplicate)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                                    Effect_Ref.modify_(slot.set($$var))(childrenOutRef)();
                                    return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read($$var))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function(v) {
                                        if (v instanceof Data_Maybe.Nothing) return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                        if (v instanceof Data_Maybe.Just) return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v.value0));
                                        throw new Error("Failed pattern match at Halogen.Aff.Driver (line 224, column 37 - line 226, column 50): " + [
                                            v.constructor.name
                                        ]);
                                    }))();
                                };
                            });
                        };
                    };
                };
            };
            var render = function(lchs) {
                return function($$var) {
                    return function __do() {
                        var v = Effect_Ref.read($$var)();
                        var shouldProcessHandlers = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
                        Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
                        Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();
                        Effect_Ref.write(v.children)(v.childrenIn)();
                        var selfRef = Control_Category.identity(Control_Category.categoryFn)(v.selfRef);
                        var pendingQueries = Control_Category.identity(Control_Category.categoryFn)(v.pendingQueries);
                        var pendingHandlers = Control_Category.identity(Control_Category.categoryFn)(v.pendingHandlers);
                        var handler = function() {
                            var $39 = Halogen_Aff_Driver_Eval.queueOrRun(pendingHandlers);
                            var $40 = Data_Functor["void"](Effect_Aff.functorAff);
                            var $41 = Halogen_Aff_Driver_Eval.evalF(render)(selfRef);
                            return function($42) {
                                return $39($40($41($42)));
                            };
                        }();
                        var childHandler = function() {
                            var $43 = Halogen_Aff_Driver_Eval.queueOrRun(pendingQueries);
                            return function($44) {
                                return $43(handler(Halogen_Query_Input.Action.create($44)));
                            };
                        }();
                        var rendering = renderSpec.render(function($45) {
                            return Halogen_Aff_Driver_Eval.handleAff(handler($45));
                        })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                        var children = Effect_Ref.read(v.childrenOut)();
                        var childrenIn = Effect_Ref.read(v.childrenIn)();
                        Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(childrenIn)(function(v1) {
                            return function __do1() {
                                var childDS = Effect_Ref.read(v1)();
                                Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(childDS)();
                                return finalize(lchs)(childDS)();
                            };
                        })();
                        Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function(ds$prime) {
                            return {
                                component: ds$prime.component,
                                state: ds$prime.state,
                                refs: ds$prime.refs,
                                children: children,
                                childrenIn: ds$prime.childrenIn,
                                childrenOut: ds$prime.childrenOut,
                                selfRef: ds$prime.selfRef,
                                handlerRef: ds$prime.handlerRef,
                                pendingQueries: ds$prime.pendingQueries,
                                pendingOuts: ds$prime.pendingOuts,
                                pendingHandlers: ds$prime.pendingHandlers,
                                rendering: new Data_Maybe.Just(rendering),
                                fresh: ds$prime.fresh,
                                subscriptions: ds$prime.subscriptions,
                                forks: ds$prime.forks,
                                lifecycleHandlers: ds$prime.lifecycleHandlers
                            };
                        }))();
                        return Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function(v1) {
                            return function __do1() {
                                var handlers = Effect_Ref.read(pendingHandlers)();
                                Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(pendingHandlers)();
                                Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function() {
                                    var $46 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
                                    return function($47) {
                                        return Halogen_Aff_Driver_Eval.handleAff($46(Data_List.reverse($47)));
                                    };
                                }())(handlers)();
                                var mmore = Effect_Ref.read(pendingHandlers)();
                                var $21 = Data_Maybe.maybe(false)(Data_List["null"])(mmore);
                                if ($21) return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                            };
                        }))();
                    };
                };
            };
            var finalize = function(lchs) {
                return Halogen_Aff_Driver_State.unDriverStateX(function(st) {
                    return function __do() {
                        cleanupSubscriptionsAndForks(st)();
                        var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));
                        Effect_Ref.modify_(function(handlers) {
                            return {
                                initializers: handlers.initializers,
                                finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                            };
                        })(lchs)();
                        return Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(st.children)(function(v) {
                            return function __do1() {
                                var dsx = Effect_Ref.read(v)();
                                return finalize(lchs)(dsx)();
                            };
                        })();
                    };
                });
            };
            var evalDriver = function(disposed) {
                return function(ref) {
                    return function(q) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(disposed)))(function(v) {
                            if (v) return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                            return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);
                        });
                    };
                };
            };
            var dispose = function(disposed) {
                return function(lchs) {
                    return function(dsx) {
                        return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                            var v = Effect_Ref.read(disposed)();
                            if (v) return Data_Unit.unit;
                            Effect_Ref.write(true)(disposed)();
                            finalize(lchs)(dsx)();
                            return Halogen_Aff_Driver_State.unDriverStateX(function(v1) {
                                return function __do1() {
                                    var v2 = Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(Effect_Ref.read(v1.selfRef))();
                                    return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v2.rendering)(renderSpec.dispose)();
                                };
                            })(dsx)();
                        });
                    };
                };
            };
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function(lchs) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function(disposed) {
                    return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                        var sio = Halogen_Subscription.create();
                        var dsx = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref.read)(runComponent(lchs)(function() {
                            var $48 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
                            var $49 = Halogen_Subscription.notify(sio.listener);
                            return function($50) {
                                return $48($49($50));
                            };
                        }())(i)(component))();
                        return Halogen_Aff_Driver_State.unDriverStateX(function(st) {
                            return Control_Applicative.pure(Effect.applicativeEffect)({
                                query: evalDriver(disposed)(st.selfRef),
                                messages: sio.emitter,
                                dispose: dispose(disposed)(lchs)(dsx)
                            });
                        })(dsx)();
                    });
                });
            });
        };
    };
};
module.exports = {
    runUI: runUI
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Monad.Fork.Class/index.js":"9uAZM","../Control.Monad.Rec.Class/index.js":"dMFG0","../Control.Parallel/index.js":"651yb","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.List/index.js":"iZK6y","../Data.List.Types/index.js":"80Bba","../Data.Map.Internal/index.js":"iS1Sf","../Data.Maybe/index.js":"ePH81","../Data.Unit/index.js":"d7oKp","../Effect/index.js":"bKbtZ","../Effect.Aff/index.js":"3YiSJ","../Effect.Class/index.js":"53rRA","../Effect.Console/index.js":"iqiOc","../Effect.Exception/index.js":"3J2RH","../Effect.Ref/index.js":"8AWDF","../Halogen/index.js":"5BzjD","../Halogen.Aff.Driver.Eval/index.js":"l8jb5","../Halogen.Aff.Driver.State/index.js":"aVy4v","../Halogen.Component/index.js":"2KBrj","../Halogen.Data.Slot/index.js":"elbaz","../Halogen.Query.HalogenQ/index.js":"fSFYt","../Halogen.Query.Input/index.js":"cBedG","../Halogen.Subscription/index.js":"4FimT"}],"9uAZM":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var MonadFork = function(Functor1, Monad0, fork, join, suspend) {
    this.Functor1 = Functor1;
    this.Monad0 = Monad0;
    this.fork = fork;
    this.join = join;
    this.suspend = suspend;
};
var MonadKill = function(MonadFork0, MonadThrow1, kill) {
    this.MonadFork0 = MonadFork0;
    this.MonadThrow1 = MonadThrow1;
    this.kill = kill;
};
var Completed = function() {
    function Completed1(value0) {
        this.value0 = value0;
    }
    Completed1.create = function(value0) {
        return new Completed1(value0);
    };
    return Completed1;
}();
var Failed = function() {
    function Failed1(value0) {
        this.value0 = value0;
    }
    Failed1.create = function(value0) {
        return new Failed1(value0);
    };
    return Failed1;
}();
var Killed = function() {
    function Killed1(value0) {
        this.value0 = value0;
    }
    Killed1.create = function(value0) {
        return new Killed1(value0);
    };
    return Killed1;
}();
var MonadBracket = function(MonadError1, MonadKill0, bracket, never, uninterruptible) {
    this.MonadError1 = MonadError1;
    this.MonadKill0 = MonadKill0;
    this.bracket = bracket;
    this.never = never;
    this.uninterruptible = uninterruptible;
};
var uninterruptible = function(dict) {
    return dict.uninterruptible;
};
var suspend = function(dict) {
    return dict.suspend;
};
var never = function(dict) {
    return dict.never;
};
var monadForkAff = new MonadFork(function() {
    return Effect_Aff.functorFiber;
}, function() {
    return Effect_Aff.monadAff;
}, Effect_Aff.forkAff, Effect_Aff.joinFiber, Effect_Aff.suspendAff);
var monadKillAff = new MonadKill(function() {
    return monadForkAff;
}, function() {
    return Effect_Aff.monadThrowAff;
}, Effect_Aff.killFiber);
var monadBracketAff = new MonadBracket(function() {
    return Effect_Aff.monadErrorAff;
}, function() {
    return monadKillAff;
}, function(acquire) {
    return function(release) {
        return function(run) {
            return Effect_Aff.generalBracket(acquire)({
                completed: function($11) {
                    return release(Completed.create($11));
                },
                failed: function($12) {
                    return release(Failed.create($12));
                },
                killed: function($13) {
                    return release(Killed.create($13));
                }
            })(run);
        };
    };
}, Effect_Aff.never, Effect_Aff.invincible);
var kill = function(dict) {
    return dict.kill;
};
var join = function(dict) {
    return dict.join;
};
var fork = function(dict) {
    return dict.fork;
};
var monadForkReaderT = function(dictMonadFork) {
    return new MonadFork(dictMonadFork.Functor1, function() {
        return Control_Monad_Reader_Trans.monadReaderT(dictMonadFork.Monad0());
    }, function(v) {
        var $14 = fork(dictMonadFork);
        return function($15) {
            return $14(v($15));
        };
    }, function() {
        var $16 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadFork.Monad0());
        var $17 = join(dictMonadFork);
        return function($18) {
            return $16($17($18));
        };
    }(), function(v) {
        var $19 = suspend(dictMonadFork);
        return function($20) {
            return $19(v($20));
        };
    });
};
var monadKillReaderT = function(dictMonadKill) {
    return new MonadKill(function() {
        return monadForkReaderT(dictMonadKill.MonadFork0());
    }, function() {
        return Control_Monad_Reader_Trans.monadThrowReaderT(dictMonadKill.MonadThrow1());
    }, function(e) {
        var $21 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadKill.MonadThrow1().Monad0());
        var $22 = kill(dictMonadKill)(e);
        return function($23) {
            return $21($22($23));
        };
    });
};
var bracket = function(dict) {
    return dict.bracket;
};
var monadBracketReaderT = function(dictMonadBracket) {
    return new MonadBracket(function() {
        return Control_Monad_Reader_Trans.monadErrorReaderT(dictMonadBracket.MonadError1());
    }, function() {
        return monadKillReaderT(dictMonadBracket.MonadKill0());
    }, function(v) {
        return function(release) {
            return function(run) {
                return function(r) {
                    return bracket(dictMonadBracket)(v(r))(function(c) {
                        return function(a) {
                            return Control_Monad_Reader_Trans.runReaderT(release(c)(a))(r);
                        };
                    })(function(a) {
                        return Control_Monad_Reader_Trans.runReaderT(run(a))(r);
                    });
                };
            };
        };
    }, Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadBracket.MonadError1().MonadThrow0().Monad0())(never(dictMonadBracket)), function(k) {
        return function(r) {
            return uninterruptible(dictMonadBracket)(Control_Monad_Reader_Trans.runReaderT(k)(r));
        };
    });
};
module.exports = {
    bracket: bracket,
    fork: fork,
    join: join,
    kill: kill,
    never: never,
    suspend: suspend,
    uninterruptible: uninterruptible,
    MonadFork: MonadFork,
    MonadKill: MonadKill,
    Completed: Completed,
    Failed: Failed,
    Killed: Killed,
    MonadBracket: MonadBracket,
    monadForkAff: monadForkAff,
    monadForkReaderT: monadForkReaderT,
    monadKillAff: monadKillAff,
    monadKillReaderT: monadKillReaderT,
    monadBracketAff: monadBracketAff,
    monadBracketReaderT: monadBracketReaderT
};

},{"../Control.Monad.Reader.Trans/index.js":"eiBpm","../Control.Monad.Trans.Class/index.js":"9pz5v","../Effect.Aff/index.js":"3YiSJ"}],"iqiOc":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Show = require("../Data.Show/index.js");
var warnShow = function(dictShow) {
    return function(a) {
        return $foreign.warn(Data_Show.show(dictShow)(a));
    };
};
var logShow = function(dictShow) {
    return function(a) {
        return $foreign.log(Data_Show.show(dictShow)(a));
    };
};
var infoShow = function(dictShow) {
    return function(a) {
        return $foreign.info(Data_Show.show(dictShow)(a));
    };
};
var errorShow = function(dictShow) {
    return function(a) {
        return $foreign.error(Data_Show.show(dictShow)(a));
    };
};
module.exports = {
    logShow: logShow,
    warnShow: warnShow,
    errorShow: errorShow,
    infoShow: infoShow,
    log: $foreign.log,
    warn: $foreign.warn,
    error: $foreign.error,
    info: $foreign.info,
    time: $foreign.time,
    timeLog: $foreign.timeLog,
    timeEnd: $foreign.timeEnd,
    clear: $foreign.clear
};

},{"./foreign.js":"db78P","../Data.Show/index.js":"b6tNW"}],"db78P":[function(require,module,exports) {
"use strict";
exports.log = function(s) {
    return function() {
        console.log(s);
    };
};
exports.warn = function(s) {
    return function() {
        console.warn(s);
    };
};
exports.error = function(s) {
    return function() {
        console.error(s);
    };
};
exports.info = function(s) {
    return function() {
        console.info(s);
    };
};
exports.time = function(s) {
    return function() {
        console.time(s);
    };
};
exports.timeLog = function(s) {
    return function() {
        console.timeLog(s);
    };
};
exports.timeEnd = function(s) {
    return function() {
        console.timeEnd(s);
    };
};
exports.clear = function() {
    console.clear();
};

},{}],"5BzjD":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Lazy = require("../Data.Lazy/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_Data_Slot = require("../Halogen.Data.Slot/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query = require("../Halogen.Query/index.js");
module.exports = {
    defer: Data_Lazy.defer,
    componentSlot: Halogen_Component.componentSlot,
    defaultEval: Halogen_Component.defaultEval,
    hoist: Halogen_Component.hoist,
    mkComponent: Halogen_Component.mkComponent,
    mkEval: Halogen_Component.mkEval,
    unComponent: Halogen_Component.unComponent,
    unComponentSlot: Halogen_Component.unComponentSlot,
    AttrName: Halogen_HTML_Core.AttrName,
    ClassName: Halogen_HTML_Core.ClassName,
    ElemName: Halogen_HTML_Core.ElemName,
    Namespace: Halogen_HTML_Core.Namespace,
    PropName: Halogen_HTML_Core.PropName,
    ChildQuery: Halogen_Query.ChildQuery,
    Fork: Halogen_Query.Fork,
    GetRef: Halogen_Query.GetRef,
    Kill: Halogen_Query.Kill,
    Lift: Halogen_Query.Lift,
    Par: Halogen_Query.Par,
    Raise: Halogen_Query.Raise,
    State: Halogen_Query.State,
    Subscribe: Halogen_Query.Subscribe,
    Unsubscribe: Halogen_Query.Unsubscribe,
    HalogenM: Halogen_Query.HalogenM,
    Action: Halogen_Query.Action,
    Finalize: Halogen_Query.Finalize,
    Initialize: Halogen_Query.Initialize,
    Query: Halogen_Query.Query,
    Receive: Halogen_Query.Receive,
    RefLabel: Halogen_Query.RefLabel,
    fork: Halogen_Query.fork,
    get: Halogen_Query.get,
    getHTMLElementRef: Halogen_Query.getHTMLElementRef,
    getRef: Halogen_Query.getRef,
    gets: Halogen_Query.gets,
    kill: Halogen_Query.kill,
    lift: Halogen_Query.lift,
    liftAff: Halogen_Query.liftAff,
    liftEffect: Halogen_Query.liftEffect,
    mkRequest: Halogen_Query.mkRequest,
    mkTell: Halogen_Query.mkTell,
    modify: Halogen_Query.modify,
    modify_: Halogen_Query.modify_,
    put: Halogen_Query.put,
    query: Halogen_Query.query,
    queryAll: Halogen_Query.queryAll,
    raise: Halogen_Query.raise,
    request: Halogen_Query.request,
    subscribe: Halogen_Query.subscribe,
    "subscribe'": Halogen_Query["subscribe'"],
    tell: Halogen_Query.tell,
    unsubscribe: Halogen_Query.unsubscribe
};

},{"../Data.Lazy/index.js":"520Le","../Halogen.Component/index.js":"2KBrj","../Halogen.Data.Slot/index.js":"elbaz","../Halogen.HTML/index.js":"kATLU","../Halogen.HTML.Core/index.js":"eONdi","../Halogen.Query/index.js":"bZbzU"}],"kATLU":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Halogen_VDom_Thunk = require("../Halogen.VDom.Thunk/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var slot_ = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(label) {
                return function(p) {
                    return function(component) {
                        return function(input) {
                            return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(Halogen_Component.componentSlot()(dictIsSymbol)(dictOrd)(label)(p)(component)(input)(Data_Function["const"](Data_Maybe.Nothing.value))));
                        };
                    };
                };
            };
        };
    };
};
var slot = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(label) {
                return function(p) {
                    return function(component) {
                        return function(input) {
                            return function(outputQuery) {
                                return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(Halogen_Component.componentSlot()(dictIsSymbol)(dictOrd)(label)(p)(component)(input)(function($6) {
                                    return Data_Maybe.Just.create(outputQuery($6));
                                })));
                            };
                        };
                    };
                };
            };
        };
    };
};
var memoized = function(eqFn) {
    return function(f) {
        return Data_Functor.map(Data_Functor.functorFn)(function($7) {
            return Halogen_HTML_Core.widget(Halogen_Component.ThunkSlot.create($7));
        })(Halogen_VDom_Thunk.thunked(eqFn)(f));
    };
};
var lazy3 = function(f) {
    return function(a) {
        return function(b) {
            return function(c) {
                return Halogen_HTML_Core.widget(new Halogen_Component.ThunkSlot(Halogen_VDom_Thunk.thunk3(f, a, b, c)));
            };
        };
    };
};
var lazy2 = function(f) {
    return function(a) {
        return function(b) {
            return Halogen_HTML_Core.widget(new Halogen_Component.ThunkSlot(Halogen_VDom_Thunk.thunk2(f, a, b)));
        };
    };
};
var lazy = function(f) {
    return function(a) {
        return Halogen_HTML_Core.widget(new Halogen_Component.ThunkSlot(Halogen_VDom_Thunk.thunk1(f, a)));
    };
};
var fromPlainHTML = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    fromPlainHTML: fromPlainHTML,
    slot: slot,
    slot_: slot_,
    memoized: memoized,
    lazy: lazy,
    lazy2: lazy2,
    lazy3: lazy3,
    AttrName: Halogen_HTML_Core.AttrName,
    ClassName: Halogen_HTML_Core.ClassName,
    ElemName: Halogen_HTML_Core.ElemName,
    HTML: Halogen_HTML_Core.HTML,
    Namespace: Halogen_HTML_Core.Namespace,
    PropName: Halogen_HTML_Core.PropName,
    IsProp: Halogen_HTML_Core.IsProp,
    handler: Halogen_HTML_Core.handler,
    text: Halogen_HTML_Core.text,
    a: Halogen_HTML_Elements.a,
    a_: Halogen_HTML_Elements.a_,
    abbr: Halogen_HTML_Elements.abbr,
    abbr_: Halogen_HTML_Elements.abbr_,
    address: Halogen_HTML_Elements.address,
    address_: Halogen_HTML_Elements.address_,
    area: Halogen_HTML_Elements.area,
    article: Halogen_HTML_Elements.article,
    article_: Halogen_HTML_Elements.article_,
    aside: Halogen_HTML_Elements.aside,
    aside_: Halogen_HTML_Elements.aside_,
    audio: Halogen_HTML_Elements.audio,
    audio_: Halogen_HTML_Elements.audio_,
    b: Halogen_HTML_Elements.b,
    b_: Halogen_HTML_Elements.b_,
    base: Halogen_HTML_Elements.base,
    bdi: Halogen_HTML_Elements.bdi,
    bdi_: Halogen_HTML_Elements.bdi_,
    bdo: Halogen_HTML_Elements.bdo,
    bdo_: Halogen_HTML_Elements.bdo_,
    blockquote: Halogen_HTML_Elements.blockquote,
    blockquote_: Halogen_HTML_Elements.blockquote_,
    body: Halogen_HTML_Elements.body,
    body_: Halogen_HTML_Elements.body_,
    br: Halogen_HTML_Elements.br,
    br_: Halogen_HTML_Elements.br_,
    button: Halogen_HTML_Elements.button,
    button_: Halogen_HTML_Elements.button_,
    canvas: Halogen_HTML_Elements.canvas,
    caption: Halogen_HTML_Elements.caption,
    caption_: Halogen_HTML_Elements.caption_,
    cite: Halogen_HTML_Elements.cite,
    cite_: Halogen_HTML_Elements.cite_,
    code: Halogen_HTML_Elements.code,
    code_: Halogen_HTML_Elements.code_,
    col: Halogen_HTML_Elements.col,
    colgroup: Halogen_HTML_Elements.colgroup,
    colgroup_: Halogen_HTML_Elements.colgroup_,
    command: Halogen_HTML_Elements.command,
    datalist: Halogen_HTML_Elements.datalist,
    datalist_: Halogen_HTML_Elements.datalist_,
    dd: Halogen_HTML_Elements.dd,
    dd_: Halogen_HTML_Elements.dd_,
    del: Halogen_HTML_Elements.del,
    del_: Halogen_HTML_Elements.del_,
    details: Halogen_HTML_Elements.details,
    details_: Halogen_HTML_Elements.details_,
    dfn: Halogen_HTML_Elements.dfn,
    dfn_: Halogen_HTML_Elements.dfn_,
    dialog: Halogen_HTML_Elements.dialog,
    dialog_: Halogen_HTML_Elements.dialog_,
    div: Halogen_HTML_Elements.div,
    div_: Halogen_HTML_Elements.div_,
    dl: Halogen_HTML_Elements.dl,
    dl_: Halogen_HTML_Elements.dl_,
    dt: Halogen_HTML_Elements.dt,
    dt_: Halogen_HTML_Elements.dt_,
    element: Halogen_HTML_Elements.element,
    elementNS: Halogen_HTML_Elements.elementNS,
    em: Halogen_HTML_Elements.em,
    em_: Halogen_HTML_Elements.em_,
    embed: Halogen_HTML_Elements.embed,
    embed_: Halogen_HTML_Elements.embed_,
    fieldset: Halogen_HTML_Elements.fieldset,
    fieldset_: Halogen_HTML_Elements.fieldset_,
    figcaption: Halogen_HTML_Elements.figcaption,
    figcaption_: Halogen_HTML_Elements.figcaption_,
    figure: Halogen_HTML_Elements.figure,
    figure_: Halogen_HTML_Elements.figure_,
    footer: Halogen_HTML_Elements.footer,
    footer_: Halogen_HTML_Elements.footer_,
    form: Halogen_HTML_Elements.form,
    form_: Halogen_HTML_Elements.form_,
    h1: Halogen_HTML_Elements.h1,
    h1_: Halogen_HTML_Elements.h1_,
    h2: Halogen_HTML_Elements.h2,
    h2_: Halogen_HTML_Elements.h2_,
    h3: Halogen_HTML_Elements.h3,
    h3_: Halogen_HTML_Elements.h3_,
    h4: Halogen_HTML_Elements.h4,
    h4_: Halogen_HTML_Elements.h4_,
    h5: Halogen_HTML_Elements.h5,
    h5_: Halogen_HTML_Elements.h5_,
    h6: Halogen_HTML_Elements.h6,
    h6_: Halogen_HTML_Elements.h6_,
    head: Halogen_HTML_Elements.head,
    head_: Halogen_HTML_Elements.head_,
    header: Halogen_HTML_Elements.header,
    header_: Halogen_HTML_Elements.header_,
    hr: Halogen_HTML_Elements.hr,
    hr_: Halogen_HTML_Elements.hr_,
    html: Halogen_HTML_Elements.html,
    html_: Halogen_HTML_Elements.html_,
    i: Halogen_HTML_Elements.i,
    i_: Halogen_HTML_Elements.i_,
    iframe: Halogen_HTML_Elements.iframe,
    img: Halogen_HTML_Elements.img,
    input: Halogen_HTML_Elements.input,
    ins: Halogen_HTML_Elements.ins,
    ins_: Halogen_HTML_Elements.ins_,
    kbd: Halogen_HTML_Elements.kbd,
    kbd_: Halogen_HTML_Elements.kbd_,
    keyed: Halogen_HTML_Elements.keyed,
    keyedNS: Halogen_HTML_Elements.keyedNS,
    label: Halogen_HTML_Elements.label,
    label_: Halogen_HTML_Elements.label_,
    legend: Halogen_HTML_Elements.legend,
    legend_: Halogen_HTML_Elements.legend_,
    li: Halogen_HTML_Elements.li,
    li_: Halogen_HTML_Elements.li_,
    link: Halogen_HTML_Elements.link,
    main: Halogen_HTML_Elements.main,
    main_: Halogen_HTML_Elements.main_,
    map: Halogen_HTML_Elements.map,
    map_: Halogen_HTML_Elements.map_,
    mark: Halogen_HTML_Elements.mark,
    mark_: Halogen_HTML_Elements.mark_,
    menu: Halogen_HTML_Elements.menu,
    menu_: Halogen_HTML_Elements.menu_,
    menuitem: Halogen_HTML_Elements.menuitem,
    menuitem_: Halogen_HTML_Elements.menuitem_,
    meta: Halogen_HTML_Elements.meta,
    meter: Halogen_HTML_Elements.meter,
    meter_: Halogen_HTML_Elements.meter_,
    nav: Halogen_HTML_Elements.nav,
    nav_: Halogen_HTML_Elements.nav_,
    noscript: Halogen_HTML_Elements.noscript,
    noscript_: Halogen_HTML_Elements.noscript_,
    object: Halogen_HTML_Elements.object,
    object_: Halogen_HTML_Elements.object_,
    ol: Halogen_HTML_Elements.ol,
    ol_: Halogen_HTML_Elements.ol_,
    optgroup: Halogen_HTML_Elements.optgroup,
    optgroup_: Halogen_HTML_Elements.optgroup_,
    option: Halogen_HTML_Elements.option,
    option_: Halogen_HTML_Elements.option_,
    output: Halogen_HTML_Elements.output,
    output_: Halogen_HTML_Elements.output_,
    p: Halogen_HTML_Elements.p,
    p_: Halogen_HTML_Elements.p_,
    param: Halogen_HTML_Elements.param,
    pre: Halogen_HTML_Elements.pre,
    pre_: Halogen_HTML_Elements.pre_,
    progress: Halogen_HTML_Elements.progress,
    progress_: Halogen_HTML_Elements.progress_,
    q: Halogen_HTML_Elements.q,
    q_: Halogen_HTML_Elements.q_,
    rp: Halogen_HTML_Elements.rp,
    rp_: Halogen_HTML_Elements.rp_,
    rt: Halogen_HTML_Elements.rt,
    rt_: Halogen_HTML_Elements.rt_,
    ruby: Halogen_HTML_Elements.ruby,
    ruby_: Halogen_HTML_Elements.ruby_,
    samp: Halogen_HTML_Elements.samp,
    samp_: Halogen_HTML_Elements.samp_,
    script: Halogen_HTML_Elements.script,
    script_: Halogen_HTML_Elements.script_,
    section: Halogen_HTML_Elements.section,
    section_: Halogen_HTML_Elements.section_,
    select: Halogen_HTML_Elements.select,
    select_: Halogen_HTML_Elements.select_,
    small: Halogen_HTML_Elements.small,
    small_: Halogen_HTML_Elements.small_,
    source: Halogen_HTML_Elements.source,
    span: Halogen_HTML_Elements.span,
    span_: Halogen_HTML_Elements.span_,
    strong: Halogen_HTML_Elements.strong,
    strong_: Halogen_HTML_Elements.strong_,
    style: Halogen_HTML_Elements.style,
    style_: Halogen_HTML_Elements.style_,
    sub: Halogen_HTML_Elements.sub,
    sub_: Halogen_HTML_Elements.sub_,
    summary: Halogen_HTML_Elements.summary,
    summary_: Halogen_HTML_Elements.summary_,
    sup: Halogen_HTML_Elements.sup,
    sup_: Halogen_HTML_Elements.sup_,
    table: Halogen_HTML_Elements.table,
    table_: Halogen_HTML_Elements.table_,
    tbody: Halogen_HTML_Elements.tbody,
    tbody_: Halogen_HTML_Elements.tbody_,
    td: Halogen_HTML_Elements.td,
    td_: Halogen_HTML_Elements.td_,
    textarea: Halogen_HTML_Elements.textarea,
    tfoot: Halogen_HTML_Elements.tfoot,
    tfoot_: Halogen_HTML_Elements.tfoot_,
    th: Halogen_HTML_Elements.th,
    th_: Halogen_HTML_Elements.th_,
    thead: Halogen_HTML_Elements.thead,
    thead_: Halogen_HTML_Elements.thead_,
    time: Halogen_HTML_Elements.time,
    time_: Halogen_HTML_Elements.time_,
    title: Halogen_HTML_Elements.title,
    title_: Halogen_HTML_Elements.title_,
    tr: Halogen_HTML_Elements.tr,
    tr_: Halogen_HTML_Elements.tr_,
    track: Halogen_HTML_Elements.track,
    u: Halogen_HTML_Elements.u,
    u_: Halogen_HTML_Elements.u_,
    ul: Halogen_HTML_Elements.ul,
    ul_: Halogen_HTML_Elements.ul_,
    "var": Halogen_HTML_Elements["var"],
    var_: Halogen_HTML_Elements.var_,
    video: Halogen_HTML_Elements.video,
    video_: Halogen_HTML_Elements.video_,
    wbr: Halogen_HTML_Elements.wbr,
    withKeys: Halogen_HTML_Elements.withKeys,
    withKeys_: Halogen_HTML_Elements.withKeys_,
    attr: Halogen_HTML_Properties.attr,
    attrNS: Halogen_HTML_Properties.attrNS,
    prop: Halogen_HTML_Properties.prop
};

},{"../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Halogen.Component/index.js":"2KBrj","../Halogen.HTML.Core/index.js":"eONdi","../Halogen.HTML.Elements/index.js":"lpFvC","../Halogen.HTML.Properties/index.js":"jzLLQ","../Halogen.VDom.Thunk/index.js":"eijHo","../Unsafe.Coerce/index.js":"6gO81"}],"jzLLQ":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType/index.js");
var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod/index.js");
var DOM_HTML_Indexed_InputAcceptType = require("../DOM.HTML.Indexed.InputAcceptType/index.js");
var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");
var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType/index.js");
var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType/index.js");
var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff/index.js");
var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType/index.js");
var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue/index.js");
var DOM_HTML_Indexed_ScopeValue = require("../DOM.HTML.Indexed.ScopeValue/index.js");
var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var IProp = function(x) {
    return x;
};
var ref = function() {
    var go = function(p) {
        return function(mel) {
            return new Data_Maybe.Just(new Halogen_Query_Input.RefUpdate(p, mel));
        };
    };
    return function($9) {
        return Halogen_HTML_Core.ref(go($9));
    };
}();
var prop = function(dictIsProp) {
    return Halogen_HTML_Core.prop(dictIsProp);
};
var readOnly = prop(Halogen_HTML_Core.isPropBoolean)("readOnly");
var rel = prop(Halogen_HTML_Core.isPropString)("rel");
var required = prop(Halogen_HTML_Core.isPropBoolean)("required");
var rowSpan = prop(Halogen_HTML_Core.isPropInt)("rowSpan");
var rows = prop(Halogen_HTML_Core.isPropInt)("rows");
var scope = prop(Halogen_HTML_Core.isPropScopeValue)("scope");
var selected = prop(Halogen_HTML_Core.isPropBoolean)("selected");
var selectedIndex = prop(Halogen_HTML_Core.isPropInt)("selectedIndex");
var spellcheck = prop(Halogen_HTML_Core.isPropBoolean)("spellcheck");
var src = prop(Halogen_HTML_Core.isPropString)("src");
var step = prop(Halogen_HTML_Core.isPropStepValue)("step");
var tabIndex = prop(Halogen_HTML_Core.isPropInt)("tabIndex");
var target = prop(Halogen_HTML_Core.isPropString)("target");
var title = prop(Halogen_HTML_Core.isPropString)("title");
var type_ = function(dictIsProp) {
    return prop(dictIsProp)("type");
};
var value = prop(Halogen_HTML_Core.isPropString)("value");
var width = prop(Halogen_HTML_Core.isPropInt)("width");
var preload = prop(Halogen_HTML_Core.isPropPreloadValue)("preload");
var poster = prop(Halogen_HTML_Core.isPropString)("poster");
var placeholder = prop(Halogen_HTML_Core.isPropString)("placeholder");
var pattern = prop(Halogen_HTML_Core.isPropString)("pattern");
var noValidate = prop(Halogen_HTML_Core.isPropBoolean)("noValidate");
var newtypeIProp = new Data_Newtype.Newtype(function() {
    return undefined;
});
var name = prop(Halogen_HTML_Core.isPropString)("name");
var muted = prop(Halogen_HTML_Core.isPropBoolean)("muted");
var multiple = prop(Halogen_HTML_Core.isPropBoolean)("multiple");
var min = prop(Halogen_HTML_Core.isPropNumber)("min");
var method = prop(Halogen_HTML_Core.isPropFormMethod)("method");
var max = prop(Halogen_HTML_Core.isPropNumber)("max");
var loop = prop(Halogen_HTML_Core.isPropBoolean)("loop");
var id = prop(Halogen_HTML_Core.isPropString)("id");
var id_ = function(dictWarn) {
    return id;
};
var href = prop(Halogen_HTML_Core.isPropString)("href");
var height = prop(Halogen_HTML_Core.isPropInt)("height");
var functorIProp = new Data_Functor.Functor(function(f) {
    return function(m) {
        return Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_Input.functorInput)(f))(m);
    };
});
var $$for = prop(Halogen_HTML_Core.isPropString)("htmlFor");
var expand = function(dictUnion) {
    return Unsafe_Coerce.unsafeCoerce;
};
var enctype = prop(Halogen_HTML_Core.isPropMediaType)("enctype");
var draggable = prop(Halogen_HTML_Core.isPropBoolean)("draggable");
var download = prop(Halogen_HTML_Core.isPropString)("download");
var disabled = prop(Halogen_HTML_Core.isPropBoolean)("disabled");
var enabled = function() {
    var $10 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
    return function($11) {
        return disabled($10($11));
    };
}();
var controls = prop(Halogen_HTML_Core.isPropBoolean)("controls");
var cols = prop(Halogen_HTML_Core.isPropInt)("cols");
var colSpan = prop(Halogen_HTML_Core.isPropInt)("colSpan");
var classes = function() {
    var $12 = prop(Halogen_HTML_Core.isPropString)("className");
    var $13 = Data_String_Common.joinWith(" ");
    var $14 = Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap());
    return function($15) {
        return $12($13($14($15)));
    };
}();
var class_ = function() {
    var $16 = prop(Halogen_HTML_Core.isPropString)("className");
    var $17 = Data_Newtype.unwrap();
    return function($18) {
        return $16($17($18));
    };
}();
var checked = prop(Halogen_HTML_Core.isPropBoolean)("checked");
var charset = prop(Halogen_HTML_Core.isPropString)("charset");
var autoplay = prop(Halogen_HTML_Core.isPropBoolean)("autoplay");
var autofocus = prop(Halogen_HTML_Core.isPropBoolean)("autofocus");
var autocomplete = function() {
    var $19 = prop(Halogen_HTML_Core.isPropOnOff)("autocomplete");
    return function($20) {
        return $19(function(b) {
            if (b) return DOM_HTML_Indexed_OnOff.On.value;
            return DOM_HTML_Indexed_OnOff.Off.value;
        }($20));
    };
}();
var attrNS = function() {
    var $21 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
    return function($22) {
        return Halogen_HTML_Core.attr($21($22));
    };
}();
var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
var list = attr("list");
var style = attr("style");
var alt = prop(Halogen_HTML_Core.isPropString)("alt");
var action = prop(Halogen_HTML_Core.isPropString)("action");
var accept = prop(Halogen_HTML_Core.isPropInputAcceptType)("accept");
module.exports = {
    IProp: IProp,
    prop: prop,
    attr: attr,
    attrNS: attrNS,
    ref: ref,
    expand: expand,
    alt: alt,
    charset: charset,
    class_: class_,
    classes: classes,
    cols: cols,
    rows: rows,
    colSpan: colSpan,
    rowSpan: rowSpan,
    "for": $$for,
    height: height,
    width: width,
    href: href,
    id: id,
    id_: id_,
    name: name,
    rel: rel,
    src: src,
    style: style,
    scope: scope,
    target: target,
    title: title,
    download: download,
    method: method,
    action: action,
    enctype: enctype,
    noValidate: noValidate,
    type_: type_,
    value: value,
    min: min,
    max: max,
    step: step,
    disabled: disabled,
    enabled: enabled,
    required: required,
    readOnly: readOnly,
    spellcheck: spellcheck,
    checked: checked,
    selected: selected,
    selectedIndex: selectedIndex,
    placeholder: placeholder,
    autocomplete: autocomplete,
    list: list,
    autofocus: autofocus,
    multiple: multiple,
    pattern: pattern,
    accept: accept,
    autoplay: autoplay,
    controls: controls,
    loop: loop,
    muted: muted,
    poster: poster,
    preload: preload,
    draggable: draggable,
    tabIndex: tabIndex,
    newtypeIProp: newtypeIProp,
    functorIProp: functorIProp,
    ButtonButton: DOM_HTML_Indexed_ButtonType.ButtonButton,
    ButtonReset: DOM_HTML_Indexed_ButtonType.ButtonReset,
    ButtonSubmit: DOM_HTML_Indexed_ButtonType.ButtonSubmit,
    GET: DOM_HTML_Indexed_FormMethod.GET,
    POST: DOM_HTML_Indexed_FormMethod.POST,
    InputAcceptType: DOM_HTML_Indexed_InputAcceptType.InputAcceptType,
    InputButton: DOM_HTML_Indexed_InputType.InputButton,
    InputCheckbox: DOM_HTML_Indexed_InputType.InputCheckbox,
    InputColor: DOM_HTML_Indexed_InputType.InputColor,
    InputDate: DOM_HTML_Indexed_InputType.InputDate,
    InputDatetimeLocal: DOM_HTML_Indexed_InputType.InputDatetimeLocal,
    InputEmail: DOM_HTML_Indexed_InputType.InputEmail,
    InputFile: DOM_HTML_Indexed_InputType.InputFile,
    InputHidden: DOM_HTML_Indexed_InputType.InputHidden,
    InputImage: DOM_HTML_Indexed_InputType.InputImage,
    InputMonth: DOM_HTML_Indexed_InputType.InputMonth,
    InputNumber: DOM_HTML_Indexed_InputType.InputNumber,
    InputPassword: DOM_HTML_Indexed_InputType.InputPassword,
    InputRadio: DOM_HTML_Indexed_InputType.InputRadio,
    InputRange: DOM_HTML_Indexed_InputType.InputRange,
    InputReset: DOM_HTML_Indexed_InputType.InputReset,
    InputSearch: DOM_HTML_Indexed_InputType.InputSearch,
    InputSubmit: DOM_HTML_Indexed_InputType.InputSubmit,
    InputTel: DOM_HTML_Indexed_InputType.InputTel,
    InputText: DOM_HTML_Indexed_InputType.InputText,
    InputTime: DOM_HTML_Indexed_InputType.InputTime,
    InputUrl: DOM_HTML_Indexed_InputType.InputUrl,
    InputWeek: DOM_HTML_Indexed_InputType.InputWeek,
    MenuContext: DOM_HTML_Indexed_MenuType.MenuContext,
    MenuList: DOM_HTML_Indexed_MenuType.MenuList,
    MenuToolbar: DOM_HTML_Indexed_MenuType.MenuToolbar,
    MenuitemCheckbox: DOM_HTML_Indexed_MenuitemType.MenuitemCheckbox,
    MenuitemCommand: DOM_HTML_Indexed_MenuitemType.MenuitemCommand,
    MenuitemRadio: DOM_HTML_Indexed_MenuitemType.MenuitemRadio,
    Off: DOM_HTML_Indexed_OnOff.Off,
    On: DOM_HTML_Indexed_OnOff.On,
    OrderedListAlphabetic: DOM_HTML_Indexed_OrderedListType.OrderedListAlphabetic,
    OrderedListNumeric: DOM_HTML_Indexed_OrderedListType.OrderedListNumeric,
    PreloadAuto: DOM_HTML_Indexed_PreloadValue.PreloadAuto,
    PreloadMetadata: DOM_HTML_Indexed_PreloadValue.PreloadMetadata,
    PreloadNone: DOM_HTML_Indexed_PreloadValue.PreloadNone,
    ScopeAuto: DOM_HTML_Indexed_ScopeValue.ScopeAuto,
    ScopeCol: DOM_HTML_Indexed_ScopeValue.ScopeCol,
    ScopeColGroup: DOM_HTML_Indexed_ScopeValue.ScopeColGroup,
    ScopeRow: DOM_HTML_Indexed_ScopeValue.ScopeRow,
    ScopeRowGroup: DOM_HTML_Indexed_ScopeValue.ScopeRowGroup,
    Any: DOM_HTML_Indexed_StepValue.Any,
    Step: DOM_HTML_Indexed_StepValue.Step
};

},{"../Control.Applicative/index.js":"dG9TO","../DOM.HTML.Indexed/index.js":"1mTiG","../DOM.HTML.Indexed.ButtonType/index.js":"2Mzrm","../DOM.HTML.Indexed.FormMethod/index.js":"3Xcxc","../DOM.HTML.Indexed.InputAcceptType/index.js":"bcXXX","../DOM.HTML.Indexed.InputType/index.js":"dMvgQ","../DOM.HTML.Indexed.MenuType/index.js":"8aBrQ","../DOM.HTML.Indexed.MenuitemType/index.js":"1EFVs","../DOM.HTML.Indexed.OnOff/index.js":"dmnzS","../DOM.HTML.Indexed.OrderedListType/index.js":"6oXe5","../DOM.HTML.Indexed.PreloadValue/index.js":"1r4GT","../DOM.HTML.Indexed.ScopeValue/index.js":"kBa8s","../DOM.HTML.Indexed.StepValue/index.js":"lnNLc","../Data.Functor/index.js":"iy1jO","../Data.HeytingAlgebra/index.js":"8Mx0E","../Data.Maybe/index.js":"ePH81","../Data.Newtype/index.js":"czJbt","../Data.String.Common/index.js":"kcO4K","../Halogen.HTML.Core/index.js":"eONdi","../Halogen.Query.Input/index.js":"cBedG","../Halogen.VDom.DOM.Prop/index.js":"lN1qa","../Unsafe.Coerce/index.js":"6gO81"}],"1mTiG":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
module.exports = {
};

},{}],"bZbzU":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Halogen_Query_HalogenQ = require("../Halogen.Query.HalogenQ/index.js");
var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var tellAll = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(label) {
                return function(req) {
                    return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.queryAll()(dictIsSymbol)(dictOrd)(label)(req(Data_Unit.unit)));
                };
            };
        };
    };
};
var tell = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(slot) {
                return function(label) {
                    return function(req) {
                        return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(dictIsSymbol)(dictOrd)(slot)(label)(req(Data_Unit.unit)));
                    };
                };
            };
        };
    };
};
var requestAll = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(label) {
                return function(req) {
                    return Halogen_Query_HalogenM.queryAll()(dictIsSymbol)(dictOrd)(label)(req(Control_Category.identity(Control_Category.categoryFn)));
                };
            };
        };
    };
};
var request = function(dictCons) {
    return function(dictIsSymbol) {
        return function(dictOrd) {
            return function(slot) {
                return function(label) {
                    return function(req) {
                        return Halogen_Query_HalogenM.query()(dictIsSymbol)(dictOrd)(slot)(label)(req(Control_Category.identity(Control_Category.categoryFn)));
                    };
                };
            };
        };
    };
};
var mkTell = function(act) {
    return act(Data_Unit.unit);
};
var mkRequest = function(req) {
    return req(Control_Category.identity(Control_Category.categoryFn));
};
var getHTMLElementRef = function() {
    var $13 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function(v) {
        return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v);
    });
    return function($14) {
        return $13(Halogen_Query_HalogenM.getRef($14));
    };
}();
module.exports = {
    mkTell: mkTell,
    tell: tell,
    tellAll: tellAll,
    mkRequest: mkRequest,
    request: request,
    requestAll: requestAll,
    getHTMLElementRef: getHTMLElementRef,
    get: Control_Monad_State_Class.get,
    gets: Control_Monad_State_Class.gets,
    modify: Control_Monad_State_Class.modify,
    modify_: Control_Monad_State_Class.modify_,
    put: Control_Monad_State_Class.put,
    lift: Control_Monad_Trans_Class.lift,
    liftAff: Effect_Aff_Class.liftAff,
    liftEffect: Effect_Class.liftEffect,
    ChildQuery: Halogen_Query_HalogenM.ChildQuery,
    Fork: Halogen_Query_HalogenM.Fork,
    GetRef: Halogen_Query_HalogenM.GetRef,
    Kill: Halogen_Query_HalogenM.Kill,
    Lift: Halogen_Query_HalogenM.Lift,
    Par: Halogen_Query_HalogenM.Par,
    Raise: Halogen_Query_HalogenM.Raise,
    State: Halogen_Query_HalogenM.State,
    Subscribe: Halogen_Query_HalogenM.Subscribe,
    Unsubscribe: Halogen_Query_HalogenM.Unsubscribe,
    HalogenM: Halogen_Query_HalogenM.HalogenM,
    fork: Halogen_Query_HalogenM.fork,
    getRef: Halogen_Query_HalogenM.getRef,
    kill: Halogen_Query_HalogenM.kill,
    query: Halogen_Query_HalogenM.query,
    queryAll: Halogen_Query_HalogenM.queryAll,
    raise: Halogen_Query_HalogenM.raise,
    subscribe: Halogen_Query_HalogenM.subscribe,
    "subscribe'": Halogen_Query_HalogenM["subscribe'"],
    unsubscribe: Halogen_Query_HalogenM.unsubscribe,
    Action: Halogen_Query_HalogenQ.Action,
    Finalize: Halogen_Query_HalogenQ.Finalize,
    Initialize: Halogen_Query_HalogenQ.Initialize,
    Query: Halogen_Query_HalogenQ.Query,
    Receive: Halogen_Query_HalogenQ.Receive,
    RefLabel: Halogen_Query_Input.RefLabel
};

},{"../Control.Bind/index.js":"7Sory","../Control.Category/index.js":"dfcPK","../Control.Monad.State.Class/index.js":"enW6F","../Control.Monad.Trans.Class/index.js":"9pz5v","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Unit/index.js":"d7oKp","../Effect.Aff.Class/index.js":"1okoq","../Effect.Class/index.js":"53rRA","../Halogen.Query.HalogenM/index.js":"7CNtl","../Halogen.Query.HalogenQ/index.js":"fSFYt","../Halogen.Query.Input/index.js":"cBedG","../Web.HTML.HTMLElement/index.js":"60xVV"}],"l8jb5":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Applicative_Free = require("../Control.Applicative.Free/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Coyoneda = require("../Data.Coyoneda/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");
var Halogen_Query_ChildQuery = require("../Halogen.Query.ChildQuery/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Halogen_Query_HalogenQ = require("../Halogen.Query.HalogenQ/index.js");
var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");
var Halogen_Subscription = require("../Halogen.Subscription/index.js");
var Unsafe_Reference = require("../Unsafe.Reference/index.js");
var unsubscribe = function(sid) {
    return function(ref) {
        return function __do() {
            var v = Effect_Ref.read(ref)();
            var subs = Effect_Ref.read(v.subscriptions)();
            return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Halogen_Subscription.unsubscribe)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))();
        };
    };
};
var queueOrRun = function(ref) {
    return function(au) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v) {
            if (v instanceof Data_Maybe.Nothing) return au;
            if (v instanceof Data_Maybe.Just) return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 182, column 33 - line 184, column 57): " + [
                v.constructor.name
            ]);
        });
    };
};
var handleLifecycle = function(lchs) {
    return function(f) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
            initializers: Data_List_Types.Nil.value,
            finalizers: Data_List_Types.Nil.value
        })(lchs)))(function() {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function(result) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function(v) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v.finalizers))(function() {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v.initializers))(function() {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(result);
                        });
                    });
                });
            });
        });
    };
};
var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
var fresh = function(f) {
    return function(ref) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function(i) {
                return {
                    state: i + 1 | 0,
                    value: f(i)
                };
            })(v.fresh));
        });
    };
};
var evalQ = function(render) {
    return function(ref) {
        return function(q) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v) {
                return evalM(render)(ref)(v["component"]["eval"](new Halogen_Query_HalogenQ.Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function["const"](Data_Maybe.Nothing.value))));
            });
        };
    };
};
var evalM = function(render) {
    return function(initRef) {
        return function(v) {
            var evalChildQuery = function(ref) {
                return function(cqb) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v1) {
                        return Halogen_Query_ChildQuery.unChildQueryBox(function(v2) {
                            var evalChild = function(v3) {
                                return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3)))(function(dsx) {
                                    return Halogen_Aff_Driver_State.unDriverStateX(function(ds) {
                                        return evalQ(render)(ds.selfRef)(v2.value1);
                                    })(dsx);
                                }));
                            };
                            return Data_Functor.map(Effect_Aff.functorAff)(v2.value2)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));
                        })(cqb);
                    });
                };
            };
            var go = function(ref) {
                return function(v1) {
                    if (v1 instanceof Halogen_Query_HalogenM.State) return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                        var v3 = v1.value0(v2.state);
                        if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                        if (Data_Boolean.otherwise) return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                            component: v2.component,
                            state: v3.value1,
                            refs: v2.refs,
                            children: v2.children,
                            childrenIn: v2.childrenIn,
                            childrenOut: v2.childrenOut,
                            selfRef: v2.selfRef,
                            handlerRef: v2.handlerRef,
                            pendingQueries: v2.pendingQueries,
                            pendingOuts: v2.pendingOuts,
                            pendingHandlers: v2.pendingHandlers,
                            rendering: v2.rendering,
                            fresh: v2.fresh,
                            subscriptions: v2.subscriptions,
                            forks: v2.forks,
                            lifecycleHandlers: v2.lifecycleHandlers
                        })(ref)))(function() {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function() {
                                return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                            });
                        });
                        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [
                            v3.constructor.name
                        ]);
                    });
                    if (v1 instanceof Halogen_Query_HalogenM.Subscribe) return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function(sid) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Halogen_Subscription.subscribe(v1.value0(sid))(function(act) {
                            return handleAff(evalF(render)(ref)(new Halogen_Query_Input.Action(act)));
                        })))(function(finalize) {
                            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId)(sid)(finalize)))(v2.subscriptions)))(function() {
                                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(sid));
                                });
                            });
                        });
                    });
                    if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(unsubscribe(v1.value0)(ref)))(function() {
                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                    });
                    if (v1 instanceof Halogen_Query_HalogenM.Lift) return v1.value0;
                    if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) return evalChildQuery(ref)(v1.value0);
                    if (v1 instanceof Halogen_Query_HalogenM.Raise) return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.handlerRef)))(function(handler) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queueOrRun(v2.pendingOuts)(handler(v1.value0)))(function() {
                                return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                            });
                        });
                    });
                    if (v1 instanceof Halogen_Query_HalogenM.Par) return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function() {
                        var $78 = Control_Parallel_Class.parallel(Effect_Aff.parallelAff);
                        var $79 = evalM(render)(ref);
                        return function($80) {
                            return $78($79($80));
                        };
                    }())(v1.value0)));
                    if (v1 instanceof Halogen_Query_HalogenM.Fork) return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function(fid) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function(doneRef) {
                                return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Effect_Aff["finally"](Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                    Effect_Ref.modify_(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordForkId)(fid))(v2.forks)();
                                    return Effect_Ref.write(true)(doneRef)();
                                }))(evalM(render)(ref)(v1.value0))))(function(fiber) {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.unlessM(Effect.monadEffect)(Effect_Ref.read(doneRef))(Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId)(fid)(fiber))(v2.forks))))(function() {
                                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(fid));
                                    });
                                });
                            });
                        });
                    });
                    if (v1 instanceof Halogen_Query_HalogenM.Kill) return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.forks)))(function(forkMap) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Effect_Aff.killFiber(Effect_Exception.error("Cancelled")))(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId)(v1.value0)(forkMap)))(function() {
                                return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                            });
                        });
                    });
                    if (v1 instanceof Halogen_Query_HalogenM.GetRef) return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v1.value0)(v2.refs)));
                    });
                    throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 133, column 33): " + [
                        v1.constructor.name
                    ]);
                };
            };
            return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(initRef))(v);
        };
    };
};
var evalF = function(render) {
    return function(ref) {
        return function(v) {
            if (v instanceof Halogen_Query_Input.RefUpdate) return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function(st) {
                return {
                    component: st.component,
                    state: st.state,
                    refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(st.refs),
                    children: st.children,
                    childrenIn: st.childrenIn,
                    childrenOut: st.childrenOut,
                    selfRef: st.selfRef,
                    handlerRef: st.handlerRef,
                    pendingQueries: st.pendingQueries,
                    pendingOuts: st.pendingOuts,
                    pendingHandlers: st.pendingHandlers,
                    rendering: st.rendering,
                    fresh: st.fresh,
                    subscriptions: st.subscriptions,
                    forks: st.forks,
                    lifecycleHandlers: st.lifecycleHandlers
                };
            })));
            if (v instanceof Halogen_Query_Input.Action) return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v1) {
                return evalM(render)(ref)(v1["component"]["eval"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));
            });
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [
                v.constructor.name
            ]);
        };
    };
};
module.exports = {
    evalF: evalF,
    evalQ: evalQ,
    evalM: evalM,
    handleLifecycle: handleLifecycle,
    queueOrRun: queueOrRun,
    handleAff: handleAff
};

},{"../Control.Applicative/index.js":"dG9TO","../Control.Applicative.Free/index.js":"lm4tQ","../Control.Bind/index.js":"7Sory","../Control.Monad/index.js":"alCn2","../Control.Monad.Fork.Class/index.js":"9uAZM","../Control.Monad.Free/index.js":"jYgqw","../Control.Parallel/index.js":"651yb","../Control.Parallel.Class/index.js":"3BOQZ","../Data.Boolean/index.js":"lv1qw","../Data.Coyoneda/index.js":"aCCay","../Data.Either/index.js":"3WZha","../Data.Foldable/index.js":"jWmFN","../Data.Function/index.js":"cuwEt","../Data.Functor/index.js":"iy1jO","../Data.List.Types/index.js":"80Bba","../Data.Map.Internal/index.js":"iS1Sf","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Unit/index.js":"d7oKp","../Effect/index.js":"bKbtZ","../Effect.Aff/index.js":"3YiSJ","../Effect.Class/index.js":"53rRA","../Effect.Exception/index.js":"3J2RH","../Effect.Ref/index.js":"8AWDF","../Halogen.Aff.Driver.State/index.js":"aVy4v","../Halogen.Query.ChildQuery/index.js":"7GVqs","../Halogen.Query.HalogenM/index.js":"7CNtl","../Halogen.Query.HalogenQ/index.js":"fSFYt","../Halogen.Query.Input/index.js":"cBedG","../Halogen.Subscription/index.js":"4FimT","../Unsafe.Reference/index.js":"cv0FE"}],"aVy4v":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Halogen_Data_Slot = require("../Halogen.Data.Slot/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var DriverStateRef = function(x) {
    return x;
};
var DriverState = function(x) {
    return x;
};
var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
var renderStateX_ = function(dictApplicative) {
    return function(f) {
        return unDriverStateX(function(st) {
            return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
        });
    };
};
var mkRenderStateX = Unsafe_Coerce.unsafeCoerce;
var renderStateX = function(dictFunctor) {
    return function(f) {
        return unDriverStateX(function(st) {
            return mkRenderStateX(f(st.rendering));
        });
    };
};
var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
var mapDriverState = function(f) {
    return function(v) {
        return f(v);
    };
};
var initDriverState = function(component) {
    return function(input) {
        return function(handler) {
            return function(lchs) {
                return function __do() {
                    var selfRef = Effect_Ref["new"]({
                    })();
                    var childrenIn = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                    var childrenOut = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                    var handlerRef = Effect_Ref["new"](handler)();
                    var pendingQueries = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                    var pendingOuts = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                    var pendingHandlers = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                    var fresh = Effect_Ref["new"](1)();
                    var subscriptions = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
                    var forks = Effect_Ref["new"](Data_Map_Internal.empty)();
                    var ds = {
                        component: component,
                        state: component.initialState(input),
                        refs: Data_Map_Internal.empty,
                        children: Halogen_Data_Slot.empty,
                        childrenIn: childrenIn,
                        childrenOut: childrenOut,
                        selfRef: selfRef,
                        handlerRef: handlerRef,
                        pendingQueries: pendingQueries,
                        pendingOuts: pendingOuts,
                        pendingHandlers: pendingHandlers,
                        rendering: Data_Maybe.Nothing.value,
                        fresh: fresh,
                        subscriptions: subscriptions,
                        forks: forks,
                        lifecycleHandlers: lchs
                    };
                    Effect_Ref.write(ds)(selfRef)();
                    return mkDriverStateXRef(selfRef);
                };
            };
        };
    };
};
module.exports = {
    DriverState: DriverState,
    mapDriverState: mapDriverState,
    DriverStateRef: DriverStateRef,
    unDriverStateX: unDriverStateX,
    mkDriverStateXRef: mkDriverStateXRef,
    renderStateX: renderStateX,
    renderStateX_: renderStateX_,
    unRenderStateX: unRenderStateX,
    initDriverState: initDriverState
};

},{"../Data.Foldable/index.js":"jWmFN","../Data.List.Types/index.js":"80Bba","../Data.Map.Internal/index.js":"iS1Sf","../Data.Maybe/index.js":"ePH81","../Effect.Ref/index.js":"8AWDF","../Halogen.Data.Slot/index.js":"elbaz","../Unsafe.Coerce/index.js":"6gO81"}],"hcVer":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NodeType = require("../Web.DOM.NodeType/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var previousSibling = function() {
    var $1 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($2) {
        return $1($foreign["_previousSibling"]($2));
    };
}();
var parentNode = function() {
    var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($4) {
        return $3($foreign["_parentNode"]($4));
    };
}();
var parentElement = function() {
    var $5 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($6) {
        return $5($foreign["_parentElement"]($6));
    };
}();
var ownerDocument = function() {
    var $7 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($8) {
        return $7($foreign["_ownerDocument"]($8));
    };
}();
var nodeValue = function() {
    var $9 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($10) {
        return $9($foreign["_nodeValue"]($10));
    };
}();
var nodeType = function(dictPartial) {
    var $11 = Data_Maybe.fromJust();
    var $12 = Data_Enum.toEnum(Web_DOM_NodeType.boundedEnumNodeType);
    return function($13) {
        return $11($12($foreign.nodeTypeIndex($13)));
    };
};
var nextSibling = function() {
    var $14 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($15) {
        return $14($foreign["_nextSibling"]($15));
    };
}();
var lookupPrefix = function(p) {
    var $16 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    var $17 = $foreign["_lookupPrefix"](p);
    return function($18) {
        return $16($17($18));
    };
};
var lookupNamespaceURI = function(ns) {
    var $19 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    var $20 = $foreign["_lookupNamespaceURI"](ns);
    return function($21) {
        return $19($20($21));
    };
};
var lastChild = function() {
    var $22 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($23) {
        return $22($foreign["_lastChild"]($23));
    };
}();
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Node");
var firstChild = function() {
    var $24 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
    return function($25) {
        return $24($foreign["_firstChild"]($25));
    };
}();
module.exports = {
    fromEventTarget: fromEventTarget,
    toEventTarget: toEventTarget,
    nodeType: nodeType,
    ownerDocument: ownerDocument,
    parentNode: parentNode,
    parentElement: parentElement,
    firstChild: firstChild,
    lastChild: lastChild,
    previousSibling: previousSibling,
    nextSibling: nextSibling,
    nodeValue: nodeValue,
    lookupPrefix: lookupPrefix,
    lookupNamespaceURI: lookupNamespaceURI,
    nodeTypeIndex: $foreign.nodeTypeIndex,
    nodeName: $foreign.nodeName,
    baseURI: $foreign.baseURI,
    hasChildNodes: $foreign.hasChildNodes,
    childNodes: $foreign.childNodes,
    setNodeValue: $foreign.setNodeValue,
    textContent: $foreign.textContent,
    setTextContent: $foreign.setTextContent,
    normalize: $foreign.normalize,
    clone: $foreign.clone,
    deepClone: $foreign.deepClone,
    isEqualNode: $foreign.isEqualNode,
    compareDocumentPositionBits: $foreign.compareDocumentPositionBits,
    contains: $foreign.contains,
    isDefaultNamespace: $foreign.isDefaultNamespace,
    insertBefore: $foreign.insertBefore,
    appendChild: $foreign.appendChild,
    replaceChild: $foreign.replaceChild,
    removeChild: $foreign.removeChild
};

},{"./foreign.js":"9Ln1B","../Data.Enum/index.js":"1zIX3","../Data.Functor/index.js":"iy1jO","../Data.Maybe/index.js":"ePH81","../Data.Nullable/index.js":"5SdGN","../Effect/index.js":"bKbtZ","../Unsafe.Coerce/index.js":"6gO81","../Web.DOM.Internal.Types/index.js":"8LKBm","../Web.DOM.NodeType/index.js":"hnk22","../Web.Internal.FFI/index.js":"1vIWP"}],"9Ln1B":[function(require,module,exports) {
"use strict";
var getEffProp = function(name) {
    return function(node) {
        return function() {
            return node[name];
        };
    };
};
exports.nodeTypeIndex = function(node) {
    return node.nodeType;
};
exports.nodeName = function(node) {
    return node.nodeName;
};
exports.baseURI = getEffProp("baseURI");
exports._ownerDocument = getEffProp("ownerDocument");
exports._parentNode = getEffProp("parentNode");
exports._parentElement = getEffProp("parentElement");
exports.hasChildNodes = function(node) {
    return function() {
        return node.hasChildNodes();
    };
};
exports.childNodes = getEffProp("childNodes");
exports._firstChild = getEffProp("firstChild");
exports._lastChild = getEffProp("lastChild");
exports._previousSibling = getEffProp("previousSibling");
exports._nextSibling = getEffProp("nextSibling");
exports._nodeValue = getEffProp("nodeValue");
exports.setNodeValue = function(value) {
    return function(node) {
        return function() {
            node.nodeValue = value;
        };
    };
};
exports.textContent = getEffProp("textContent");
exports.setTextContent = function(value) {
    return function(node) {
        return function() {
            node.textContent = value;
        };
    };
};
exports.normalize = function(node) {
    return function() {
        node.normalize();
    };
};
exports.clone = function(node) {
    return function() {
        return node.cloneNode(false);
    };
};
exports.deepClone = function(node) {
    return function() {
        return node.cloneNode(true);
    };
};
exports.isEqualNode = function(node1) {
    return function(node2) {
        return function() {
            return node1.isEqualNode(node2);
        };
    };
};
exports.compareDocumentPositionBits = function(node1) {
    return function(node2) {
        return function() {
            return node1.compareDocumentPosition(node2);
        };
    };
};
exports.contains = function(node1) {
    return function(node2) {
        return function() {
            return node1.contains(node2);
        };
    };
};
exports._lookupPrefix = function(prefix) {
    return function(node) {
        return function() {
            return node.lookupPrefix(prefix);
        };
    };
};
exports._lookupNamespaceURI = function(ns) {
    return function(node) {
        return function() {
            return node.lookupNamespaceURI(ns);
        };
    };
};
exports.isDefaultNamespace = function(ns) {
    return function(node) {
        return function() {
            return node.isDefaultNamespace(ns);
        };
    };
};
exports.insertBefore = function(node1) {
    return function(node2) {
        return function(parent) {
            return function() {
                parent.insertBefore(node1, node2);
            };
        };
    };
};
exports.appendChild = function(node) {
    return function(parent) {
        return function() {
            parent.appendChild(node);
        };
    };
};
exports.replaceChild = function(newChild) {
    return function(oldChild) {
        return function(parent) {
            return function() {
                parent.replaceChild(newChild, oldChild);
            };
        };
    };
};
exports.removeChild = function(node) {
    return function(parent) {
        return function() {
            parent.removeChild(node);
        };
    };
};

},{}],"hnk22":[function(require,module,exports) {
// Generated by purs version 0.14.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var ElementNode = function() {
    function ElementNode1() {
    }
    ElementNode1.value = new ElementNode1();
    return ElementNode1;
}();
var AttributeNode = function() {
    function AttributeNode1() {
    }
    AttributeNode1.value = new AttributeNode1();
    return AttributeNode1;
}();
var TextNode = function() {
    function TextNode1() {
    }
    TextNode1.value = new TextNode1();
    return TextNode1;
}();
var CDATASectionNode = function() {
    function CDATASectionNode1() {
    }
    CDATASectionNode1.value = new CDATASectionNode1();
    return CDATASectionNode1;
}();
var EntityReferenceNode = function() {
    function EntityReferenceNode1() {
    }
    EntityReferenceNode1.value = new EntityReferenceNode1();
    return EntityReferenceNode1;
}();
var EntityNode = function() {
    function EntityNode1() {
    }
    EntityNode1.value = new EntityNode1();
    return EntityNode1;
}();
var ProcessingInstructionNode = function() {
    function ProcessingInstructionNode1() {
    }
    ProcessingInstructionNode1.value = new ProcessingInstructionNode1();
    return ProcessingInstructionNode1;
}();
var CommentNode = function() {
    function CommentNode1() {
    }
    CommentNode1.value = new CommentNode1();
    return CommentNode1;
}();
var DocumentNode = function() {
    function DocumentNode1() {
    }
    DocumentNode1.value = new DocumentNode1();
    return DocumentNode1;
}();
var DocumentTypeNode = function() {
    function DocumentTypeNode1() {
    }
    DocumentTypeNode1.value = new DocumentTypeNode1();
    return DocumentTypeNode1;
}();
var DocumentFragmentNode = function() {
    function DocumentFragmentNode1() {
    }
    DocumentFragmentNode1.value = new DocumentFragmentNode1();
    return DocumentFragmentNode1;
}();
var NotationNode = function() {
    function NotationNode1() {
    }
    NotationNode1.value = new NotationNode1();
    return NotationNode1;
}();
var toEnumNodeType = function(v) {
    if (v === 1) return new Data_Maybe.Just(ElementNode.value);
    if (v === 2) return new Data_Maybe.Just(AttributeNode.value);
    if (v === 3) return new Data_Maybe.Just(TextNode.value);
    if (v === 4) return new Data_Maybe.Just(CDATASectionNode.value);
    if (v === 5) return new Data_Maybe.Just(EntityReferenceNode.value);
    if (v === 6) return new Data_Maybe.Just(EntityNode.value);
    if (v === 7) return new Data_Maybe.Just(ProcessingInstructionNode.value);
    if (v === 8) return new Data_Maybe.Just(CommentNode.value);
    if (v === 9) return new Data_Maybe.Just(DocumentNode.value);
    if (v === 10) return new Data_Maybe.Just(DocumentTypeNode.value);
    if (v === 11) return new Data_Maybe.Just(DocumentFragmentNode.value);
    if (v === 12) return new Data_Maybe.Just(NotationNode.value);
    return Data_Maybe.Nothing.value;
};
var showNodeType = new Data_Show.Show(function(v) {
    if (v instanceof ElementNode) return "ElementNode";
    if (v instanceof AttributeNode) return "AttributeNode";
    if (v instanceof TextNode) return "TextNode";
    if (v instanceof CDATASectionNode) return "CDATASectionNode";
    if (v instanceof EntityReferenceNode) return "EntityReferenceNode";
    if (v instanceof EntityNode) return "EntityNode";
    if (v instanceof ProcessingInstructionNode) return "ProcessingInstructionNode";
    if (v instanceof CommentNode) return "CommentNode";
    if (v instanceof DocumentNode) return "DocumentNode";
    if (v instanceof DocumentTypeNode) return "DocumentTypeNode";
    if (v instanceof DocumentFragmentNode) return "DocumentFragmentNode";
    if (v instanceof NotationNode) return "NotationNode";
    throw new Error("Failed pattern match at Web.DOM.NodeType (line 39, column 1 - line 51, column 37): " + [
        v.constructor.name
    ]);
});
var fromEnumNodeType = function(v) {
    if (v instanceof ElementNode) return 1;
    if (v instanceof AttributeNode) return 2;
    if (v instanceof TextNode) return 3;
    if (v instanceof CDATASectionNode) return 4;
    if (v instanceof EntityReferenceNode) return 5;
    if (v instanceof EntityNode) return 6;
    if (v instanceof ProcessingInstructionNode) return 7;
    if (v instanceof CommentNode) return 8;
    if (v instanceof DocumentNode) return 9;
    if (v instanceof DocumentTypeNode) return 10;
    if (v instanceof DocumentFragmentNode) return 11;
    if (v instanceof NotationNode) return 12;
    throw new Error("Failed pattern match at Web.DOM.NodeType (line 68, column 1 - line 68, column 36): " + [
        v.constructor.name
    ]);
};
var eqNodeType = new Data_Eq.Eq(function(x) {
    return function(y) {
        if (x instanceof ElementNode && y instanceof ElementNode) return true;
        if (x instanceof AttributeNode && y instanceof AttributeNode) return true;
        if (x instanceof TextNode && y instanceof TextNode) return true;
        if (x instanceof CDATASectionNode && y instanceof CDATASectionNode) return true;
        if (x instanceof EntityReferenceNode && y instanceof EntityReferenceNode) return true;
        if (x instanceof EntityNode && y instanceof EntityNode) return true;
        if (x instanceof ProcessingInstructionNode && y instanceof ProcessingInstructionNode) return true;
        if (x instanceof CommentNode && y instanceof CommentNode) return true;
        if (x instanceof DocumentNode && y instanceof DocumentNode) return true;
        if (x instanceof DocumentTypeNode && y instanceof DocumentTypeNode) return true;
        if (x instanceof DocumentFragmentNode && y instanceof DocumentFragmentNode) return true;
        if (x instanceof NotationNode && y instanceof NotationNode) return true;
        return false;
    };
});
var ordNodeType = new Data_Ord.Ord(function() {
    return eqNodeType;
}, function(x) {
    return function(y) {
        return Data_Ord.compare(Data_Ord.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
    };
});
var enumNodeType = new Data_Enum.Enum(function() {
    return ordNodeType;
}, Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType), Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType));
var boundedNodeType = new Data_Bounded.Bounded(function() {
    return ordNodeType;
}, ElementNode.value, NotationNode.value);
var boundedEnumNodeType = new Data_Enum.BoundedEnum(function() {
    return boundedNodeType;
}, function() {
    return enumNodeType;
}, 12, fromEnumNodeType, toEnumNodeType);
module.exports = {
    ElementNode: ElementNode,
    AttributeNode: AttributeNode,
    TextNode: TextNode,
    CDATASectionNode: CDATASectionNode,
    EntityReferenceNode: EntityReferenceNode,
    EntityNode: EntityNode,
    ProcessingInstructionNode: ProcessingInstructionNode,
    CommentNode: CommentNode,
    DocumentNode: DocumentNode,
    DocumentTypeNode: DocumentTypeNode,
    DocumentFragmentNode: DocumentFragmentNode,
    NotationNode: NotationNode,
    eqNodeType: eqNodeType,
    ordNodeType: ordNodeType,
    boundedNodeType: boundedNodeType,
    enumNodeType: enumNodeType,
    boundedEnumNodeType: boundedEnumNodeType,
    showNodeType: showNodeType
};

},{"../Data.Bounded/index.js":"jzt4h","../Data.Enum/index.js":"1zIX3","../Data.Eq/index.js":"c3b8F","../Data.Maybe/index.js":"ePH81","../Data.Ord/index.js":"f14nh","../Data.Show/index.js":"b6tNW"}]},["3DdAu","lXfBE"], "lXfBE", "parcelRequire4fae")

//# sourceMappingURL=index.54a7e0e0.js.map
