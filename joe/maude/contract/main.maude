load ./semantics/semantics
--- load ./verification/model-check  

--- (rewrite < 'borrower : Actor | none > none containsActor 'borrower .)

(rewrite [100] transpile empty .)

eof

(rewrite
  transpile (
    RULE 'PayPayment
    PARTY 'borrower
    MUST DO 'pay_payment
    WITHIN 1 YEAR
    HENCE 'something
    LEST 'something_else,

    RULE 'PayPayment1
    PARTY 'borrower
    MUST DO 'pay_payment
    WITHIN 1 YEAR
    HENCE 'something
    LEST 'something_else
  )
.)

eof

(srewrite
  start

  < 'lender : Actor | none > 
  < 'borrower : Actor | none >

  < 'state : AbstractMachineState |
    time : (T:Time),
    rules : (Rs:Set{Rule}),
    activeRules : (
      PARTY 'borrower MUST DO 'pay_payment WITHIN (T0:Time),
      PARTY 'borrower SHANT DO 'default WITHIN (T1:Time)
    )
  >
  using event[actorName <- 'lender] 
  --- (all ; event *)
.)

(reduce
  modelCheck(none, [] Top)
.)