--- view Set`{Qid`} from TRIV to SET{Qid} is
---   sort Elt to Set`{Qid`} .
--- endv

---(
  List -- quotient by associativity and commutativity of concat --> finite multiset
       -- quotient by idempotence of concat --> finite set 
)
fmod NAMES is
  protecting QID .
  protecting SET{Qid} .

  sort Names .
  subsorts Qid < Names < Set{Qid} .

  ops NOTHING : -> Names .
  ops _AND_ : Names Names -> Names
    [assoc comm id: empty prec 121 format (d r os d)] .

  vars names names' : Names .

  eq NOTHING = empty .
  eq names AND names' = names, names' .

endfm

fmod RULE is
  protecting BOOL .
  protecting STRING .
  protecting NAT .
  protecting NAMES .

  sorts
    Rule RuleName ActorName Deadline ActionName Deontic Date Duration
    Situation DeonticActionNameDeadline .

  subsorts Qid Bool < Situation .

---(
  MUST -- obligation
  MAY -- permission
  SHANT -- prohibition
)
  ops MUST MAY SHANT : -> Deontic [ctor] .

  ops __DO_ : Deontic Deadline Qid -> DeonticActionNameDeadline [ctor] .

  ops _DO__ : Deontic Qid Deadline -> DeonticActionNameDeadline [ctor] .

---(
  BY is for dates, ie absolute deadlines
  WITHIN is for relative deadlines
)
  ops BY_ : Nat -> Deadline [ctor].
  ops WITHIN_ : Duration -> Deadline [ctor] .

  ops _DAY _WEEK _MONTH _YEAR : Nat -> Duration [ctor] .

  --- op _ performs _ at _ : ActorName ActionName Date -> Event [ctor] .

  --- op RULE _ UPON _ WHILE _ PARTY _ _ DO _ _ HENCE _ LEST _ :
  ---   Qid Situation Situation Qid Deontic Qid Deadline
  ---   Situation Situation -> Rule [ctor] .

  ops RULE_PARTY__HENCE_LEST_ :
    Qid Qid DeonticActionNameDeadline Set{Qid} Set{Qid} -> Rule [ctor] .

  ops RULE_PARTY__ :
    Qid Qid DeonticActionNameDeadline -> Rule [ctor] .

  ops RULE_PARTY__HENCE_ :
    Qid Qid DeonticActionNameDeadline Set{Qid} -> Rule [ctor] .

  ops RULE_PARTY__LEST_ :
    Qid Qid DeonticActionNameDeadline Set{Qid} -> Rule [ctor] .

  vars ruleName actorName actionName : Qid .
  vars deontic : Deontic .
  vars deadline : Deadline .
  vars hence lest : Set{Qid} .

  eq deontic deadline DO actionName = deontic DO actionName deadline .

  eq
    RULE ruleName
    PARTY actorName
    deontic DO actionName
    deadline
  = RULE ruleName
    PARTY actorName
    deontic DO actionName
    deadline
    HENCE NOTHING
    LEST NOTHING .

  eq
    RULE ruleName
    PARTY actorName
    deontic DO actionName
    deadline
    HENCE hence
  = RULE ruleName
    PARTY actorName
    deontic DO actionName
    deadline
    HENCE hence
    LEST NOTHING .

  eq
    RULE ruleName
    PARTY actorName
    deontic DO actionName
    deadline
    LEST lest
  = RULE ruleName
    PARTY actorName
    deontic DO actionName
    deadline
    HENCE NOTHING
    LEST lest .

endfm

view Rule from TRIV to RULE is
  sort Elt to Rule .
endv

view Set`{Rule`} from TRIV to SET{Rule} is
  sort Elt to Set`{Rule`} .
endv

--- fmod RULE-LIST is
---   protecting LIST{Rule} * (
---     sort NeList{Rule} to NeRuleList,
---     sort List{Rule} to RuleList
---   ) .
--- endfm