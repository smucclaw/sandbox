---(
  Defeasibility logic theorem prover in Maude.

  This work is largely based on Guido's paper:
  https://arxiv.org/pdf/cs/0511055.pdf

  We encode the endofunctor on page 10 into a transition system which performs
  the same transfinite fixpoint iteration procedure.
  With this, we use reachability analysis and LTL model checking to check
  the provability of formulae in defeasible theories.
)

sload prover

mod DEFEAS is
  pr PROVER .

endm

red
  Atoms ('p # 'q # 'r)
  Facts 'p
  Rules (('r1 : 'p ==> 'r) # ('r2 : 'p ==> not 'r))
---(
  A preference relation is the transitive closure of a one-step reduction
  relation given by a small-step operational semantics.
  In other words, we view the state space of the defined transition system as
  a thin category representing a poset.

  In simpler terms, this means we define a transition system with rules
  of the form 'r1 => 'r2, and we then take 'r3 < 'r4 to mean 'r4 is reachable
  from 'r3 in one or more steps.
)
  PrefRel (
    mod 'PREF-REL is
      protecting 'META-LEVEL .
      sorts none .
      none none none none
      --- 'r1 < 'r2
      rl ''r1.Sort => ''r2.Sort [none] . 
    endm
  )
  ⊢ +∂ not 'r .

quit

--- rew in DEFEAS-DYNAMICS :
---   initialize (
---     Atoms ('p # 'q # 'r)
---     Facts 'p
---     Rules (('r1 : 'p -> 'r) # ('r2 : 'p -> not 'r))
---     PrefRel testPrefRel
---   ) .

--- set print attribute on .
--- set trace on .
--- continue 1 .