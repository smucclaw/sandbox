digraph {
	0 [label="< 0 | 'no-children('erica) $ empty | 'mother('jane,'mike) :- nil ; 'mother('sally,'john) :- nil ; 'father('tom,'sally) :- nil ; 'father('tom,'erica) :- nil ; 'father('mike,'john) :- nil ; 'sibling(x{1},x{2}) :- 'parent(x{3},x{1}),'parent(x{3},x{2}) ; 'parent(x{1},x{2}) :- 'father(x{1},x{2}) ; 'parent(x{1},x{2}) :- 'mother(x{1},x{2}) ; 'relative(x{1},x{2}) :- 'parent(x{1},x{3}),'parent(x{3},x{2}) ; 'relative(x{1},x{2}) :- 'sibling(x{1},x{3}),'relative(x{3},x{2}) ; '\+(x{1}) :- 'call(x{1}),!,'fail(x{1}) ; '\+(x{1}) :- nil ; 'no-children(x{1}) :- '\+('parent[x{1},x{2}]) >"];
	0 -> 1 [label="clause"];
	1 [label="< 2 | '\+('parent[x{1},x{2}]) $ x{1} -> 'erica | 'mother('jane,'mike) :- nil ; 'mother('sally,'john) :- nil ; 'father('tom,'sally) :- nil ; 'father('tom,'erica) :- nil ; 'father('mike,'john) :- nil ; 'sibling(x{1},x{2}) :- 'parent(x{3},x{1}),'parent(x{3},x{2}) ; 'parent(x{1},x{2}) :- 'father(x{1},x{2}) ; 'parent(x{1},x{2}) :- 'mother(x{1},x{2}) ; 'relative(x{1},x{2}) :- 'parent(x{1},x{3}),'parent(x{3},x{2}) ; 'relative(x{1},x{2}) :- 'sibling(x{1},x{3}),'relative(x{3},x{2}) ; '\+(x{1}) :- 'call(x{1}),!,'fail(x{1}) ; '\+(x{1}) :- nil ; 'no-children(x{1}) :- '\+('parent[x{1},x{2}]) >"];
	1 -> 2 [label="clause"];
	2 [label="< 3 | 'parent(x{1},x{2}),!,'fail(x{3}) $ x{1} -> 'erica ; x{3} -> 'parent[x{1},x{2}] | 'mother('jane,'mike) :- nil ; 'mother('sally,'john) :- nil ; 'father('tom,'sally) :- nil ; 'father('tom,'erica) :- nil ; 'father('mike,'john) :- nil ; 'sibling(x{1},x{2}) :- 'parent(x{3},x{1}),'parent(x{3},x{2}) ; 'parent(x{1},x{2}) :- 'father(x{1},x{2}) ; 'parent(x{1},x{2}) :- 'mother(x{1},x{2}) ; 'relative(x{1},x{2}) :- 'parent(x{1},x{3}),'parent(x{3},x{2}) ; 'relative(x{1},x{2}) :- 'sibling(x{1},x{3}),'relative(x{3},x{2}) ; '\+(x{1}) :- 'call(x{1}),!,'fail(x{1}) ; '\+(x{1}) :- nil ; 'no-children(x{1}) :- '\+('parent[x{1},x{2}]) >"];
	1 -> 3 [label="clause"];
	3 [label="< 3 | nil $ x{1} -> 'erica ; x{3} -> 'parent[x{1},x{2}] | 'mother('jane,'mike) :- nil ; 'mother('sally,'john) :- nil ; 'father('tom,'sally) :- nil ; 'father('tom,'erica) :- nil ; 'father('mike,'john) :- nil ; 'sibling(x{1},x{2}) :- 'parent(x{3},x{1}),'parent(x{3},x{2}) ; 'parent(x{1},x{2}) :- 'father(x{1},x{2}) ; 'parent(x{1},x{2}) :- 'mother(x{1},x{2}) ; 'relative(x{1},x{2}) :- 'parent(x{1},x{3}),'parent(x{3},x{2}) ; 'relative(x{1},x{2}) :- 'sibling(x{1},x{3}),'relative(x{3},x{2}) ; '\+(x{1}) :- 'call(x{1}),!,'fail(x{1}) ; '\+(x{1}) :- nil ; 'no-children(x{1}) :- '\+('parent[x{1},x{2}]) >"];
	3 -> 3;
}
