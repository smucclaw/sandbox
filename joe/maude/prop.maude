***(
  This is based on:
  https://github.com/carlosolarte/L-framework
  https://www.mat.ufrn.br/cade-27/wp-content/uploads/2019/09/tutorial-RL.pdf

)

*** load full-maude.maude

*** Well-formed formulae.
fmod WFF is
  pr QID .
  sort Prop .
  sort Wff .
  subsort Qid < Prop < Wff .

  op _→_ : Wff Wff -> Wff [ctor assoc prec 30] .
  op ¬_ : Wff -> Wff [prec 25] .

endfm

view Wff from TRIV to WFF is
  sort Elt to Wff .
endv

*** Contexts.
fmod Ctx is
  pr SET{Wff} * (
    sort Set{Wff} to Ctx,
    sort NESet{Wff} to NECtx
  ) .
endfm

*** Sequents.
fmod Sequent is
  pr Ctx .
  sorts Sequent Sequents .
  subsort Sequent < Sequents .

  op Leaf : -> Sequent [ctor] .
  op _⊢_ : Ctx Ctx -> Sequent [ctor prec 122] .

  *** Meta-theoretic conjunction of judgement forms.
  op _ _ : Sequents Sequents -> Sequents [ctor comm assoc id: Leaf] .
endfm

***(
  Bottom-up proof search for Gentzen's LK.

  Thanks to cut elimination, the complexity of the active formulae induces a
  well-founded ordering on our search procedure, thus guaranteeing strong
  normalization.

  Would be interesting to adapt this to obtain a proof search procedure for
  nonmonotonic, defeasible logics.
)
mod LK is
  pr Sequent .
  vars P : Prop .
  vars Γ Δ : Ctx .
  vars φ ψ : Wff .

  rl [Axm] :
    Γ, φ ⊢ φ, Δ
  =>
    Leaf .

  rl [ImpL] :
    Γ, φ → ψ ⊢ Δ
  =>
    (Γ ⊢ φ, Δ) (Γ, ψ ⊢ Δ) .

  rl [ImpR] :
    Γ ⊢ φ → ψ, Δ
  =>
    Γ, φ ⊢ ψ, Δ .

  rl [NegL] :
    Γ, ¬ φ ⊢ Δ
  =>
    Γ ⊢ φ, Δ .

  rl [NegR] :
    Γ ⊢ ¬ φ, Δ
  =>
    Γ, φ ⊢ Δ .
endm

set trace on .

rewrite ¬ 'P → ¬ 'Q ⊢ 'Q → 'P .
*** show search graph .