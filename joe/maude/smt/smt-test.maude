load model-checker
load smtex

mod SMT-TEST is
  protecting BOOL .
  protecting BOOLEAN .
  protecting QUANTIFIER .
  protecting REAL-INTEGER .
  protecting STRING .

  including MODEL-CHECKER + SATISFACTION .
  protecting LTL .

---(
  data SmtResult where
    Proved :: SmtResult
    Disproved :: String -> SmtResult
)
  sorts SmtResult .
  ops Proved : -> SmtResult [ctor] .
  ops Disproved_ : String -> SmtResult [ctor] .

  ops smtCheck : Boolean -> SmtResult [special (id-hook SpecialHubSymbol)].

  --- sorts SmtFormulaResult .
  --- subsorts Boolean < SmtFormulaResult .
  --- subsorts SmtResult < SmtFormulaResult .

---(
  data State where
    Prove :: Boolean -> State
    Proved :: State
    Disproved :: String -> State
)
  ops Prove_ : Boolean -> State .
  subsorts SmtResult < State .

  vars smtFormula : Boolean .
  vars counterEg : String .

  rl [smt-result] : Prove smtFormula => smtCheck(smtFormula) .

  ops Proved : -> Prop .
  eq Proved |= Proved = true .

  ops Disproved : -> Prop .
  eq Disproved counterEg |= Disproved = true .

  ops ltlFormula : -> Prop .
  eq ltlFormula = [] <> Proved .

  ops x y z : -> Real [ctor] .

  op f : Real -> Real .

  --- eq f(x) = x .

  ops initialState : -> State .
  eq initialState
  = Prove (x < y implies exists z . (x < f(z) and f(z) < y)) .

endm